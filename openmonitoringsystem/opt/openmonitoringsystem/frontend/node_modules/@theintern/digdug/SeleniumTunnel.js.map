{"version":3,"file":"SeleniumTunnel.js","sourceRoot":"","sources":["../../src/SeleniumTunnel.ts"],"names":[],"mappings":"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","sourcesContent":["import Tunnel, {\n\tTunnelProperties,\n\tDownloadOptions,\n\tChildExecutor\n} from './Tunnel';\nimport { format } from 'util';\nimport { join } from 'path';\nimport Task from '@dojo/core/async/Task';\nimport { fileExists, on, writeFile } from './util';\nimport { Handle } from '@dojo/core/interfaces';\nimport { mixin } from '@dojo/core/lang';\nimport { satisfies } from 'semver';\n\nconst SeleniumVersion = '3.5.2';\nconst ChromeVersion = '2.33';\nconst FirefoxVersion = '0.18.0';\nconst IEVersion = '3.5.1';\n\n/**\n * A Selenium tunnel. This tunnel downloads the\n * [[http://www.seleniumhq.org/download/|Selenium-standalone server]] and any\n * necessary WebDriver executables, and handles starting and stopping Selenium.\n *\n * The primary configuration option is [[SeleniumTunnel.drivers|drivers]], which\n * determines which browsers the Selenium tunnel will support.\n *\n * Note that Java must be installed and in the system path to use this tunnel.\n *\n * The standard browser names (for the `browserName` selenium capability) are:\n *\n * * `MicrosoftEdge`\n * * `chrome`\n * * `firefox`\n * * `internet explorer`\n * * `safari`\n */\nexport default class SeleniumTunnel extends Tunnel\n\timplements SeleniumProperties {\n\t/** Additional arguments to send to the Selenium server at startup */\n\tseleniumArgs: string[];\n\n\t/**\n\t * The desired Selenium drivers to install. Each entry may be a string or an\n\t * object. Strings must be the names of existing drivers in SeleniumTunnel.\n\t * An object with a 'name' property is a configuration object -- the name\n\t * must be the name of an existing driver in SeleniumTunnel, and the\n\t * remaining properties will be used to configure that driver. An object\n\t * without a 'name' property is a driver definition. It must contain three\n\t * properties:\n\t *\n\t * - executable - the name of the driver executable\n\t * - url - the URL where the driver can be downloaded from\n\t * - seleniumProperty - the name of the Java property used to tell\n\t *   Selenium where the driver is\n\t *\n\t * ```js\n\t * [\n\t *     'chrome',\n\t *     {\n\t *         name: 'firefox',\n\t *         version: '0.8.0'\n\t *     },\n\t *     {\n\t *         url: 'https://github.com/operasoftware/operachromiumdriver/releases/.../operadriver_mac64.zip',\n\t *         executable: 'operadriver',\n\t *         seleniumProperty: 'webdriver.opera.driver'\n\t *     }\n\t * ]\n\t *\n\t * @default [ 'chrome' ]\n\t */\n\tdrivers: DriverDescriptor[];\n\n\t/**\n\t * The base address where Selenium artifacts may be found.\n\t *\n\t * @default https://selenium-release.storage.googleapis.com\n\t */\n\tbaseUrl: string;\n\n\t/**\n\t * The desired version of selenium to install.\n\t *\n\t * @default 3.3.1\n\t */\n\tversion: string;\n\n\t/**\n\t * Timeout in milliseconds for communicating with the Selenium server\n\t *\n\t * @default 5000\n\t */\n\tseleniumTimeout: number;\n\n\tconstructor(options?: SeleniumOptions) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\tseleniumArgs: null,\n\t\t\t\t\tdrivers: ['chrome'],\n\t\t\t\t\tbaseUrl: 'https://selenium-release.storage.googleapis.com',\n\t\t\t\t\tversion: SeleniumVersion,\n\t\t\t\t\tseleniumTimeout: 5000\n\t\t\t\t},\n\t\t\t\toptions || {}\n\t\t\t)\n\t\t);\n\t}\n\n\tget artifact() {\n\t\treturn `selenium-server-standalone-${this.version}.jar`;\n\t}\n\n\tget directory() {\n\t\treturn join(__dirname, 'selenium-standalone');\n\t}\n\n\tget executable() {\n\t\treturn 'java';\n\t}\n\n\tget isDownloaded() {\n\t\tconst directory = this.directory;\n\t\treturn (\n\t\t\tfileExists(join(directory, this.artifact)) &&\n\t\t\tthis._getDriverConfigs().every(config => {\n\t\t\t\treturn fileExists(join(directory, config.executable));\n\t\t\t})\n\t\t);\n\t}\n\n\tget url() {\n\t\tconst majorMinorVersion = this.version.slice(\n\t\t\t0,\n\t\t\tthis.version.lastIndexOf('.')\n\t\t);\n\t\treturn format(\n\t\t\t'%s/%s/%s',\n\t\t\tthis.baseUrl,\n\t\t\tmajorMinorVersion,\n\t\t\tthis.artifact\n\t\t);\n\t}\n\n\tdownload(forceDownload = false): Task<void> {\n\t\tif (!forceDownload && this.isDownloaded) {\n\t\t\treturn Task.resolve();\n\t\t}\n\n\t\tlet tasks: Task<void>[];\n\n\t\treturn new Task(\n\t\t\tresolve => {\n\t\t\t\tconst configs: RemoteFile[] = [\n\t\t\t\t\t{\n\t\t\t\t\t\turl: this.url,\n\t\t\t\t\t\texecutable: this.artifact,\n\t\t\t\t\t\tdontExtract: true\n\t\t\t\t\t},\n\t\t\t\t\t...this._getDriverConfigs()\n\t\t\t\t];\n\n\t\t\t\ttasks = configs.map(config => {\n\t\t\t\t\tconst executable = config.executable;\n\t\t\t\t\tconst dontExtract = Boolean(config.dontExtract);\n\n\t\t\t\t\tif (fileExists(join(this.directory, executable))) {\n\t\t\t\t\t\treturn Task.resolve();\n\t\t\t\t\t}\n\n\t\t\t\t\t// TODO: progress events\n\t\t\t\t\treturn this._downloadFile(\n\t\t\t\t\t\tconfig.url,\n\t\t\t\t\t\tthis.proxy,\n\t\t\t\t\t\t<SeleniumDownloadOptions>{ executable, dontExtract }\n\t\t\t\t\t);\n\t\t\t\t});\n\n\t\t\t\tresolve(Task.all(tasks).then(() => {}));\n\t\t\t},\n\t\t\t() => {\n\t\t\t\ttasks &&\n\t\t\t\t\ttasks.forEach(task => {\n\t\t\t\t\t\ttask.cancel();\n\t\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\tsendJobState() {\n\t\t// This is a noop for Selenium\n\t\treturn Task.resolve();\n\t}\n\n\tprotected _getDriverConfigs(): DriverFile[] {\n\t\tfunction getDriverConfig(name: string, options?: any) {\n\t\t\tconst Constructor = driverNameMap[name];\n\t\t\tif (!Constructor) {\n\t\t\t\tthrow new Error('Invalid driver name \"' + name + '\"');\n\t\t\t}\n\t\t\treturn new Constructor(options);\n\t\t}\n\n\t\treturn this.drivers.map(function(data) {\n\t\t\tif (typeof data === 'string') {\n\t\t\t\treturn getDriverConfig(data);\n\t\t\t}\n\n\t\t\tif (typeof data === 'object' && (<any>data).name) {\n\t\t\t\treturn getDriverConfig((<any>data).name, data);\n\t\t\t}\n\n\t\t\t// data is a driver definition\n\t\t\treturn <DriverFile>data;\n\t\t});\n\t}\n\n\tprotected _makeArgs(): string[] {\n\t\tconst directory = this.directory;\n\t\tconst driverConfigs = this._getDriverConfigs();\n\t\tconst args: string[] = [];\n\n\t\tdriverConfigs.reduce(function(args: string[], config) {\n\t\t\tconst file = join(directory, config.executable);\n\t\t\targs.push('-D' + config.seleniumProperty + '=' + file);\n\t\t\treturn args;\n\t\t}, args);\n\n\t\tif (this.seleniumArgs) {\n\t\t\targs.push(...this.seleniumArgs);\n\t\t}\n\n\t\targs.push(\n\t\t\t'-jar',\n\t\t\tjoin(this.directory, this.artifact),\n\t\t\t'-port',\n\t\t\tthis.port\n\t\t);\n\n\t\tif (this.verbose) {\n\t\t\targs.push('-debug');\n\t\t\tif (satisfies(this.version, '>=3.1.0 <3.5.0')) {\n\t\t\t\targs.push('true');\n\t\t\t}\n\t\t\tconsole.log('Starting with arguments: ', args.join(' '));\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tprotected _postDownloadFile(\n\t\tdata: Buffer,\n\t\toptions: SeleniumDownloadOptions\n\t) {\n\t\tconst executable = options.executable!;\n\t\tif (options.dontExtract) {\n\t\t\treturn writeFile(data, join(this.directory, executable));\n\t\t}\n\t\treturn super._postDownloadFile(data, options);\n\t}\n\n\tprotected _start(executor: ChildExecutor) {\n\t\tlet handle: Handle;\n\t\tconst task = this._makeChild((child, resolve, reject) => {\n\t\t\thandle = on(child.stderr, 'data', (data: string) => {\n\t\t\t\t// Selenium recommends that we poll the hub looking for a status\n\t\t\t\t// response\n\t\t\t\t// https://github.com/seleniumhq/selenium-google-code-issue-archive/issues/7957\n\t\t\t\t// We're going against the recommendation here for a few reasons\n\t\t\t\t// 1. There's no default pid or log to look for errors to\n\t\t\t\t//    provide a specific failure\n\t\t\t\t// 2. Polling on a failed server start could leave us with an\n\t\t\t\t//    unpleasant wait\n\t\t\t\t// 3. Just polling a selenium server doesn't guarantee it's the\n\t\t\t\t//    server we started\n\t\t\t\t// 4. This works pretty well\n\t\t\t\tdata = String(data);\n\t\t\t\tif (data.indexOf('Selenium Server is up and running') > -1) {\n\t\t\t\t\tresolve();\n\t\t\t\t} else if (data.indexOf('Address already in use') !== -1) {\n\t\t\t\t\treject(new Error('Address is already in use'));\n\n\t\t\t\t\t// Kill the child since we're reporting that startup failed\n\t\t\t\t\tchild.kill('SIGINT');\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (this.verbose) {\n\t\t\t\ton(child.stderr, 'data', (data: string) => {\n\t\t\t\t\tprocess.stderr.write(data);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\texecutor(child, resolve, reject);\n\t\t});\n\n\t\ttask.then(() => handle.destroy(), () => handle.destroy());\n\n\t\treturn task;\n\t}\n}\n\nexport interface DriverFile extends RemoteFile {\n\tseleniumProperty: string;\n}\n\nexport interface RemoteFile {\n\tdontExtract?: boolean;\n\texecutable: string;\n\turl: string;\n}\n\nexport type DriverDescriptor =\n\t| 'chrome'\n\t| 'ie'\n\t| 'firefox'\n\t| DriverFile\n\t| { name: string; version?: string };\n\nexport interface SeleniumProperties extends TunnelProperties {\n\tseleniumArgs: string[];\n\tdrivers: DriverDescriptor[];\n\tbaseUrl: string;\n\tversion: string;\n\tseleniumTimeout: number;\n}\n\nexport type SeleniumOptions = Partial<SeleniumProperties>;\n\nexport interface SeleniumDownloadOptions extends DownloadOptions {\n\texecutable?: string;\n\tdontExtract?: boolean;\n}\n\ntype DriverConstructor = { new (config?: any): DriverFile };\n\nabstract class Config<T> {\n\tconstructor(config: T) {\n\t\tmixin(this, config);\n\t}\n\n\tabstract readonly executable: string;\n\tabstract readonly url: string;\n\tabstract readonly seleniumProperty?: string;\n}\n\ninterface ChromeProperties {\n\tarch: string;\n\tbaseUrl: string;\n\tplatform: string;\n\tversion: string;\n}\n\ntype ChromeOptions = Partial<ChromeProperties>;\n\nclass ChromeConfig extends Config<ChromeOptions>\n\timplements ChromeProperties, DriverFile {\n\tarch: string;\n\tbaseUrl: string;\n\tplatform: string;\n\tversion: string;\n\n\tconstructor(options: ChromeOptions) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\tarch: process.arch,\n\t\t\t\t\tbaseUrl: 'https://chromedriver.storage.googleapis.com',\n\t\t\t\t\tplatform: process.platform,\n\t\t\t\t\tversion: ChromeVersion\n\t\t\t\t},\n\t\t\t\toptions\n\t\t\t)\n\t\t);\n\t}\n\n\tget artifact() {\n\t\tlet platform = this.platform;\n\t\tif (platform === 'linux') {\n\t\t\tplatform = 'linux' + (this.arch === 'x64' ? '64' : '32');\n\t\t} else if (platform === 'darwin') {\n\t\t\tconst parts = String(this.version)\n\t\t\t\t.split('.')\n\t\t\t\t.map(Number);\n\t\t\tconst isGreater = [2, 22].some(function(part, i) {\n\t\t\t\treturn parts[i] > part;\n\t\t\t});\n\t\t\tplatform = isGreater ? 'mac64' : 'mac32';\n\t\t}\n\t\treturn format('chromedriver_%s.zip', platform);\n\t}\n\n\tget url() {\n\t\treturn format('%s/%s/%s', this.baseUrl, this.version, this.artifact);\n\t}\n\n\tget executable() {\n\t\treturn this.platform === 'win32' ? 'chromedriver.exe' : 'chromedriver';\n\t}\n\n\tget seleniumProperty() {\n\t\treturn 'webdriver.chrome.driver';\n\t}\n}\n\ninterface FirefoxProperties {\n\tarch: string;\n\tbaseUrl: string;\n\tplatform: string;\n\tversion: string;\n}\n\ntype FirefoxOptions = Partial<FirefoxProperties>;\n\nclass FirefoxConfig extends Config<FirefoxOptions>\n\timplements FirefoxProperties, DriverFile {\n\tarch: string;\n\tbaseUrl: string;\n\tplatform: string;\n\tversion: string;\n\n\tconstructor(options: FirefoxOptions) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\tarch: process.arch,\n\t\t\t\t\tbaseUrl:\n\t\t\t\t\t\t'https://github.com/mozilla/geckodriver/releases/download',\n\t\t\t\t\tplatform: process.platform,\n\t\t\t\t\tversion: FirefoxVersion\n\t\t\t\t},\n\t\t\t\toptions\n\t\t\t)\n\t\t);\n\t}\n\n\tget artifact() {\n\t\tlet platform = this.platform;\n\t\tif (platform === 'linux') {\n\t\t\tplatform = 'linux' + (this.arch === 'x64' ? '64' : '32');\n\t\t} else if (platform === 'win32') {\n\t\t\tplatform = 'win' + (this.arch === 'x64' ? '64' : '32');\n\t\t} else if (platform === 'darwin') {\n\t\t\tplatform = 'macos';\n\t\t}\n\t\tconst extension = /^win/.test(platform) ? '.zip' : '.tar.gz';\n\t\treturn format(\n\t\t\t'geckodriver-v%s-%s%s',\n\t\t\tthis.version,\n\t\t\tplatform,\n\t\t\textension\n\t\t);\n\t}\n\n\tget url() {\n\t\treturn format('%s/v%s/%s', this.baseUrl, this.version, this.artifact);\n\t}\n\n\tget executable() {\n\t\treturn this.platform === 'win32' ? 'geckodriver.exe' : 'geckodriver';\n\t}\n\n\tget seleniumProperty() {\n\t\treturn 'webdriver.gecko.driver';\n\t}\n}\n\n// tslint:disable-next-line:interface-name\ninterface IEProperties {\n\tarch: string;\n\tbaseUrl: string;\n\tversion: string;\n}\n\ntype IEOptions = Partial<IEProperties>;\n\nclass IEConfig extends Config<IEOptions> implements IEProperties, DriverFile {\n\tarch: string;\n\tbaseUrl: string;\n\tversion: string;\n\n\tconstructor(options: IEOptions) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\tarch: process.arch,\n\t\t\t\t\tbaseUrl: 'https://selenium-release.storage.googleapis.com',\n\t\t\t\t\tversion: IEVersion\n\t\t\t\t},\n\t\t\t\toptions\n\t\t\t)\n\t\t);\n\t}\n\n\tget artifact() {\n\t\tconst architecture = this.arch === 'x64' ? 'x64' : 'Win32';\n\t\treturn format('IEDriverServer_%s_%s.zip', architecture, this.version);\n\t}\n\n\tget url() {\n\t\tconst majorMinorVersion = this.version.slice(\n\t\t\t0,\n\t\t\tthis.version.lastIndexOf('.')\n\t\t);\n\t\treturn format(\n\t\t\t'%s/%s/%s',\n\t\t\tthis.baseUrl,\n\t\t\tmajorMinorVersion,\n\t\t\tthis.artifact\n\t\t);\n\t}\n\n\tget executable() {\n\t\treturn 'IEDriverServer.exe';\n\t}\n\n\tget seleniumProperty() {\n\t\treturn 'webdriver.ie.driver';\n\t}\n}\n\ninterface EdgeProperties {\n\tbaseUrl: string;\n\tuuid: string;\n\tversion: string;\n}\n\ntype EdgeOptions = Partial<EdgeProperties>;\n\nconst EdgeVersions: { [release: string]: string } = {\n\t'15063': '342316D7-EBE0-4F10-ABA2-AE8E0CDF36DD',\n\t'16299': 'D417998A-58EE-4EFE-A7CC-39EF9E020768'\n};\n\nclass EdgeConfig extends Config<EdgeOptions>\n\timplements EdgeProperties, DriverFile {\n\tbaseUrl: string;\n\tuuid: string;\n\tversion: string;\n\n\tconstructor(options: EdgeOptions) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\tbaseUrl: 'https://download.microsoft.com/download',\n\t\t\t\t\tversion: '15063'\n\t\t\t\t},\n\t\t\t\toptions\n\t\t\t)\n\t\t);\n\t}\n\n\tget dontExtract() {\n\t\treturn true;\n\t}\n\n\tget url() {\n\t\tconst uuid = this.uuid || EdgeVersions[this.version];\n\t\tconst a = uuid[0];\n\t\tconst b = uuid[1];\n\t\tconst c = uuid[2];\n\n\t\treturn format(\n\t\t\t'%s/%s/%s/%s/%s/%s',\n\t\t\tthis.baseUrl,\n\t\t\ta,\n\t\t\tb,\n\t\t\tc,\n\t\t\tuuid,\n\t\t\tthis.executable\n\t\t);\n\t}\n\n\tget artifact() {\n\t\treturn 'MicrosoftWebDriver.exe';\n\t}\n\n\tget executable() {\n\t\treturn 'MicrosoftWebDriver.exe';\n\t}\n\n\tget seleniumProperty() {\n\t\treturn 'webdriver.edge.driver';\n\t}\n}\nconst driverNameMap: { [key: string]: DriverConstructor } = {\n\tchrome: ChromeConfig,\n\tfirefox: FirefoxConfig,\n\tie: IEConfig,\n\tedge: EdgeConfig\n};\n"]}