{"version":3,"file":"CrossBrowserTestingTunnel.js","sourceRoot":"","sources":["../../src/CrossBrowserTestingTunnel.ts"],"names":[],"mappings":"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","sourcesContent":["import { watchFile, unwatchFile } from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'path';\nimport request from '@dojo/core/request';\nimport { NodeRequestOptions } from '@dojo/core/request/providers/node';\nimport Tunnel, {\n\tChildExecutor,\n\tNormalizedEnvironment,\n\tTunnelProperties\n} from './Tunnel';\nimport { JobState } from './interfaces';\nimport { on } from './util';\nimport Task from '@dojo/core/async/Task';\nimport { createCompositeHandle, mixin } from '@dojo/core/lang';\nimport { exec } from 'child_process';\n\nconst cbtVersion = '0.1.0';\n\n/**\n * A CrossBrowserTesting tunnel.\n *\n * This tunnel requires some non-standard configuration options (vs the other\n * tunnels):\n *\n * 1. The capabilities must include the username, API key, browser_api_name, and\n *    os_api_name properties\n * 2. The Intern proxyUrl must use 'local' instead of 'localhost'\n *\n * An Intern config using this tunnel might be look like:\n *\n * ```js\n * {\n *     \"serverUrl\": \"http://local:9000\",\n *     \"tunnel\": \"cbt\",\n *     \"environments\": [\n *         {\n *             \"browserName\": \"chrome\",\n *             \"os_api_name\": \"Win10\",\n *             \"browser_api_name\": \"Chrome52\"\n *         }\n *     ],\n * \t   // Other Intern config options...\n * }\n * ```\n *\n * The username and accessKey properties will be initialized using CBT_USERNAME\n * and CBT_APIKEY.\n */\nexport default class CrossBrowserTestingTunnel extends Tunnel {\n\tcbtVersion: string;\n\n\tget auth() {\n\t\treturn `${this.username || ''}:${this.accessKey || ''}`;\n\t}\n\n\tget extraCapabilities() {\n\t\treturn {\n\t\t\tusername: this.username,\n\t\t\tpassword: this.accessKey\n\t\t};\n\t}\n\n\tget isDownloaded() {\n\t\ttry {\n\t\t\trequire('cbt_tunnels');\n\t\t\treturn true;\n\t\t} catch (error) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tconstructor(options?: TunnelProperties) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\taccessKey: process.env.CBT_APIKEY,\n\t\t\t\t\tcbtVersion,\n\t\t\t\t\tenvironmentUrl:\n\t\t\t\t\t\t'https://crossbrowsertesting.com/api/v3/selenium/browsers?format=json',\n\t\t\t\t\texecutable: 'node',\n\t\t\t\t\thostname: 'hub.crossbrowsertesting.com',\n\t\t\t\t\tport: '80',\n\t\t\t\t\tusername: process.env.CBT_USERNAME\n\t\t\t\t},\n\t\t\t\toptions || {}\n\t\t\t)\n\t\t);\n\t}\n\n\tdownload(forceDownload = false): Task<void> {\n\t\tif (!forceDownload && this.isDownloaded) {\n\t\t\treturn Task.resolve();\n\t\t}\n\t\treturn new Task((resolve, reject) => {\n\t\t\texec(\n\t\t\t\t`npm install --no-save cbt_tunnels@${this.cbtVersion}`,\n\t\t\t\t(error, _stdout, stderr) => {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tconsole.error(stderr);\n\t\t\t\t\t\treject(error);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresolve();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t);\n\t\t});\n\t}\n\n\tprotected _makeArgs(readyFile: string): string[] {\n\t\tif (!this.username || !this.accessKey) {\n\t\t\tthrow new Error(\n\t\t\t\t'CrossBrowserTestingTunnel requires a username and access key'\n\t\t\t);\n\t\t}\n\n\t\treturn [\n\t\t\t'node_modules/.bin/cbt_tunnels',\n\t\t\t'--authkey',\n\t\t\tthis.accessKey,\n\t\t\t'--username',\n\t\t\tthis.username,\n\t\t\t'--ready',\n\t\t\treadyFile\n\t\t];\n\t}\n\n\tsendJobState(jobId: string, data: JobState): Task<void> {\n\t\tconst payload = JSON.stringify({\n\t\t\taction: 'set_score',\n\t\t\tscore: data.status || data.success ? 'pass' : 'fail'\n\t\t});\n\n\t\tconst url = `https://crossbrowsertesting.com/api/v3/selenium/${jobId}`;\n\t\treturn request\n\t\t\t.put(url, <NodeRequestOptions>{\n\t\t\t\tbody: payload,\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Length': String(\n\t\t\t\t\t\tBuffer.byteLength(payload, 'utf8')\n\t\t\t\t\t),\n\t\t\t\t\t'Content-Type': 'application/json'\n\t\t\t\t},\n\t\t\t\tuser: this.username,\n\t\t\t\tpassword: this.accessKey,\n\t\t\t\tproxy: this.proxy\n\t\t\t})\n\t\t\t.then<void>(response => {\n\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\t\tif (text) {\n\t\t\t\t\t\t\tconst data = JSON.parse(text);\n\n\t\t\t\t\t\t\tif (data.status) {\n\t\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t\t`Could not save test status (${data.message})`\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Server reported ${response.status} with: ${text}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Server reported ${response.status} with no other data.`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t}\n\n\tprotected _start(executor: ChildExecutor) {\n\t\tconst readyFile = join(tmpdir(), 'CrossBrowserTesting-' + Date.now());\n\n\t\treturn this._makeChild((child, resolve, reject) => {\n\t\t\tlet stdout: string[] | null = [];\n\n\t\t\t// Polling API is used because we are only watching for one file, so\n\t\t\t// efficiency is not a big deal, and the `fs.watch` API has extra\n\t\t\t// restrictions which are best avoided\n\t\t\twatchFile(\n\t\t\t\treadyFile,\n\t\t\t\t{ persistent: false, interval: 1007 },\n\t\t\t\tfunction(current, previous) {\n\t\t\t\t\tif (Number(current.mtime) === Number(previous.mtime)) {\n\t\t\t\t\t\t// readyFile hasn't been modified, so ignore the event\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tunwatchFile(readyFile);\n\t\t\t\t\treadHandle.destroy();\n\t\t\t\t\texitHandle.destroy();\n\t\t\t\t\tstdout = null;\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// The cbt tunnel outputs its startup error messages on stdout.\n\t\t\t// Capture any data on stdout and display it if the process exits\n\t\t\t// early.\n\t\t\tconst readHandle = on(child.stdout, 'data', (data: any) => {\n\t\t\t\tstdout!.push(String(data));\n\t\t\t});\n\t\t\tconst exitHandle = on(child, 'exit', function() {\n\t\t\t\tprocess.stderr.write(stdout!.join(''));\n\t\t\t});\n\n\t\t\tthis._handle = createCompositeHandle(readHandle, exitHandle);\n\n\t\t\texecutor(child, resolve, reject);\n\t\t}, readyFile);\n\t}\n\n\t/**\n\t * Attempt to normalize a TestingBot described environment with the standard\n\t * Selenium capabilities\n\t *\n\t * TestingBot returns a list of environments that looks like:\n\t *\n\t * {\n\t *     \"selenium_name\": \"Chrome36\",\n\t *     \"name\": \"googlechrome\",\n\t *     \"platform\": \"CAPITAN\",\n\t *     \"version\":\"36\"\n\t * }\n\t *\n\t * @param environment a TestingBot environment descriptor\n\t * @returns a normalized descriptor\n\t */\n\tprotected _normalizeEnvironment(environment: any): NormalizedEnvironment {\n\t\tconst platform = environment.api_name;\n\n\t\treturn environment.browsers.map(function(browser: any) {\n\t\t\tconst browserName = browser.type.toLowerCase();\n\n\t\t\treturn {\n\t\t\t\tplatform,\n\t\t\t\tbrowserName,\n\t\t\t\tversion: browser.version,\n\n\t\t\t\tdescriptor: environment,\n\n\t\t\t\tintern: {\n\t\t\t\t\tbrowserName,\n\t\t\t\t\tversion: browser.version,\n\t\t\t\t\tbrowser_api_name: browser.api_name,\n\t\t\t\t\tos_api_name: platform\n\t\t\t\t}\n\t\t\t};\n\t\t});\n\t}\n}\n"]}