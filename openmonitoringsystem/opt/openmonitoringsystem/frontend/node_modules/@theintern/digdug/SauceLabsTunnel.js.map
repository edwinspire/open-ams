{"version":3,"file":"SauceLabsTunnel.js","sourceRoot":"","sources":["../../src/SauceLabsTunnel.ts"],"names":[],"mappings":"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","sourcesContent":["import Tunnel, {\n\tTunnelProperties,\n\tDownloadOptions,\n\tChildExecutor,\n\tNormalizedEnvironment\n} from './Tunnel';\nimport { JobState } from './interfaces';\nimport { chmodSync, watchFile, unwatchFile } from 'fs';\nimport { tmpdir } from 'os';\nimport { join } from 'path';\nimport Task, { State } from '@dojo/core/async/Task';\nimport request from '@dojo/core/request';\nimport { NodeRequestOptions } from '@dojo/core/request/providers/node';\nimport { format as formatUrl, parse as parseUrl, Url } from 'url';\nimport { mixin } from '@dojo/core/lang';\nimport { fileExists, on } from './util';\n\nconst scVersion = '4.4.7';\n\n/**\n * A Sauce Labs tunnel. This tunnel uses Sauce Connect 4 on platforms where it\n * is supported, and Sauce Connect 3 on all other platforms.\n *\n * The accessKey and username properties will be initialized using\n * SAUCE_ACCESS_KEY and SAUCE_USERNAME.\n */\nexport default class SauceLabsTunnel extends Tunnel\n\timplements SauceLabsProperties {\n\t/**\n\t * A list of domains that should not be proxied by the tunnel on the remote\n\t * VM.\n\t */\n\tdirectDomains: string[];\n\n\t/**\n\t * A list of domains that will be proxied by the tunnel on the remote VM.\n\t */\n\ttunnelDomains: string[];\n\n\t/**\n\t * A list of URLs that require additional HTTP authentication. Only the\n\t * hostname, port, and auth are used. This property is only supported by\n\t * Sauce Connect 4 tunnels.\n\t */\n\tdomainAuthentication: string[];\n\n\t/**\n\t * A list of regular expressions corresponding to domains whose connections\n\t * should fail immediately if the VM attempts to make a connection to them.\n\t */\n\tfastFailDomains: string[];\n\n\t/**\n\t * Allows the tunnel to also be used by sub-accounts of the user that\n\t * started the tunnel.\n\t */\n\tisSharedTunnel: boolean;\n\n\t/** A filename where additional logs from the tunnel should be output. */\n\tlogFile: string;\n\n\t/** A filename where Sauce Connect stores its process information. */\n\tpidFile: string;\n\n\t/**\n\t * Specifies the maximum log filesize before rotation, in bytes. This\n\t * property is only supported by Sauce Connect 3 tunnels.\n\t */\n\tlogFileSize: number;\n\n\t/**\n\t * Log statistics about HTTP traffic every `logTrafficStats` milliseconds.\n\t * This property is only supported by Sauce Connect 4 tunnels.\n\t */\n\tlogTrafficStats: number;\n\n\t/**\n\t * An alternative URL for the Sauce REST API. This property is only\n\t * supported by Sauce Connect 3 tunnels.\n\t */\n\trestUrl: string;\n\n\t/**\n\t * A list of domains that should not have their SSL connections re-encrypted\n\t * when going through the tunnel.\n\t */\n\tskipSslDomains: string[];\n\n\t/**\n\t * An additional set of options to use with the Squid proxy for the remote\n\t * VM. This property is only supported by Sauce Connect 3 tunnels.\n\t */\n\tsquidOptions: string;\n\n\t/**\n\t * Whether or not to use the proxy defined at [[Tunnel.proxy]] for the\n\t * tunnel connection itself.\n\t */\n\tuseProxyForTunnel: boolean;\n\n\t/**\n\t * Overrides the version of the VM created on Sauce Labs. This property is\n\t * only supported by Sauce Connect 3 tunnels.\n\t */\n\tvmVersion: string;\n\n\tscVersion: string;\n\n\tconstructor(options?: SauceLabsOptions) {\n\t\tsuper(\n\t\t\tmixin(\n\t\t\t\t{\n\t\t\t\t\taccessKey: process.env.SAUCE_ACCESS_KEY,\n\t\t\t\t\tdirectDomains: [],\n\t\t\t\t\tdirectory: join(__dirname, 'saucelabs'),\n\t\t\t\t\tdomainAuthentication: [],\n\t\t\t\t\tenvironmentUrl:\n\t\t\t\t\t\t'https://saucelabs.com/rest/v1/info/platforms/webdriver',\n\t\t\t\t\tfastFailDomains: [],\n\t\t\t\t\tisSharedTunnel: false,\n\t\t\t\t\tlogTrafficStats: 0,\n\t\t\t\t\tscVersion,\n\t\t\t\t\tskipSslDomains: [],\n\t\t\t\t\ttunnelDomains: [],\n\t\t\t\t\tuseProxyForTunnel: false,\n\t\t\t\t\tusername: process.env.SAUCE_USERNAME\n\t\t\t\t},\n\t\t\t\toptions || {}\n\t\t\t)\n\t\t);\n\t}\n\n\tget auth() {\n\t\treturn `${this.username || ''}:${this.accessKey || ''}`;\n\t}\n\n\tget executable() {\n\t\tconst platform = this.platform === 'darwin' ? 'osx' : this.platform;\n\t\tconst architecture = this.architecture;\n\n\t\tif (\n\t\t\tplatform === 'osx' ||\n\t\t\tplatform === 'win32' ||\n\t\t\t(platform === 'linux' && architecture === 'x64')\n\t\t) {\n\t\t\treturn join(\n\t\t\t\tthis.directory,\n\t\t\t\t'sc-' +\n\t\t\t\t\tthis.scVersion +\n\t\t\t\t\t'-' +\n\t\t\t\t\tplatform +\n\t\t\t\t\t'/bin/sc' +\n\t\t\t\t\t(platform === 'win32' ? '.exe' : '')\n\t\t\t);\n\t\t} else {\n\t\t\treturn 'java';\n\t\t}\n\t}\n\n\tget extraCapabilities() {\n\t\tconst capabilities: any = {};\n\n\t\tif (this.tunnelId) {\n\t\t\tcapabilities['tunnel-identifier'] = this.tunnelId;\n\t\t}\n\n\t\treturn capabilities;\n\t}\n\n\tget isDownloaded() {\n\t\treturn fileExists(\n\t\t\tthis.executable === 'java'\n\t\t\t\t? join(this.directory, 'Sauce-Connect.jar')\n\t\t\t\t: join(this.executable)\n\t\t);\n\t}\n\n\tget url() {\n\t\tconst platform = this.platform === 'darwin' ? 'osx' : this.platform;\n\t\tconst architecture = this.architecture;\n\t\tlet url = 'https://saucelabs.com/downloads/sc-' + this.scVersion + '-';\n\n\t\tif (platform === 'osx' || platform === 'win32') {\n\t\t\turl += platform + '.zip';\n\t\t} else if (platform === 'linux' && architecture === 'x64') {\n\t\t\turl += platform + '.tar.gz';\n\t\t} else {\n\t\t\t// Sauce Connect 3 uses Java so should be able to run on other\n\t\t\t// platforms that Sauce Connect 4 does not support\n\t\t\turl = 'https://saucelabs.com/downloads/Sauce-Connect-3.1-r32.zip';\n\t\t}\n\n\t\treturn url;\n\t}\n\n\tprotected _postDownloadFile(\n\t\tdata: Buffer,\n\t\toptions?: DownloadOptions\n\t): Promise<void> {\n\t\treturn super._postDownloadFile(data, options).then(() => {\n\t\t\tif (this.executable !== 'java') {\n\t\t\t\tchmodSync(this.executable, parseInt('0755', 8));\n\t\t\t}\n\t\t});\n\t}\n\n\tprotected _makeNativeArgs(proxy?: Url): string[] {\n\t\tconst args = ['-u', this.username, '-k', this.accessKey];\n\n\t\tif (proxy) {\n\t\t\tif (proxy.host) {\n\t\t\t\targs.push('-p', proxy.host);\n\t\t\t}\n\n\t\t\tif (proxy.auth) {\n\t\t\t\targs.push('-w', proxy.auth);\n\t\t\t}\n\t\t\t/*else if (proxy.username) {\n\t\t\t\targs.push('-w', proxy.username + ':' + proxy.password);\n\t\t\t}*/\n\t\t}\n\n\t\tif (this.domainAuthentication.length) {\n\t\t\tthis.domainAuthentication.forEach(function(domain) {\n\t\t\t\tconst url = parseUrl(domain);\n\t\t\t\targs.push('-a', `${url.hostname}:${url.port}:${url.auth}`);\n\t\t\t});\n\t\t}\n\n\t\tthis.logTrafficStats &&\n\t\t\targs.push('-z', String(Math.floor(this.logTrafficStats / 1000)));\n\t\tthis.verbose && args.push('-v');\n\n\t\treturn args;\n\t}\n\n\tprotected _makeJavaArgs(proxy?: Url): string[] {\n\t\tconst args = [\n\t\t\t'-jar',\n\t\t\t'Sauce-Connect.jar',\n\t\t\tthis.username,\n\t\t\tthis.accessKey\n\t\t];\n\n\t\tthis.logFileSize && args.push('-g', String(this.logFileSize));\n\t\tthis.squidOptions && args.push('-S', this.squidOptions);\n\t\tthis.verbose && args.push('-d');\n\n\t\tif (proxy) {\n\t\t\tproxy.hostname &&\n\t\t\t\targs.push(\n\t\t\t\t\t'-p',\n\t\t\t\t\tproxy.hostname + (proxy.port ? ':' + proxy.port : '')\n\t\t\t\t);\n\n\t\t\tif (proxy.auth) {\n\t\t\t\tconst auth = proxy.auth.split(':');\n\t\t\t\targs.push('-u', auth[0], '-X', auth[1]);\n\t\t\t}\n\t\t\t/*else {\n\t\t\t\tproxy.username && args.push('-u', proxy.username);\n\t\t\t\tproxy.password && args.push('-X', proxy.password);\n\t\t\t}*/\n\t\t}\n\n\t\treturn args;\n\t}\n\n\tprotected _makeArgs(readyFile: string): string[] {\n\t\tif (!this.username || !this.accessKey) {\n\t\t\tthrow new Error(\n\t\t\t\t'SauceLabsTunnel requires a username and access key'\n\t\t\t);\n\t\t}\n\n\t\tconst proxy = this.proxy ? parseUrl(this.proxy) : undefined;\n\t\tconst args =\n\t\t\tthis.executable === 'java'\n\t\t\t\t? this._makeJavaArgs(proxy)\n\t\t\t\t: this._makeNativeArgs(proxy);\n\n\t\targs.push(\n\t\t\t'-P',\n\t\t\tthis.port,\n\t\t\t'-f',\n\t\t\treadyFile,\n\t\t\t// Required for websocket support\n\t\t\t'--vm-version',\n\t\t\t'dev-varnish'\n\t\t);\n\n\t\tthis.directDomains.length &&\n\t\t\targs.push('-D', this.directDomains.join(','));\n\t\tthis.tunnelDomains.length &&\n\t\t\targs.push('-t', this.tunnelDomains.join(','));\n\t\tthis.fastFailDomains.length &&\n\t\t\targs.push('-F', this.fastFailDomains.join(','));\n\t\tthis.isSharedTunnel && args.push('-s');\n\t\tthis.logFile && args.push('-l', this.logFile);\n\t\tthis.pidFile && args.push('--pidfile', this.pidFile);\n\t\tthis.restUrl && args.push('-x', this.restUrl);\n\t\tthis.skipSslDomains.length &&\n\t\t\targs.push('-B', this.skipSslDomains.join(','));\n\t\tthis.tunnelId && args.push('-i', this.tunnelId);\n\t\tthis.useProxyForTunnel && args.push('-T');\n\t\tthis.vmVersion && args.push('-V', this.vmVersion);\n\n\t\treturn args;\n\t}\n\n\tsendJobState(jobId: string, data: JobState): Task<void> {\n\t\tlet url = parseUrl(this.restUrl || 'https://saucelabs.com/rest/v1/');\n\t\turl.auth = this.username + ':' + this.accessKey;\n\t\turl.pathname += this.username + '/jobs/' + jobId;\n\n\t\tconst payload = JSON.stringify({\n\t\t\tbuild: data.buildId,\n\t\t\t'custom-data': data.extra,\n\t\t\tname: data.name,\n\t\t\tpassed: data.success,\n\t\t\tpublic: data.visibility,\n\t\t\ttags: data.tags\n\t\t});\n\n\t\treturn request\n\t\t\t.put(formatUrl(url), <NodeRequestOptions>{\n\t\t\t\tbody: payload,\n\t\t\t\theaders: {\n\t\t\t\t\t'Content-Length': String(\n\t\t\t\t\t\tBuffer.byteLength(payload, 'utf8')\n\t\t\t\t\t),\n\t\t\t\t\t'Content-Type': 'application/x-www-form-urlencoded'\n\t\t\t\t},\n\t\t\t\tpassword: this.accessKey,\n\t\t\t\tuser: this.username,\n\t\t\t\tproxy: this.proxy\n\t\t\t})\n\t\t\t.then(function(response) {\n\t\t\t\treturn response.text().then(text => {\n\t\t\t\t\tif (text) {\n\t\t\t\t\t\tconst data = JSON.parse(text);\n\n\t\t\t\t\t\tif (data.error) {\n\t\t\t\t\t\t\tthrow new Error(data.error);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (response.status !== 200) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Server reported ${response.status} with: ${text}`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Server reported ${response.status} with no other data.`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tprotected _start(executor: ChildExecutor) {\n\t\tconst readyFile = join(tmpdir(), 'saucelabs-' + Date.now());\n\n\t\tlet readMessage: ((message: string) => boolean) | undefined;\n\t\tlet readStartupMessage: (message: string) => boolean;\n\t\tlet readRunningMessage: (message: string) => boolean;\n\n\t\tconst task = this._makeChild((child, resolve, reject) => {\n\t\t\treadStartupMessage = (message: string) => {\n\t\t\t\tfunction fail(message: string) {\n\t\t\t\t\tif (task.state === State.Pending) {\n\t\t\t\t\t\treject(new Error(message));\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\t// These messages contain structured data we can try to consume\n\t\t\t\tif (message.indexOf('Error: response: ') === 0) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst error = /(\\{[\\s\\S]*\\})/.exec(message);\n\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\tconst data = JSON.parse(error[1]);\n\t\t\t\t\t\t\treturn fail(data.error);\n\t\t\t\t\t\t}\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t// It seems parsing did not work so well; fall through\n\t\t\t\t\t\t// to the normal error handler\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (message.indexOf('Error: ') === 0) {\n\t\t\t\t\t// skip known warnings\n\t\t\t\t\tif (\n\t\t\t\t\t\t/open file limit \\d+ is too low/.test(message) ||\n\t\t\t\t\t\t/Sauce Labs recommends setting it/.test(message) ||\n\t\t\t\t\t\t/HTTP response code indicated failure/.test(message)\n\t\t\t\t\t) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\treturn fail(message.slice('Error: '.length));\n\t\t\t\t}\n\n\t\t\t\treturn readStatus(message);\n\t\t\t};\n\n\t\t\treadRunningMessage = function(message: string) {\n\t\t\t\t// Sauce Connect 3\n\t\t\t\tif (\n\t\t\t\t\tmessage.indexOf(\n\t\t\t\t\t\t'Problem connecting to Sauce Labs REST API'\n\t\t\t\t\t) > -1\n\t\t\t\t) {\n\t\t\t\t\t// It will just keep trying and trying and trying for a\n\t\t\t\t\t// while, but it is a failure, so force it to stop\n\t\t\t\t\tchild.kill('SIGTERM');\n\t\t\t\t}\n\n\t\t\t\treturn readStatus(message);\n\t\t\t};\n\n\t\t\tconst readStatus = (message: string) => {\n\t\t\t\tif (\n\t\t\t\t\tmessage &&\n\t\t\t\t\tmessage.indexOf('Please wait for') === -1 &&\n\t\t\t\t\tmessage.indexOf('Sauce Connect is up') === -1 &&\n\t\t\t\t\tmessage.indexOf('Sauce Connect') !== 0 &&\n\t\t\t\t\tmessage.indexOf('Using CA certificate bundle') === -1 &&\n\t\t\t\t\t// Sauce Connect 3\n\t\t\t\t\tmessage.indexOf('You may start your tests') === -1\n\t\t\t\t) {\n\t\t\t\t\tthis.emit({\n\t\t\t\t\t\ttype: 'status',\n\t\t\t\t\t\ttarget: this,\n\t\t\t\t\t\tstatus: message\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t};\n\n\t\t\treadMessage = readStartupMessage;\n\n\t\t\t// Polling API is used because we are only watching for one file, so\n\t\t\t// efficiency is not a big deal, and the `fs.watch` API has extra\n\t\t\t// restrictions which are best avoided\n\t\t\twatchFile(\n\t\t\t\treadyFile,\n\t\t\t\t{ persistent: false, interval: 1007 },\n\t\t\t\tfunction(current, previous) {\n\t\t\t\t\tif (Number(current.mtime) === Number(previous.mtime)) {\n\t\t\t\t\t\t// readyFile hasn't been modified, so ignore the event\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tunwatchFile(readyFile);\n\n\t\t\t\t\t// We have to watch for errors until the tunnel has started\n\t\t\t\t\t// successfully at which point we only want to watch for\n\t\t\t\t\t// status messages to emit\n\t\t\t\t\treadMessage = readStatus;\n\n\t\t\t\t\tresolve();\n\t\t\t\t}\n\t\t\t);\n\n\t\t\t// Sauce Connect exits with a zero status code when there is a\n\t\t\t// failure, and outputs error messages to stdout, like a boss. Even\n\t\t\t// better, it uses the \"Error:\" tag for warnings.\n\t\t\tthis._handle = on(child.stdout, 'data', function(data: string) {\n\t\t\t\tif (!readMessage) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tString(data)\n\t\t\t\t\t.split('\\n')\n\t\t\t\t\t.some(function(message) {\n\t\t\t\t\t\t// Get rid of the date/time prefix on each message\n\t\t\t\t\t\tconst delimiter = message.indexOf(' - ');\n\t\t\t\t\t\tif (delimiter > -1) {\n\t\t\t\t\t\t\tmessage = message.slice(delimiter + 3);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn readMessage!(message.trim());\n\t\t\t\t\t});\n\t\t\t});\n\n\t\t\texecutor(child, resolve, reject);\n\t\t}, readyFile);\n\n\t\ttask.then(function() {\n\t\t\treadRunningMessage('');\n\t\t\treadMessage = undefined;\n\t\t});\n\n\t\treturn task;\n\t}\n\n\t/**\n\t * Attempt to normalize a SauceLabs described environment with the standard\n\t * Selenium capabilities\n\t *\n\t * SauceLabs returns a list of environments that looks like:\n\t *\n\t * {\n\t *     \"short_version\": \"25\",\n\t *     \"long_name\": \"Firefox\",\n\t *     \"api_name\": \"firefox\",\n\t *     \"long_version\": \"25.0b2.\",\n\t *     \"latest_stable_version\": \"\",\n\t *     \"automation_backend\": \"webdriver\",\n\t *     \"os\": \"Windows 2003\"\n\t * }\n\t *\n\t * @param environment a SauceLabs environment descriptor\n\t * @returns a normalized descriptor\n\t */\n\tprotected _normalizeEnvironment(environment: any): NormalizedEnvironment {\n\t\tconst windowsMap: any = {\n\t\t\t'Windows 2003': 'Windows XP',\n\t\t\t'Windows 2008': 'Windows 7',\n\t\t\t'Windows 2012': 'Windows 8',\n\t\t\t'Windows 2012 R2': 'Windows 8.1',\n\t\t\t'Windows 10': 'Windows 10'\n\t\t};\n\n\t\tconst browserMap: any = {\n\t\t\tmicrosoftedge: 'MicrosoftEdge'\n\t\t};\n\n\t\tlet os = environment.os;\n\t\tlet platformName = os;\n\t\tlet platformVersion: string | undefined;\n\t\tif (os.indexOf('Windows') === 0) {\n\t\t\tos = windowsMap[os] || os;\n\t\t\tplatformName = 'Windows';\n\t\t\tplatformVersion = os.slice('Windows '.length);\n\t\t} else if (os.indexOf('Mac') === 0) {\n\t\t\tplatformName = 'OS X';\n\t\t\tplatformVersion = os.slice('Mac '.length);\n\t\t}\n\n\t\tconst platform =\n\t\t\tplatformName + (platformVersion ? ' ' + platformVersion : '');\n\t\tconst browserName =\n\t\t\tbrowserMap[environment.api_name] || environment.api_name;\n\t\tconst version = environment.short_version;\n\n\t\treturn {\n\t\t\tplatform,\n\t\t\tplatformName,\n\t\t\tplatformVersion,\n\n\t\t\tbrowserName,\n\t\t\tbrowserVersion: version,\n\t\t\tversion,\n\n\t\t\tdescriptor: environment,\n\n\t\t\tintern: {\n\t\t\t\tplatform,\n\t\t\t\tbrowserName,\n\t\t\t\tversion\n\t\t\t}\n\t\t};\n\t}\n}\n\nexport interface SauceLabsProperties extends TunnelProperties {\n\tdirectDomains: string[];\n\ttunnelDomains: string[];\n\tdomainAuthentication: string[];\n\tfastFailDomains: string[];\n\tisSharedTunnel: boolean;\n\tlogFile: string;\n\tpidFile: string;\n\tlogFileSize: number;\n\tlogTrafficStats: number;\n\trestUrl: string;\n\tskipSslDomains: string[];\n\tsquidOptions: string;\n\tuseProxyForTunnel: boolean;\n\tvmVersion: string;\n}\n\nexport type SauceLabsOptions = Partial<SauceLabsProperties>;\n"]}