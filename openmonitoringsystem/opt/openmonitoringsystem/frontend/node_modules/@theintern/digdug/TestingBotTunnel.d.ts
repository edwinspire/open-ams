import Tunnel, { TunnelProperties, ChildExecutor, NormalizedEnvironment } from './Tunnel';
import { JobState } from './interfaces';
import Task from '@dojo/core/async/Task';
export default class TestingBotTunnel extends Tunnel implements TunnelProperties {
    fastFailDomains: string[];
    logFile: string;
    useCompression: boolean;
    useJettyProxy: boolean;
    useSquidProxy: boolean;
    useSsl: boolean;
    constructor(options?: TestingBotOptions);
    readonly auth: string;
    readonly isDownloaded: boolean;
    protected _makeArgs(readyFile: string): string[];
    sendJobState(jobId: string, data: JobState): Task<void>;
    protected _start(executor: ChildExecutor): Task<any>;
    protected _normalizeEnvironment(environment: any): NormalizedEnvironment;
}
export interface TestingBotProperties extends TunnelProperties {
    fastFailDomains: string[];
    logFile: string;
    useCompression: boolean;
    useJettyProxy: boolean;
    useSquidProxy: boolean;
    useSsl: boolean;
}
export declare type TestingBotOptions = Partial<TestingBotProperties>;
