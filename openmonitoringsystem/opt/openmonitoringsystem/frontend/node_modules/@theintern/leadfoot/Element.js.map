{"version":3,"file":"Element.js","sourceRoot":"","sources":["../../src/Element.ts"],"names":[],"mappings":"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","sourcesContent":["import findDisplayed from './lib/findDisplayed';\nimport * as fs from 'fs';\nimport Locator, { Strategy, toW3cLocator } from './lib/Locator';\nimport waitForDeleted from './lib/waitForDeleted';\nimport { sleep } from './lib/util';\nimport Task from '@dojo/core/async/Task';\nimport Session from './Session';\nimport JSZip = require('jszip');\nimport { basename } from 'path';\n\n/**\n * The Element class represents a DOM or UI element within the remote\n * environment.\n */\nexport default class Element extends Locator<\n\tTask<Element>,\n\tTask<Element[]>,\n\tTask<void>\n> {\n\tprivate _elementId: string;\n\tprivate _session: Session;\n\n\t/**\n\t * @constructor module:leadfoot/Element\n\t *\n\t * @param elementId\n\t * The ID of the element, as provided by the remote.\n\t *\n\t * @param session\n\t * The session that the element belongs to.\n\t */\n\tconstructor(elementId: /*ElementOrElementId*/ any, session: Session) {\n\t\tsuper();\n\n\t\tthis._elementId =\n\t\t\telementId.ELEMENT ||\n\t\t\telementId.elementId ||\n\t\t\telementId['element-6066-11e4-a52e-4f735466cecf'] ||\n\t\t\telementId;\n\t\tthis._session = session;\n\t}\n\n\t/**\n\t * The opaque, remote-provided ID of the element.\n\t *\n\t * @member elementId\n\t * @readonly\n\t */\n\tget elementId() {\n\t\treturn this._elementId;\n\t}\n\n\t/**\n\t * The [[Session]] that the element belongs to.\n\t * @readonly\n\t */\n\tget session() {\n\t\treturn this._session;\n\t}\n\n\tprivate _get<T>(path: string, requestData?: any, pathParts?: any): Task<T> {\n\t\tpath = 'element/' + encodeURIComponent(this._elementId) + '/' + path;\n\t\treturn this._session.serverGet<T>(path, requestData, pathParts);\n\t}\n\n\tprivate _post<T>(\n\t\tpath: string,\n\t\trequestData?: any,\n\t\tpathParts?: any\n\t): Task<T> {\n\t\tpath = 'element/' + encodeURIComponent(this._elementId) + '/' + path;\n\t\treturn this._session.serverPost<T>(path, requestData, pathParts);\n\t}\n\n\ttoJSON() {\n\t\treturn { ELEMENT: this._elementId };\n\t}\n\n\t/**\n\t * Normalize whitespace in the same way that most browsers generate\n\t * innerText.\n\t *\n\t * @param text text to normalize\n\t * @returns Text with leading and trailing whitespace removed, with inner\n\t * runs of spaces changed to a single space, and with \"\\r\\n\" pairs\n\t * converted to \"\\n\".\n\t */\n\tprivate _normalizeWhitespace(text: string): string {\n\t\tif (text) {\n\t\t\ttext = text\n\t\t\t\t.replace(/^\\s+/gm, '')\n\t\t\t\t.replace(/\\s+$/gm, '')\n\t\t\t\t.replace(/\\s*\\r\\n\\s*/g, '\\n')\n\t\t\t\t.replace(/ +/g, ' ');\n\t\t}\n\n\t\treturn text;\n\t}\n\n\t/**\n\t * Uploads a file to a remote Selenium server for use when testing file\n\t * uploads. This API is not part of the WebDriver specification and should\n\t * not be used directly. To send a file to a server that supports file\n\t * uploads, use [[Element.Element.type]] to type the name of the local file\n\t * into a file input field and the file will be transparently transmitted\n\t * and used by the server.\n\t */\n\tprivate _uploadFile(filename: string): Task<string> {\n\t\treturn new Task<string>(resolve => {\n\t\t\tconst content = fs.readFileSync(filename);\n\n\t\t\tlet zip = new JSZip();\n\t\t\tzip.file(basename(filename), content);\n\t\t\tzip.generateAsync({ type: 'base64' }).then(file => {\n\t\t\t\tresolve(this.session.serverPost('file', { file }));\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Gets the first element within this element that matches the given query.\n\t *\n\t * See [[Session.Session.setFindTimeout]] to set the amount of time it the\n\t * remote environment should spend waiting for an element that does not\n\t * exist at the time of the `find` call before timing out.\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\tfind(using: Strategy, value: string): Task<Element> {\n\t\tconst session = this._session;\n\t\tconst capabilities = session.capabilities;\n\n\t\tif (capabilities.usesWebDriverLocators) {\n\t\t\tconst locator = toW3cLocator(using, value);\n\t\t\tusing = locator.using;\n\t\t\tvalue = locator.value;\n\t\t}\n\n\t\tif (\n\t\t\tusing.indexOf('link text') !== -1 &&\n\t\t\t(capabilities.brokenWhitespaceNormalization ||\n\t\t\t\tcapabilities.brokenLinkTextLocator)\n\t\t) {\n\t\t\treturn session\n\t\t\t\t.execute<ElementOrElementId>(\n\t\t\t\t\t/* istanbul ignore next */ session['_manualFindByLinkText'],\n\t\t\t\t\t[using, value, false, this]\n\t\t\t\t)\n\t\t\t\t.then(function(element) {\n\t\t\t\t\tif (!element) {\n\t\t\t\t\t\tconst error = new Error();\n\t\t\t\t\t\terror.name = 'NoSuchElement';\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t\treturn new Element(element, session);\n\t\t\t\t});\n\t\t}\n\n\t\treturn this._post<ElementOrElementId>('element', {\n\t\t\tusing,\n\t\t\tvalue\n\t\t})\n\t\t\t.then(function(element) {\n\t\t\t\treturn new Element(element, session);\n\t\t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\t// At least Firefox 49 + geckodriver returns an UnknownCommand\n\t\t\t\t// error when unable to find elements.\n\t\t\t\tif (\n\t\t\t\t\terror.name === 'UnknownCommand' &&\n\t\t\t\t\terror.message.indexOf('Unable to locate element:') !== -1\n\t\t\t\t) {\n\t\t\t\t\tconst newError = new Error();\n\t\t\t\t\tnewError.name = 'NoSuchElement';\n\t\t\t\t\tnewError.message = error.message;\n\t\t\t\t\tthrow newError;\n\t\t\t\t}\n\t\t\t\tthrow error;\n\t\t\t});\n\t}\n\n\t/**\n\t * Gets all elements within this element that match the given query.\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\tfindAll(using: Strategy, value: string): Task<Element[]> {\n\t\tconst session = this._session;\n\t\tconst capabilities = session.capabilities;\n\n\t\tif (capabilities.usesWebDriverLocators) {\n\t\t\tconst locator = toW3cLocator(using, value);\n\t\t\tusing = locator.using;\n\t\t\tvalue = locator.value;\n\t\t}\n\n\t\tlet task: Task<ElementOrElementId[]>;\n\t\tif (\n\t\t\tusing.indexOf('link text') !== -1 &&\n\t\t\t(capabilities.brokenWhitespaceNormalization ||\n\t\t\t\tcapabilities.brokenLinkTextLocator)\n\t\t) {\n\t\t\ttask = session.execute<\n\t\t\t\tElementOrElementId[]\n\t\t\t>(/* istanbul ignore next */ session['_manualFindByLinkText'], [\n\t\t\t\tusing,\n\t\t\t\tvalue,\n\t\t\t\ttrue,\n\t\t\t\tthis\n\t\t\t]);\n\t\t} else {\n\t\t\ttask = this._post<ElementOrElementId[]>('elements', {\n\t\t\t\tusing: using,\n\t\t\t\tvalue: value\n\t\t\t});\n\t\t}\n\n\t\treturn task.then(function(elements) {\n\t\t\treturn elements.map(function(element) {\n\t\t\t\treturn new Element(element, session);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Clicks the element. This method works on both mouse and touch platforms.\n\t */\n\tclick() {\n\t\tif (this.session.capabilities.brokenClick) {\n\t\t\treturn this.session.execute<void>(\n\t\t\t\t(element: HTMLElement) => {\n\t\t\t\t\telement.click();\n\t\t\t\t},\n\t\t\t\t[this]\n\t\t\t);\n\t\t}\n\n\t\treturn this._post<void>('click').then(() => {\n\t\t\t// ios-driver 0.6.6-SNAPSHOT April 2014 and MS Edge Driver 14316 do\n\t\t\t// not wait until the default action for a click event occurs\n\t\t\t// before returning\n\t\t\tif (\n\t\t\t\tthis.session.capabilities.touchEnabled ||\n\t\t\t\tthis.session.capabilities.returnsFromClickImmediately\n\t\t\t) {\n\t\t\t\treturn sleep(500);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Submits the element, if it is a form, or the form belonging to the\n\t * element, if it is a form element.\n\t */\n\tsubmit() {\n\t\tif (this.session.capabilities.brokenSubmitElement) {\n\t\t\treturn this.session.execute<void>(\n\t\t\t\t/* istanbul ignore next */ (element: any) => {\n\t\t\t\t\tif (element.submit) {\n\t\t\t\t\t\telement.submit();\n\t\t\t\t\t} else if (element.type === 'submit' && element.click) {\n\t\t\t\t\t\telement.click();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t[this]\n\t\t\t);\n\t\t}\n\n\t\treturn this._post<void>('submit');\n\t}\n\n\t/**\n\t * Gets the visible text within the element. `<br>` elements are converted\n\t * to line breaks in the returned text, and whitespace is normalised per\n\t * the usual XML/HTML whitespace normalisation rules.\n\t */\n\tgetVisibleText(): Task<string> {\n\t\tconst result = this._get<string>('text');\n\n\t\tif (this.session.capabilities.brokenWhitespaceNormalization) {\n\t\t\treturn result.then(text => this._normalizeWhitespace(text));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Types into the element. This method works the same as the\n\t * [[Session.Session.pressKeys]] method except that any modifier keys are\n\t * automatically released at the end of the command. This method should be\n\t * used instead of [[Session.Session.pressKeys]] to type filenames into\n\t * file upload fields.\n\t *\n\t * Since 1.5, if the WebDriver server supports remote file uploads, and you\n\t * type a path to a file on your local computer, that file will be\n\t * transparently uploaded to the remote server and the remote filename will\n\t * be typed instead. If you do not want to upload local files, use\n\t * [[Session.Session.pressKeys]] instead.\n\t *\n\t * @param value The text to type in the remote environment. See\n\t * [[Session.Session.pressKeys]] for more information.\n\t */\n\ttype(value: string | string[]): Task<void> {\n\t\tconst getPostData = (value: string[]): { value: string[] } => {\n\t\t\tif (this.session.capabilities.usesFlatKeysArray) {\n\t\t\t\t// At least Firefox 49+ requires the keys value to be a flat\n\t\t\t\t// array of characters\n\t\t\t\treturn { value: value.join('').split('') };\n\t\t\t}\n\t\t\treturn { value };\n\t\t};\n\n\t\tif (!Array.isArray(value)) {\n\t\t\tvalue = [value];\n\t\t}\n\n\t\tif (this.session.capabilities.remoteFiles) {\n\t\t\tconst filename = value.join('');\n\n\t\t\t// Check to see if the input is a filename; if so, upload the file\n\t\t\t// and then post it's remote name into the field\n\t\t\ttry {\n\t\t\t\tif (fs.statSync(filename).isFile()) {\n\t\t\t\t\treturn this._uploadFile(filename).then(uploadedFilename => {\n\t\t\t\t\t\treturn this._post(\n\t\t\t\t\t\t\t'value',\n\t\t\t\t\t\t\tgetPostData([uploadedFilename])\n\t\t\t\t\t\t).then(noop);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} catch (error) {\n\t\t\t\t// ignore\n\t\t\t}\n\t\t}\n\n\t\t// If the input isn't a filename, just post the value directly\n\t\treturn this._post('value', getPostData(value)).then(noop);\n\t}\n\n\t/**\n\t * Gets the tag name of the element. For HTML documents, the value is\n\t * always lowercase.\n\t */\n\tgetTagName(): Task<string> {\n\t\treturn this._get<string>('name').then(name => {\n\t\t\tif (this.session.capabilities.brokenHtmlTagName) {\n\t\t\t\treturn this.session\n\t\t\t\t\t.execute<boolean>(\n\t\t\t\t\t\t'return document.body && document.body.tagName === document.body.tagName.toUpperCase();'\n\t\t\t\t\t)\n\t\t\t\t\t.then(function(isHtml: boolean) {\n\t\t\t\t\t\treturn isHtml ? name.toLowerCase() : name;\n\t\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn name;\n\t\t});\n\t}\n\n\t/**\n\t * Clears the value of a form element.\n\t */\n\tclearValue(): Task<void> {\n\t\treturn this._post('clear').then(noop);\n\t}\n\n\t/**\n\t * Returns whether or not a form element is currently selected (for\n\t * drop-down options and radio buttons), or whether or not the element is\n\t * currently checked (for checkboxes).\n\t */\n\tisSelected(): Task<boolean> {\n\t\treturn this._get<boolean>('selected');\n\t}\n\n\t/**\n\t * Returns whether or not a form element can be interacted with.\n\t */\n\tisEnabled(): Task<boolean> {\n\t\treturn this._get<boolean>('enabled');\n\t}\n\n\t/**\n\t * Gets a property or attribute of the element according to the WebDriver\n\t * specification algorithm. Use of this method is not recommended; instead,\n\t * use [[Element.Element.getAttribute]] to retrieve DOM attributes and\n\t * [[Element.Element.getProperty]] to retrieve DOM properties.\n\t *\n\t * This method uses the following algorithm on the server to determine what\n\t * value to return:\n\t *\n\t * 1. If `name` is 'style', returns the `style.cssText` property of the\n\t *    element.\n\t * 2. If the attribute exists and is a boolean attribute, returns 'true' if\n\t *    the attribute is true, or null otherwise.\n\t * 3. If the element is an `<option>` element and `name` is 'value',\n\t *    returns the `value` attribute if it exists, otherwise returns the\n\t *    visible text content of the option.\n\t * 4. If the element is a checkbox or radio button and `name` is\n\t *    'selected', returns 'true' if the element is checked, or null\n\t *    otherwise.\n\t * 5. If the returned value is expected to be a URL (e.g. element is `<a>`\n\t *    and attribute is `href`), returns the fully resolved URL from the\n\t *    `href`/`src` property of the element, not the attribute.\n\t * 6. If `name` is 'class', returns the `className` property of the\n\t *    element.\n\t * 7. If `name` is 'readonly', returns 'true' if the `readOnly` property is\n\t *    true, or null otherwise.\n\t * 8. If `name` corresponds to a property of the element, and the property\n\t *    is not an Object, return the property value coerced to a string.\n\t * 9. If `name` corresponds to an attribute of the element, return the\n\t *    attribute value.\n\t *\n\t * @param name The property or attribute name.\n\t * @returns The value of the attribute as a string, or `null` if no such\n\t * property or attribute exists.\n\t */\n\tgetSpecAttribute(name: string): Task<string | null> {\n\t\treturn this._get<string | undefined>('attribute/$0', null, [name])\n\t\t\t.then(value => {\n\t\t\t\tif (\n\t\t\t\t\tthis.session.capabilities.brokenNullGetSpecAttribute &&\n\t\t\t\t\t(value === '' || value === undefined)\n\t\t\t\t) {\n\t\t\t\t\treturn this.session\n\t\t\t\t\t\t.execute<boolean>(\n\t\t\t\t\t\t\t/* istanbul ignore next */ function(\n\t\t\t\t\t\t\t\telement: HTMLElement,\n\t\t\t\t\t\t\t\tname: string\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn element.hasAttribute(name);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[this, name]\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then(function(hasAttribute: boolean) {\n\t\t\t\t\t\t\treturn hasAttribute ? <string>value : null;\n\t\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn value || null;\n\t\t\t})\n\t\t\t.then(function(value) {\n\t\t\t\t// At least ios-driver 0.6.6-SNAPSHOT violates draft spec and\n\t\t\t\t// returns boolean attributes as booleans instead of the string\n\t\t\t\t// \"true\" or null\n\t\t\t\tif (typeof value === 'boolean') {\n\t\t\t\t\tvalue = value ? 'true' : null;\n\t\t\t\t}\n\n\t\t\t\treturn value;\n\t\t\t});\n\t}\n\n\t/**\n\t * Gets an attribute of the element.\n\t *\n\t * See [[Element.Element.getProperty]] to retrieve an element property.\n\t *\n\t * @param name The name of the attribute.\n\t * @returns The value of the attribute, or `null` if no such attribute\n\t * exists.\n\t */\n\tgetAttribute(name: string): Task<string | null> {\n\t\treturn this.session.execute<\n\t\t\tstring | null\n\t\t>('return arguments[0].getAttribute(arguments[1]);', [this, name]);\n\t}\n\n\t/**\n\t * Gets a property of the element.\n\t *\n\t * See [[Element.Element.getAttribute]] to retrieve an element attribute.\n\t *\n\t * @param name The name of the property.\n\t * @returns The value of the property.\n\t */\n\tgetProperty<T = any>(name: string): Task<T> {\n\t\treturn this.session.execute<T>('return arguments[0][arguments[1]];', [\n\t\t\tthis,\n\t\t\tname\n\t\t]);\n\t}\n\n\t/**\n\t * Determines if this element is equal to another element.\n\t */\n\tequals(other: Element): Task<boolean> {\n\t\tconst elementId = other.elementId || other;\n\t\treturn this._get<boolean>('equals/$0', null, [\n\t\t\telementId\n\t\t]).catch(error => {\n\t\t\t// At least Selendroid 0.9.0 does not support this command;\n\t\t\t// At least ios-driver 0.6.6-SNAPSHOT April 2014 fails\n\t\t\tif (\n\t\t\t\terror.name === 'UnknownCommand' ||\n\t\t\t\t(error.name === 'UnknownError' &&\n\t\t\t\t\terror.message.indexOf('bug.For input string:') > -1)\n\t\t\t) {\n\t\t\t\treturn this.session.execute<\n\t\t\t\t\tboolean\n\t\t\t\t>('return arguments[0] === arguments[1];', [this, other]);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Returns whether or not the element would be visible to an actual user.\n\t * This means that the following types of elements are considered to be not\n\t * displayed:\n\t *\n\t * 1. Elements with `display: none`\n\t * 2. Elements with `visibility: hidden`\n\t * 3. Elements positioned outside of the viewport that cannot be scrolled\n\t *    into view\n\t * 4. Elements with `opacity: 0`\n\t * 5. Elements with no `offsetWidth` or `offsetHeight`\n\t */\n\tisDisplayed(): Task<boolean> {\n\t\treturn this._get<boolean>('displayed').then(isDisplayed => {\n\t\t\tif (\n\t\t\t\tisDisplayed &&\n\t\t\t\t(this.session.capabilities.brokenElementDisplayedOpacity ||\n\t\t\t\t\tthis.session.capabilities.brokenElementDisplayedOffscreen)\n\t\t\t) {\n\t\t\t\treturn this.session.execute<\n\t\t\t\t\tboolean\n\t\t\t\t>(\n\t\t\t\t\t/* istanbul ignore next */ (element: HTMLElement) => {\n\t\t\t\t\t\tconst scrollX =\n\t\t\t\t\t\t\tdocument.documentElement.scrollLeft ||\n\t\t\t\t\t\t\tdocument.body.scrollLeft;\n\t\t\t\t\t\tconst scrollY =\n\t\t\t\t\t\t\tdocument.documentElement.scrollTop ||\n\t\t\t\t\t\t\tdocument.body.scrollTop;\n\t\t\t\t\t\tdo {\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\twindow.getComputedStyle(element).opacity === '0'\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst bbox = element.getBoundingClientRect();\n\t\t\t\t\t\t\tif (\n\t\t\t\t\t\t\t\tbbox.right + scrollX <= 0 ||\n\t\t\t\t\t\t\t\tbbox.bottom + scrollY <= 0\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (\n\t\t\t\t\t\t\t(element = <HTMLElement>element.parentNode) &&\n\t\t\t\t\t\t\telement.nodeType === 1\n\t\t\t\t\t\t);\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\t\t\t\t[this]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\treturn isDisplayed;\n\t\t});\n\t}\n\n\t/**\n\t * Gets the position of the element relative to the top-left corner of the\n\t * document, taking into account scrolling and CSS transformations (if they\n\t * are supported).\n\t */\n\tgetPosition(): Task<{ x: number; y: number }> {\n\t\tif (this.session.capabilities.brokenElementPosition) {\n\t\t\t/* jshint browser:true */\n\t\t\treturn this.session.execute<{\n\t\t\t\tx: number;\n\t\t\t\ty: number;\n\t\t\t}>(\n\t\t\t\t/* istanbul ignore next */ function(element: HTMLElement) {\n\t\t\t\t\tconst bbox = element.getBoundingClientRect();\n\t\t\t\t\tconst scrollX =\n\t\t\t\t\t\tdocument.documentElement.scrollLeft ||\n\t\t\t\t\t\tdocument.body.scrollLeft;\n\t\t\t\t\tconst scrollY =\n\t\t\t\t\t\tdocument.documentElement.scrollTop ||\n\t\t\t\t\t\tdocument.body.scrollTop;\n\n\t\t\t\t\treturn { x: scrollX + bbox.left, y: scrollY + bbox.top };\n\t\t\t\t},\n\t\t\t\t[this]\n\t\t\t);\n\t\t}\n\n\t\treturn this._get<{ x: number; y: number }>('location').then(function({\n\t\t\tx,\n\t\t\ty\n\t\t}) {\n\t\t\t// At least FirefoxDriver 2.41.0 incorrectly returns an object with\n\t\t\t// additional `class` and `hCode` properties\n\t\t\treturn { x, y };\n\t\t});\n\t}\n\n\t/**\n\t * Gets the size of the element, taking into account CSS transformations\n\t * (if they are supported).\n\t */\n\tgetSize(): Task<{ width: number; height: number }> {\n\t\tconst getUsingExecute = () => {\n\t\t\treturn this.session.execute<{\n\t\t\t\twidth: number;\n\t\t\t\theight: number;\n\t\t\t}>(\n\t\t\t\t/* istanbul ignore next */ function(element: HTMLElement) {\n\t\t\t\t\tconst bbox = element.getBoundingClientRect();\n\t\t\t\t\treturn {\n\t\t\t\t\t\twidth: bbox.right - bbox.left,\n\t\t\t\t\t\theight: bbox.bottom - bbox.top\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\t[this]\n\t\t\t);\n\t\t};\n\n\t\tif (this.session.capabilities.brokenCssTransformedSize) {\n\t\t\treturn getUsingExecute();\n\t\t}\n\n\t\treturn this._get<{ width: number; height: number }>('size')\n\t\t\t.catch(function(error) {\n\t\t\t\t// At least ios-driver 0.6.0-SNAPSHOT April 2014 does not\n\t\t\t\t// support this command\n\t\t\t\tif (error.name === 'UnknownCommand') {\n\t\t\t\t\treturn getUsingExecute();\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t})\n\t\t\t.then(function({ width, height }) {\n\t\t\t\t// At least ChromeDriver 2.9 incorrectly returns an object with\n\t\t\t\t// an additional `toString` property\n\t\t\t\treturn { width, height };\n\t\t\t});\n\t}\n\n\t/**\n\t * Gets a CSS computed property value for the element.\n\t *\n\t * @param propertyName The CSS property to retrieve. This argument must be\n\t * hyphenated, *not* camel-case.\n\t */\n\tgetComputedStyle(propertyName: string): Task<string> {\n\t\tconst manualGetStyle = () => {\n\t\t\treturn this.session.execute<string>(\n\t\t\t\t/* istanbul ignore next */ (\n\t\t\t\t\telement: any,\n\t\t\t\t\tpropertyName: string\n\t\t\t\t) => {\n\t\t\t\t\treturn (<any>window.getComputedStyle(element))[\n\t\t\t\t\t\tpropertyName\n\t\t\t\t\t];\n\t\t\t\t},\n\t\t\t\t[this, propertyName]\n\t\t\t);\n\t\t};\n\n\t\tlet promise: Task<string>;\n\n\t\tif (this.session.capabilities.brokenComputedStyles) {\n\t\t\tpromise = manualGetStyle();\n\t\t} else {\n\t\t\tpromise = this._get<string>('css/$0', null, [\n\t\t\t\tpropertyName\n\t\t\t]).catch(function(error) {\n\t\t\t\t// At least Selendroid 0.9.0 does not support this command\n\t\t\t\tif (error.name === 'UnknownCommand') {\n\t\t\t\t\treturn manualGetStyle();\n\t\t\t\t} else if (\n\t\t\t\t\terror.name === 'UnknownError' &&\n\t\t\t\t\terror.message.indexOf('failed to parse value') > -1\n\t\t\t\t) {\n\t\t\t\t\t// At least ChromeDriver 2.9 incorrectly returns an error\n\t\t\t\t\t// for property names it does not understand\n\t\t\t\t\treturn '';\n\t\t\t\t}\n\n\t\t\t\tthrow error;\n\t\t\t});\n\t\t}\n\n\t\treturn promise.then(function(value) {\n\t\t\t// At least ChromeDriver 2.9 and Selendroid 0.9.0 returns colour\n\t\t\t// values as rgb instead of rgba\n\t\t\tif (value) {\n\t\t\t\tvalue = value.replace(\n\t\t\t\t\t/(.*\\b)rgb\\((\\d+,\\s*\\d+,\\s*\\d+)\\)(.*)/g,\n\t\t\t\t\tfunction(_, prefix, rgb, suffix) {\n\t\t\t\t\t\treturn prefix + 'rgba(' + rgb + ', 1)' + suffix;\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// For consistency with Firefox, missing values are always returned\n\t\t\t// as empty strings\n\t\t\treturn value != null ? value : '';\n\t\t});\n\t}\n\n\t/**\n\t * Gets the first [[Element.Element.isDisplayed|displayed]] element inside\n\t * this element matching the given query. This is inherently slower than\n\t * [[Element.Element.find]], so should only be used in cases where the\n\t * visibility of an element cannot be ensured in advance.\n\t *\n\t * @since 1.6\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\tfindDisplayed(using: Strategy, value: string): Task<Element> {\n\t\treturn findDisplayed(this.session, this, using, value);\n\t}\n\n\t/**\n\t * Waits for all elements inside this element that match the given query to\n\t * be destroyed.\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\twaitForDeleted(strategy: Strategy, value: string) {\n\t\treturn waitForDeleted(this.session, this, strategy, value);\n\t}\n}\n\nfunction noop() {\n\t// At least ios-driver 0.6.6 returns an empty object for methods that are\n\t// supposed to return no value at all, which is not correct\n}\n\nexport type ElementOrElementId = { ELEMENT: string } | Element | string;\n"]}