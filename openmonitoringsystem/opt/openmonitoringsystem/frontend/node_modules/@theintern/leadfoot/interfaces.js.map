{"version":3,"file":"interfaces.js","sourceRoot":"","sources":["../../src/interfaces.ts"],"names":[],"mappings":"","sourcesContent":["import Task from '@dojo/core/async/Task';\nimport { Url } from 'url';\n\n/**\n * These interface describes the capabilities that may be implemented by a\n * WebDriver server. Many of these are standard\n * [[https://github.com/SeleniumHQ/selenium/wiki/DesiredCapabilities|WebDriver capabilities]],\n * but the interface also includes a number of Leadfoot-specific feature and\n * defect indicators. For example, the [[interfaces.Capabilities.brokenClick]]\n * capability indicates that the remote doesn't properly support the 'click'\n * action.\n */\nexport interface Capabilities {\n\t_filled?: boolean;\n\n\t/**\n\t * Whether the session can interact with the remote browser's application\n\t * cache.\n\t */\n\tapplicationCacheEnabled?: boolean;\n\n\t/** The remote doesn't implement element/active */\n\tbrokenActiveElement?: boolean;\n\n\t/** The remote doesn't properly implement native mouse clicks */\n\tbrokenClick?: boolean;\n\n\t/** The remote may not return correct computed styles */\n\tbrokenComputedStyles?: boolean;\n\n\t/** Native cookie manipulation doesn't work */\n\tbrokenCookies?: boolean;\n\n\t/** Transformed CSS sizes may be reported incorrectly */\n\tbrokenCssTransformedSize?: boolean;\n\n\t/** Native cookie deletion doesn't work */\n\tbrokenDeleteCookie?: boolean;\n\n\t/** Native window deletion doesn't work */\n\tbrokenDeleteWindow?: boolean;\n\n\t/** The double-click event doesn't work */\n\tbrokenDoubleClick?: boolean;\n\n\tbrokenElementDisplayedOffscreen?: boolean;\n\tbrokenElementDisplayedOpacity?: boolean;\n\tbrokenElementPosition?: boolean;\n\tbrokenElementSerialization?: boolean;\n\tbrokenEmptyPost?: boolean;\n\tbrokenExecuteElementReturn?: boolean;\n\tbrokenExecuteForNonHttpUrl?: boolean;\n\tbrokenExecuteUndefinedReturn?: boolean;\n\tbrokenFileSendKeys?: boolean;\n\tbrokenFlickFinger?: boolean;\n\tbrokenHtmlMouseMove?: boolean;\n\tbrokenHtmlTagName?: boolean;\n\tbrokenLinkTextLocator?: boolean;\n\tbrokenLongTap?: boolean;\n\tbrokenMouseEvents?: boolean;\n\tbrokenMoveFinger?: boolean;\n\tbrokenNavigation?: boolean;\n\tbrokenNullGetSpecAttribute?: boolean;\n\tbrokenOptionSelect?: boolean;\n\tbrokenPageSource?: boolean;\n\tbrokenParentFrameSwitch?: boolean;\n\tbrokenRefresh?: boolean;\n\tbrokenSendKeys?: boolean;\n\tbrokenSessionList?: boolean;\n\tbrokenSubmitElement?: boolean;\n\tbrokenTouchScroll?: boolean;\n\tbrokenWhitespaceNormalization?: boolean;\n\tbrokenWindowClose?: boolean;\n\tbrokenWindowPosition?: boolean;\n\tbrokenWindowSize?: boolean;\n\tbrokenWindowSwitch?: boolean;\n\tbrokenZeroTimeout?: boolean;\n\n\t/** The name of the remote browser (e.g., 'safari') */\n\tbrowserName?: string;\n\n\t/**\n\t * The remote browser version. This may or may not correspond to the\n\t * publicly visible version.\n\t */\n\tbrowserVersion?: string;\n\n\t/**\n\t * The name of the remote mobile device\n\t */\n\tdeviceName?: string;\n\n\t/** Whether the remote browser can be resized */\n\tdynamicViewport?: boolean;\n\n\t/** Whether or not to run capability tests */\n\tfixSessionCapabilities?: 'no-detect' | boolean;\n\n\t/** The actual log types supported by a remote */\n\tfixedLogTypes?: false | string[] | Task<string[]>;\n\n\t/** Whether the remote can handle modal alerts */\n\thandlesAlerts?: boolean;\n\n\t/** Whether the remote has a touch screen */\n\thasTouchScreen?: boolean;\n\n\t/** Allows the user to specify the initial URL loaded when IE starts. */\n\tinitialBrowserUrl?: string;\n\n\t/** Whether the session can set and query the browser's location context. */\n\tlocationContextEnabled?: boolean;\n\n\t/** Whether mouse actions are enabled */\n\tmouseEnabled?: boolean;\n\n\t/** Whether the remote browser supports native events */\n\tnativeEvents?: boolean;\n\n\t/**\n\t * The base platform the remote browser is running on, typically one of\n\t * WINDOWS, XP, VISTA, MAC, LINUX, UNIX, ANDROID.\n\t */\n\tplatform?: string;\n\n\t/**\n\t * The platform the remote browser is running on. This is typically more\n\t * specifc than [[interfaces.Capabilities.platform]].\n\t */\n\tplatformName?: string;\n\n\t/**\n\t * The version of the platform the remote browser is runnign no.\n\t */\n\tplatformVersion?: string;\n\n\t/**\n\t * Whether the remote browser supports file uploads\n\t */\n\tremoteFiles?: boolean;\n\n\t/**\n\t * Whether the remote browser returns immediately after a click or waits\n\t * for the click action to occur\n\t */\n\treturnsFromClickImmediately?: boolean;\n\n\t/**\n\t * Whether the remote viewport is rotatable between portrait and landscape\n\t * views\n\t */\n\trotatable?: boolean;\n\n\t/**\n\t * This indicates that trying to return a reference to a parent frame from\n\t * a script will crash the remote browser\n\t */\n\tscriptedParentFrameCrashesBrowser?: boolean;\n\n\t/**\n\t * The [[keys.keys|key]] used to run shortcuts, typically Cmd (Mac) or Control\n\t * (Windows, Linux)\n\t */\n\tshortcutKey?: any;\n\n\t/** Whether the remote browser supports CSS transforms */\n\tsupportsCssTransforms?: boolean;\n\n\t/** Whether scripts can be executed asynchronously in the remote browser */\n\tsupportsExecuteAsync?: boolean;\n\n\t/**\n\t * Whether the remote browser supports the JsonWireProtocol 'keys' command\n\t */\n\tsupportsKeysCommand?: boolean;\n\n\t/** Whether the remote browser allows navigation via data URIs */\n\tsupportsNavigationDataUris?: boolean;\n\n\t/** Whether the remote supports session commands */\n\tsupportsSessionCommands?: boolean;\n\n\t/** Whether the remote browser can take screenshots */\n\ttakesScreenshot?: boolean;\n\n\t/** Whether the remote browser supports touch events */\n\ttouchEnabled?: boolean;\n\n\t/**\n\t * Whether the remote server requires element keys to be sent as a flat array\n\t */\n\tusesFlatKeysArray?: boolean;\n\n\t/** Whether window commands use 'handle' instead of 'name' */\n\tusesHandleParameter?: boolean;\n\n\t/**\n\t * Whether getActiveElement uses a POST or GET\n\t */\n\tusesWebDriverActiveElement?: boolean;\n\n\t/**\n\t * Whether find commands should use WebDriver (vs JsonWireProtocol) locators\n\t */\n\tusesWebDriverLocators?: boolean;\n\n\t/**\n\t * Whether the remote browser uses WebDriver-style window commands (/rect, implicit handles)\n\t */\n\tusesWebDriverWindowCommands?: boolean;\n\n\t/** The remote browser version */\n\tversion?: string;\n\n\t/** Whether the session supports interactions with storage objects */\n\twebStorageEnabled?: boolean;\n\n\t[key: string]: any;\n}\n\nexport interface Geolocation {\n\taltitude?: number;\n\tlatitude?: number;\n\tlongitude?: number;\n}\n\nexport interface LogEntry {\n\ttimestamp: number;\n\tlevel: string;\n\tmessage: string;\n}\n\nexport interface WebDriverCookie {\n\tname: string;\n\tvalue: string;\n\tpath?: string;\n\tdomain?: string;\n\tsecure?: boolean;\n\texpiry?: string | Date | number;\n}\n\nexport interface LeadfootURL extends Url {\n\tusername?: string;\n\tpassword?: string;\n\taccessKey?: string;\n}\n\nexport interface LeadfootError extends Error {\n\tresponse?: { text: string };\n}\n\nexport interface WebDriverResponse {\n\tvalue: any;\n}\n"]}