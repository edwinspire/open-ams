"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var Locator = (function () {
    function Locator() {
    }
    Locator.prototype.findByClassName = function (className) {
        return this.find('class name', className);
    };
    Locator.prototype.findByCssSelector = function (selector) {
        return this.find('css selector', selector);
    };
    Locator.prototype.findById = function (id) {
        return this.find('id', id);
    };
    Locator.prototype.findByName = function (name) {
        return this.find('name', name);
    };
    Locator.prototype.findByLinkText = function (text) {
        return this.find('link text', text);
    };
    Locator.prototype.findByPartialLinkText = function (text) {
        return this.find('partial link text', text);
    };
    Locator.prototype.findByTagName = function (tagName) {
        return this.find('tag name', tagName);
    };
    Locator.prototype.findByXpath = function (path) {
        return this.find('xpath', path);
    };
    Locator.prototype.findAllByClassName = function (className) {
        return this.findAll('class name', className);
    };
    Locator.prototype.findAllByCssSelector = function (selector) {
        return this.findAll('css selector', selector);
    };
    Locator.prototype.findAllByName = function (name) {
        return this.findAll('name', name);
    };
    Locator.prototype.findAllByLinkText = function (text) {
        return this.findAll('link text', text);
    };
    Locator.prototype.findAllByPartialLinkText = function (text) {
        return this.findAll('partial link text', text);
    };
    Locator.prototype.findAllByTagName = function (tagName) {
        return this.findAll('tag name', tagName);
    };
    Locator.prototype.findAllByXpath = function (path) {
        return this.findAll('xpath', path);
    };
    Locator.prototype.findDisplayedByClassName = function (className) {
        return this.findDisplayed('class name', className);
    };
    Locator.prototype.findDisplayedByCssSelector = function (selector) {
        return this.findDisplayed('css selector', selector);
    };
    Locator.prototype.findDisplayedById = function (id) {
        return this.findDisplayed('id', id);
    };
    Locator.prototype.findDisplayedByName = function (name) {
        return this.findDisplayed('name', name);
    };
    Locator.prototype.findDisplayedByLinkText = function (text) {
        return this.findDisplayed('link text', text);
    };
    Locator.prototype.findDisplayedByPartialLinkText = function (text) {
        return this.findDisplayed('partial link text', text);
    };
    Locator.prototype.findDisplayedByTagName = function (tagName) {
        return this.findDisplayed('tag name', tagName);
    };
    Locator.prototype.findDisplayedByXpath = function (path) {
        return this.findDisplayed('xpath', path);
    };
    Locator.prototype.waitForDeletedByClassName = function (className) {
        return this.waitForDeleted('class name', className);
    };
    Locator.prototype.waitForDeletedByCssSelector = function (selector) {
        return this.waitForDeleted('css selector', selector);
    };
    Locator.prototype.waitForDeletedById = function (id) {
        return this.waitForDeleted('id', id);
    };
    Locator.prototype.waitForDeletedByName = function (name) {
        return this.waitForDeleted('name', name);
    };
    Locator.prototype.waitForDeletedByLinkText = function (text) {
        return this.waitForDeleted('link text', text);
    };
    Locator.prototype.waitForDeletedByPartialLinkText = function (text) {
        return this.waitForDeleted('partial link text', text);
    };
    Locator.prototype.waitForDeletedByTagName = function (tagName) {
        return this.waitForDeleted('tag name', tagName);
    };
    Locator.prototype.waitForDeletedByXpath = function (path) {
        return this.waitForDeleted('xpath', path);
    };
    return Locator;
}());
exports.default = Locator;
exports.w3cStrategies = {
    'css selector': true,
    'link text': true,
    'partial link text': true,
    xpath: true
};
exports.strategies = tslib_1.__assign({}, exports.w3cStrategies, { 'class name': true, id: true, name: true, 'partial link text': true, 'tag name': true });
function toW3cLocator(using, value) {
    switch (using) {
        case 'id':
            using = 'css selector';
            value = "#" + value;
            break;
        case 'class name':
            using = 'css selector';
            value = "." + value;
            break;
        case 'name':
            using = 'css selector';
            value = "[name=\"" + value + "\"]";
            break;
        case 'tag name':
            using = 'css selector';
            break;
    }
    return { using: using, value: value };
}
exports.toW3cLocator = toW3cLocator;
//# sourceMappingURL=Locator.js.map