{"version":3,"file":"findDisplayed.js","sourceRoot":"","sources":["../../../src/lib/findDisplayed.ts"],"names":[],"mappings":";;AAAA,8CAAyC;AACzC,6CAAwC;AAWxC,uBACC,OAAgB,EAChB,OAA0B,EAC1B,QAAkB,EAClB,KAAa;IAEb,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAA,eAAe;QACzD,IAAM,SAAS,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;QAE7B;YACC,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;gBAIpD,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;gBACX;oBAGC,IAAM,OAAO,GAAG,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;oBAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,UAAA,WAAW;4BAC5C,EAAE,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;gCACjB,MAAM,CAAC,OAAO,CAAC;4BAChB,CAAC;4BAAC,IAAI,CAAC,CAAC;gCACP,MAAM,CAAC,YAAY,EAAE,CAAC;4BACvB,CAAC;wBACF,CAAC,CAAC,CAAC;oBACJ,CAAC;gBACF,CAAC;gBAED,MAAM,CAAC,cAAI,CAAC,OAAO,CAClB,YAAY,EAAE,CACd,CAAC,IAAI,CAAC,UAAA,OAAO;oBACb,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,MAAM,CAAC,OAAO,CAAC;oBAChB,CAAC;oBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,SAAS,GAAG,eAAe,CAAC,CAAC,CAAC;wBACrD,IAAM,KAAK,GAAQ,IAAI,KAAK,EAAE,CAAC;wBAC/B,KAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;wBACxC,KAAK,CAAC,IAAI,GAAS,qBAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACjD,KAAK,CAAC,OAAO,GAAS,qBAAY,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;wBACpD,MAAM,KAAK,CAAC;oBACb,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,MAAM,CAAC,IAAI,EAAE,CAAC;oBACf,CAAC;gBACF,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,EAAE,CAAC;IACf,CAAC,CAAC,CAAC;AACJ,CAAC;AAlDD,gCAkDC","sourcesContent":["import Task from '@dojo/core/async/Task';\nimport statusCodes from './statusCodes';\nimport Element from '../Element';\nimport Session from '../Session';\nimport { Strategy } from './Locator';\n\n/**\n * Gets the first [[Element.isDisplayed|displayed]] element inside this element\n * matching the given query. This is inherently slower than [[Element.find]],\n * so should only be used in cases where the visibility of an element cannot be\n * ensured in advance.\n */\nexport default function findDisplayed(\n\tsession: Session,\n\tlocator: Session | Element,\n\tstrategy: Strategy,\n\tvalue: string\n) {\n\treturn session.getTimeout('implicit').then(originalTimeout => {\n\t\tconst startTime = Date.now();\n\n\t\tfunction poll(): Task<Element> {\n\t\t\treturn locator.findAll(strategy, value).then(elements => {\n\t\t\t\t// Due to concurrency issues with at least ChromeDriver\n\t\t\t\t// 2.16, each element must be tested one at a time instead\n\t\t\t\t// of using `Promise.all`\n\t\t\t\tlet i = -1;\n\t\t\t\tfunction checkElement():\n\t\t\t\t\t| PromiseLike<Element | void>\n\t\t\t\t\t| undefined {\n\t\t\t\t\tconst element = elements[++i];\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\treturn element.isDisplayed().then(isDisplayed => {\n\t\t\t\t\t\t\tif (isDisplayed) {\n\t\t\t\t\t\t\t\treturn element;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn checkElement();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn Task.resolve<Element | void>(\n\t\t\t\t\tcheckElement()\n\t\t\t\t).then(element => {\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\treturn element;\n\t\t\t\t\t} else if (Date.now() - startTime > originalTimeout) {\n\t\t\t\t\t\tconst error: any = new Error();\n\t\t\t\t\t\terror.status = elements.length ? 11 : 7;\n\t\t\t\t\t\terror.name = (<any>statusCodes)[error.status][0];\n\t\t\t\t\t\terror.message = (<any>statusCodes)[error.status][1];\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn poll();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn poll();\n\t});\n}\n"]}