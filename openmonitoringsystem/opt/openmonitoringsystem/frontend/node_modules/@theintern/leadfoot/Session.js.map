{"version":3,"file":"Session.js","sourceRoot":"","sources":["../../src/Session.ts"],"names":[],"mappings":";;;AAAA,qCAAwD;AAExD,qDAAgD;AAChD,wCAA0C;AAC1C,8CAAyC;AACzC,iDAA4C;AAC5C,yCAAgE;AAChE,mCAIoB;AACpB,uDAAkD;AAalD;IAAqC,mCAIpC;IAuBA,iBAAY,SAAiB,EAAE,MAAc,EAAE,YAA0B;QAAzE,YACC,iBAAO,SAWP;QA/BO,oBAAc,GAAQ,IAAI,CAAC;QAI3B,eAAS,GAAoC,EAAE,CAAC;QAChD,qBAAe,GAAG,KAAK,CAAC;QACxB,wBAAkB,GAAQ,IAAI,CAAC;QAC/B,mBAAa,GAAQ,IAAI,CAAC;QAejC,KAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,KAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,KAAI,CAAC,aAAa,GAAG,YAAY,CAAC;QAClC,KAAI,CAAC,cAAc,GAAG,EAAE,CAAC;QACzB,KAAI,CAAC,SAAS,GAAG;YAChB,MAAM,EAAE,cAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACvB,QAAQ,EAAE,cAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YACzB,WAAW,EAAE,cAAI,CAAC,OAAO,CAAC,QAAQ,CAAC;SACnC,CAAC;;IACH,CAAC;IAMD,sBAAI,iCAAY;aAAhB;YACC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC;QAC3B,CAAC;;;OAAA;IAKD,sBAAI,8BAAS;aAAb;YACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;QACxB,CAAC;;;OAAA;IAKD,sBAAI,2BAAM;aAAV;YACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;QACrB,CAAC;;;OAAA;IAMO,mCAAiB,GAAzB,UACC,MAAc,EACd,IAAY,EACZ,WAAgB,EAChB,SAAoB;QAJrB,iBA0EC;QApEA,IAAI,GAAG,UAAU,GAAG,IAAI,CAAC,UAAU,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;QAE/D,EAAE,CAAC,CACF,MAAM,KAAK,MAAM;YACjB,CAAC,WAAW;YACZ,IAAI,CAAC,YAAY,CAAC,eACnB,CAAC,CAAC,CAAC;YACF,WAAW,GAAG,EAAE,CAAC;QAClB,CAAC;QAED,IAAI,SAAS,GAAG,KAAK,CAAC;QACtB,MAAM,CAAC,IAAI,cAAI,CAAI,UAAA,OAAO;YAIzB,IAAI,WAAkC,CAAC;YACvC,IAAM,gBAAgB,GAAG;gBACxB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;oBACvC,KAAI,CAAC,YAAY,GAAG,SAAS,CAAC;gBAC/B,CAAC;YACF,CAAC,CAAC;YAEF,IAAM,UAAU,GAAG;gBAKlB,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;oBACf,gBAAgB,EAAE,CAAC;oBACnB,MAAM,CAAC;gBACR,CAAC;gBAED,IAAM,QAAQ,GAAG,KAAI,CAAC,OAAO,CAC3B,MAAM,CAAC,CAAoB,IAAI,EAAE,WAAW,EAAE,SAAS,CAAC;qBACxD,IAAI,CAAC,UAAA,QAAQ,IAAI,OAAA,QAAQ,CAAC,KAAK,EAAd,CAAc,CAAC,CAAC;gBAKnC,IAAM,WAAW,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAA,MAAM,IAAK,CAAC,CAAC,CAAC;gBACjD,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBASnC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAElB,MAAM,CAAC,WAAW,CAAC;YACpB,CAAC,CAAC;YAQF,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,CAAC,CAAC;gBACvB,WAAW,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,CAAC,OAAO,CAC1D,UAAU,CACV,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,WAAW,GAAG,KAAI,CAAC,YAAY,GAAG,UAAU,EAAE,CAAC;YAChD,CAAC;QACF,CAAC,EAAE,cAAM,OAAA,CAAC,SAAS,GAAG,IAAI,CAAC,EAAlB,CAAkB,CAAC,CAAC;IAC9B,CAAC;IAED,2BAAS,GAAT,UAAa,IAAY,EAAE,WAAiB,EAAE,SAAoB;QACjE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAI,KAAK,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;IACvE,CAAC;IAED,4BAAU,GAAV,UAAc,IAAY,EAAE,WAAiB,EAAE,SAAoB;QAClE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAI,MAAM,EAAE,IAAI,EAAE,WAAW,EAAE,SAAS,CAAC,CAAC;IACxE,CAAC;IAED,8BAAY,GAAZ,UAAgB,IAAY,EAAE,WAAiB,EAAE,SAAoB;QACpE,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAC5B,QAAQ,EACR,IAAI,EACJ,WAAW,EACX,SAAS,CACT,CAAC;IACH,CAAC;IASD,4BAAU,GAAV,UAAW,IAAa;QACvB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;IAWD,4BAAU,GAAV,UAAW,IAAa,EAAE,EAAU;QAApC,iBAwCC;QAtCA,EAAE,CAAC,CAAC,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;YAKrB,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC;QAC1B,CAAC;QAGD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;YACrD,EAAE,GAAG,CAAC,CAAC;QACR,CAAC;QAED,IAAI,IAAI,GAAG,IAAI,CAAC,YAAY,CAAC,qBAAqB;YACjD,CAAC,WAAG,GAAC,IAAI,IAAG,EAAE,MACd,CAAC,CAAC,EAAE,IAAI,MAAA,EAAE,EAAE,IAAA,EAAE,CAAC;QAEhB,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAO,UAAU,EAAE,IAAI,CAAC,CAAC,KAAK,CAAC,UAAA,KAAK;YAGlE,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBACrC,EAAE,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACvB,MAAM,CAAC,KAAI,CAAC,UAAU,CAAO,uBAAuB,EAAE;wBACrD,EAAE,EAAE,EAAE;qBACN,CAAC,CAAC;gBACJ,CAAC;gBAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,KAAK,UAAU,CAAC,CAAC,CAAC;oBAChC,MAAM,CAAC,KAAI,CAAC,UAAU,CAAO,wBAAwB,EAAE;wBACtD,EAAE,EAAE,EAAE;qBACN,CAAC,CAAC;gBACJ,CAAC;YACF,CAAC;YAED,MAAM,KAAK,CAAC;QACb,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC,cAAM,OAAA,EAAE,EAAF,CAAE,CAAC,CAAC,KAAK,CAAC,cAAM,OAAA,CAAC,EAAD,CAAC,CAAC,CAAC;QAE7D,MAAM,CAAC,OAAO,CAAC;;IAChB,CAAC;IAQD,wCAAsB,GAAtB;QAAA,iBAeC;QAdA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,eAAe,CAAC,CAAC,IAAI,CAAC,UAAA,MAAM;YACzD,EAAE,CAAC,CACF,KAAI,CAAC,YAAY,CAAC,kBAAkB;gBACpC,KAAI,CAAC,cAAc,CAAC,MAAM,CAC3B,CAAC,CAAC,CAAC;gBACF,IAAM,KAAK,GAAiB,IAAI,KAAK,EAAE,CAAC;gBACxC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;gBACpB,KAAK,CAAC,IAAI,GAAG,qBAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC1C,KAAK,CAAC,OAAO,GAAG,qBAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC7C,MAAM,KAAK,CAAC;YACb,CAAC;YAED,MAAM,CAAC,MAAM,CAAC;QACf,CAAC,CAAC,CAAC;IACJ,CAAC;IAKD,qCAAmB,GAAnB;QAAA,iBAYC;QAXA,MAAM,CAAC,IAAI,CAAC,SAAS,CACpB,gBAAgB,CAChB,CAAC,IAAI,CAAC,UAAC,OAAiB;YACxB,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;gBAC1C,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAA,MAAM;oBAC3B,MAAM,CAAC,CAAC,KAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;gBACrC,CAAC,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC,CAAC,CAAC;IACJ,CAAC;IAKD,+BAAa,GAAb;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,KAAK,CAAC,CAAC;IACtC,CAAC;IAKD,qBAAG,GAAH,UAAI,GAAW;QACd,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAE7B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC;QAC1C,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,KAAK,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACnD,CAAC;IAMD,2BAAS,GAAT;QAGC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,SAAS,CAAC,CAAC;IACzC,CAAC;IAMD,wBAAM,GAAN;QAGC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,MAAM,CAAC,CAAC;IACtC,CAAC;IAKD,yBAAO,GAAP;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAO,oBAAoB,CAAC,CAAC;QACjD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,SAAS,CAAC,CAAC;IACzC,CAAC;IAuBD,yBAAO,GAAP,UAAW,MAAyB,EAAE,IAAY;QAAlD,iBAkBC;QAdA,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;QACjE,CAAC;QAED,IAAI,MAAM,GAAG,IAAI,CAAC,UAAU,CAAI,SAAS,EAAE;YAC1C,MAAM,EAAE,sBAAe,CAAC,MAAM,CAAC;YAC/B,IAAI,EAAE,IAAI,IAAI,EAAE;SAChB,CAAC,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,iBAAiB,CAAC,KAAI,EAAE,KAAK,CAAC,EAA9B,CAA8B,EAAE,eAAe,CAAC,CAAC;QAElE,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,4BAA4B,CAAC,CAAC,CAAC;YACpD,MAAM,GAAG,MAAM,CAAC,IAAI,CAAC,UAAA,KAAK,IAAI,OAAA,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,EAA9B,CAA8B,CAAC,CAAC;QAC/D,CAAC;QAED,MAAM,CAAC,MAAM,CAAC;IACf,CAAC;IAgCD,8BAAY,GAAZ,UAAgB,MAAyB,EAAE,IAAY;QAItD,EAAE,CAAC,CAAC,OAAO,IAAI,KAAK,WAAW,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzD,MAAM,IAAI,KAAK,CACd,mDAAmD,CACnD,CAAC;QACH,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAI,eAAe,EAAE;YAC1C,MAAM,EAAE,sBAAe,CAAC,MAAM,CAAC;YAC/B,IAAI,EAAE,IAAI,IAAI,EAAE;SAChB,CAAC,CAAC,IAAI,CAAC,cAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,EAAE,eAAe,CAAC,CAAC;IAC5D,CAAC;IAOD,gCAAc,GAAd;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,YAAY,CAAC,CAAC,IAAI,CAC/C,UAAA,IAAI,IAAI,OAAA,IAAI,MAAM,CAAC,IAAI,EAAE,QAAQ,CAAC,EAA1B,CAA0B,CAClC,CAAC;IACH,CAAC;IAOD,wCAAsB,GAAtB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAW,uBAAuB,CAAC,CAAC;IAC1D,CAAC;IAMD,oCAAkB,GAAlB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,mBAAmB,CAAC,CAAC;IACpD,CAAC;IAOD,gCAAc,GAAd;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAU,eAAe,CAAC,CAAC;IACjD,CAAC;IAMD,+BAAa,GAAb;QACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,gBAAgB,CAAC,CAAC;IAChD,CAAC;IAQD,6BAAW,GAAX,UAAY,MAAc;QACzB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,cAAc,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IAClE,CAAC;IAWD,+BAAa,GAAb,UAAc,EAA6B;QAA3C,iBAOC;QANA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,oBAAoB,IAAI,OAAO,EAAE,KAAK,QAAQ,CAAC,CAAC,CAAC;YACtE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;gBACpC,OAAA,KAAI,CAAC,UAAU,CAAO,OAAO,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,CAAC;YAA/C,CAA+C,CAC/C,CAAC;QACH,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,OAAO,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACnD,CAAC;IAaD,gCAAc,GAAd,UAAe,MAAc;QAE5B,IAAI,IAAI,GAA8B,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;QACvD,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC3C,IAAI,GAAG,EAAE,MAAM,QAAA,EAAE,CAAC;QACnB,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,QAAQ,EAAE,IAAI,CAAC,CAAC;IAC9C,CAAC;IAMD,qCAAmB,GAAnB;QAAA,iBAgCC;QA/BA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,cAAc,CAAC,CAAC,KAAK,CAAC,UAAA,KAAK;YAOvD,EAAE,CAAC,CACF,KAAK,CAAC,IAAI,KAAK,gBAAgB;gBAC/B,CAAC,KAAI,CAAC,YAAY,CAAC,WAAW,KAAK,YAAY;oBAC9C,KAAK,CAAC,OAAO,CAAC,OAAO,CACpB,0DAA0D,CAC1D,GAAG,CAAC,CAAC,CACR,CAAC,CAAC,CAAC;gBACF,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,iCAAiC,CAAC,CAAC,CAAC;oBACzD,MAAM,KAAK,CAAC;gBACb,CAAC;gBAED,MAAM,CAAC,KAAI,CAAC,OAAO,CAClB,oCAAoC,CACpC,CAAC,IAAI,CAAC,UAAA,MAAM;oBAKZ,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,MAAM,IAAI,IAAI,CAAC,CAAC;gBAC3C,CAAC,CAAC,CAAC;YACJ,CAAC;YAED,MAAM,KAAK,CAAC;QACb,CAAC,CAAC,CAAC;IACJ,CAAC;IAOD,oCAAkB,GAAlB;QAAA,iBAwBC;QAvBA,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB;YACC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,UAAS,MAAW;gBAC7D,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,IAAI,CAAC;oBAC3C,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC;gBACpC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,WAAW,EAAE,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,QAAQ,CAAC,CAAC,KAAK,CAAC,UAAA,KAAK;YAGnD,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBACrC,KAAI,CAAC,YAAY,CAAC,kBAAkB,GAAG,IAAI,CAAC;gBAC5C,MAAM,CAAC,WAAW,EAAE,CAAC;YACtB,CAAC;YAED,MAAM,KAAK,CAAC;QACb,CAAC,CAAC,CAAC;IACJ,CAAC;IAmBD,+BAAa,GAAb;QAAA,iBAqDC;QArDa,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACtB,IAAA,sBAAY,EAAE,eAAK,EAAE,gBAAM,CAAS;QAEzC,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;YACnC,MAAM,GAAG,KAAK,CAAC;YACf,KAAK,GAAG,YAAY,CAAC;YACrB,YAAY,GAAG,IAAI,CAAC;QACrB,CAAC;QAED,IAAM,IAAI,GAAG,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACnD,IAAM,eAAa,GAAG;gBACrB,OAAA,KAAI,CAAC,iBAAiB,EAAE,CAAC,IAAI,CAAC,UAAA,QAAQ;oBACrC,OAAA,KAAI,CAAC,aAAa,CAAC;wBAGlB,CAAC,EAAE,QAAQ,CAAC,CAAC;wBACb,CAAC,EAAE,QAAQ,CAAC,CAAC;wBACb,KAAK,EAAE,IAAI,CAAC,KAAK;wBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;qBACnB,CAAC;gBAPF,CAOE,CACF;YATD,CASC,CAAC;YAEH,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,eAAa,EAAE,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBAIP,IAAI,OAAY,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,UAAA,cAAc;oBACvD,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC;yBACtC,IAAI,CAAC,cAAM,OAAA,eAAa,EAAE,EAAf,CAAe,CAAC;yBAC3B,KAAK,CAAC,UAAA,MAAM;wBACZ,OAAK,GAAG,MAAM,CAAC;oBAChB,CAAC,CAAC;yBACD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAnC,CAAmC,CAAC;yBAC/C,IAAI,CAAC;wBACL,EAAE,CAAC,CAAC,OAAK,CAAC,CAAC,CAAC;4BACX,MAAM,OAAK,CAAC;wBACb,CAAC;oBACF,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,GAAG,SAAS,CAAC;YAC1B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,gBAAgB,EAAE,EAAE,KAAK,OAAA,EAAE,MAAM,QAAA,EAAE,EAAE;gBACjE,YAAY;aACZ,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAYD,+BAAa,GAAb,UAAc,YAAqB;QAAnC,iBA6CC;QA5CA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACnD,IAAM,eAAa,GAAG;gBACrB,OAAA,KAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI,IAAI,OAAA,CAAC;oBAClC,KAAK,EAAE,IAAI,CAAC,KAAK;oBACjB,MAAM,EAAE,IAAI,CAAC,MAAM;iBACnB,CAAC,EAHgC,CAGhC,CAAC;YAHH,CAGG,CAAC;YAEL,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,eAAa,EAAE,CAAC;YACxB,CAAC;YAAC,IAAI,CAAC,CAAC;gBAIP,IAAI,OAAY,CAAC;gBACjB,IAAI,MAAuC,CAAC;gBAC5C,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,UAAA,cAAc;oBACvD,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,YAAa,CAAC;yBACvC,IAAI,CAAC,cAAM,OAAA,eAAa,EAAE,EAAf,CAAe,CAAC;yBAC3B,IAAI,CACJ,UAAA,KAAK;wBACJ,MAAI,GAAG,KAAK,CAAC;oBACd,CAAC,EACD,UAAA,MAAM;wBACL,OAAK,GAAG,MAAM,CAAC;oBAChB,CAAC,CACD;yBACA,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAnC,CAAmC,CAAC;yBAC/C,IAAI,CAAC;wBACL,EAAE,CAAC,CAAC,OAAK,CAAC,CAAC,CAAC;4BACX,MAAM,OAAK,CAAC;wBACb,CAAC;wBACD,MAAM,CAAC,MAAI,CAAC;oBACb,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,GAAG,SAAS,CAAC;YAC1B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAGlB,gBAAgB,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5C,CAAC;IACF,CAAC;IAKD,+BAAa,GAAb;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAKlB,aAAa,CAAC,CAAC;IACnB,CAAC;IAQD,+BAAa,GAAb,UAAc,IAKb;QACA,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,aAAa,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAmBD,mCAAiB,GAAjB;QAAA,iBAsDC;QAtDiB,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QAC1B,IAAA,sBAAY,EAAE,WAAC,EAAE,WAAC,CAAS;QAEhC,EAAE,CAAC,CAAC,OAAO,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YAC9B,CAAC,GAAG,CAAC,CAAC;YACN,CAAC,GAAG,YAAY,CAAC;YACjB,YAAY,GAAG,IAAI,CAAC;QACrB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAAC;YAGnD,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,UAAA,IAAI;gBACpC,IAAM,IAAI,GAAG,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;gBAC9D,OAAO,CAAC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;gBAE5C,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;oBAC1B,MAAM,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBACjC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAIP,IAAI,OAAY,CAAC;oBACjB,MAAM,CAAC,KAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CACxC,UAAA,cAAc;wBACb,EAAE,CAAC,CAAC,cAAc,KAAK,YAAY,CAAC,CAAC,CAAC;4BACrC,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;wBAC1B,CAAC;wBAAC,IAAI,CAAC,CAAC;4BACP,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC;iCACtC,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,aAAa,CAAC,IAAI,CAAC,EAAxB,CAAwB,CAAC;iCACpC,KAAK,CAAC,UAAA,MAAM;gCACZ,OAAK,GAAG,MAAM,CAAC;4BAChB,CAAC,CAAC;iCACD,IAAI,CAAC;gCACL,OAAA,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC;4BAAnC,CAAmC,CACnC;iCACA,IAAI,CAAC;gCACL,EAAE,CAAC,CAAC,OAAK,CAAC,CAAC,CAAC;oCACX,MAAM,OAAK,CAAC;gCACb,CAAC;4BACF,CAAC,CAAC,CAAC;wBACL,CAAC;oBACF,CAAC,CACD,CAAC;gBACH,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,YAAY,GAAG,SAAS,CAAC;YAC1B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,oBAAoB,EAAE,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,EAAE;gBAC5D,YAAY;aACZ,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAgBD,mCAAiB,GAAjB,UAAkB,YAAqB;QAAvC,iBAmDC;QAlDA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACnD,IAAM,mBAAiB,GAAG;gBACzB,OAAA,KAAI,CAAC,aAAa,EAAE,CAAC,IAAI,CAAC,UAAC,EAAQ;wBAAN,QAAC,EAAE,QAAC;oBAChC,MAAM,CAAC,EAAE,CAAC,GAAA,EAAE,CAAC,GAAA,EAAE,CAAC;gBACjB,CAAC,CAAC;YAFF,CAEE,CAAC;YAEJ,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,mBAAiB,EAAE,CAAC;YAC5B,CAAC;YAAC,IAAI,CAAC,CAAC;gBAIP,IAAI,OAAY,CAAC;gBACjB,IAAI,UAAkC,CAAC;gBACvC,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,UAAA,cAAc;oBACvD,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,YAAa,CAAC;yBACvC,IAAI,CAAC,cAAM,OAAA,mBAAiB,EAAE,EAAnB,CAAmB,CAAC;yBAC/B,IAAI,CACJ,UAAA,SAAS;wBACR,UAAQ,GAAG,SAAS,CAAC;oBACtB,CAAC,EACD,UAAA,MAAM;wBACL,OAAK,GAAG,MAAM,CAAC;oBAChB,CAAC,CACD;yBACA,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAnC,CAAmC,CAAC;yBAC/C,IAAI,CAAC;wBACL,EAAE,CAAC,CAAC,OAAK,CAAC,CAAC,CAAC;4BACX,MAAM,OAAK,CAAC;wBACb,CAAC;wBACD,MAAM,CAAC,UAAQ,CAAC;oBACjB,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;gBACzC,YAAY,GAAG,SAAS,CAAC;YAC1B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAGlB,oBAAoB,EAAE,IAAI,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;gBAG3D,MAAM,CAAC;oBACN,CAAC,EAAE,QAAQ,CAAC,CAAC;oBACb,CAAC,EAAE,QAAQ,CAAC,CAAC;iBACb,CAAC;YACH,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IASD,gCAAc,GAAd,UAAe,YAAqB;QAApC,iBAkCC;QAjCA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC,CAAC;YACnD,IAAM,gBAAc,GAAG;gBACtB,OAAA,KAAI,CAAC,UAAU,CAAO,iBAAiB,CAAC;YAAxC,CAAwC,CAAC;YAE1C,EAAE,CAAC,CAAC,YAAY,IAAI,IAAI,CAAC,CAAC,CAAC;gBAC1B,MAAM,CAAC,gBAAc,EAAE,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBAIP,IAAI,OAAY,CAAC;gBACjB,MAAM,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,IAAI,CAAC,UAAA,cAAc;oBACvD,MAAM,CAAC,KAAI,CAAC,cAAc,CAAC,YAAa,CAAC;yBACvC,IAAI,CAAC,cAAM,OAAA,gBAAc,EAAE,EAAhB,CAAgB,CAAC;yBAC5B,KAAK,CAAC,UAAA,MAAM;wBACZ,OAAK,GAAG,MAAM,CAAC;oBAChB,CAAC,CAAC;yBACD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,CAAC,cAAc,CAAC,EAAnC,CAAmC,CAAC;yBAC/C,IAAI,CAAC;wBACL,EAAE,CAAC,CAAC,OAAK,CAAC,CAAC,CAAC;4BACX,MAAM,OAAK,CAAC;wBACb,CAAC;oBACF,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,EAAE,CAAC,CAAC,OAAO,YAAY,KAAK,WAAW,CAAC,CAAC,CAAC;gBACzC,YAAY,GAAG,SAAS,CAAC;YAC1B,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,oBAAoB,EAAE,IAAI,EAAE;gBACxD,YAAY;aACZ,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAKD,4BAAU,GAAV;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAoB,QAAQ,CAAC,CAAC,IAAI,CAAC,UACvD,OAA0B;YAI1B,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,UAAS,SAAS;gBACpC,IAAI,MAAM,GAAQ,EAAE,CAAC;gBACrB,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CACF,GAAG,KAAK,MAAM;wBACd,GAAG,KAAK,OAAO;wBACf,GAAG,KAAK,MAAM;wBACd,GAAG,KAAK,QAAQ;wBAChB,GAAG,KAAK,QAAQ;wBAChB,GAAG,KAAK,UAAU;wBAClB,GAAG,KAAK,QACT,CAAC,CAAC,CAAC;wBACF,MAAM,CAAC,GAAG,CAAC,GAAS,SAAU,CAAC,GAAG,CAAC,CAAC;oBACrC,CAAC;gBACF,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;oBACvC,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,CAAC;gBAChD,CAAC;gBAED,MAAM,CAAC,MAAM,CAAC;YACf,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAKD,2BAAS,GAAT,UAAU,MAAuB;QAChC,EAAE,CAAC,CAAC,OAAO,MAAM,CAAC,MAAM,KAAK,QAAQ,CAAC,CAAC,CAAC;YACvC,MAAM,CAAC,MAAM,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QACzC,CAAC;QAED,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,YAAY,IAAI,CAAC,CAAC,CAAC;YACnC,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,EAAE,GAAG,IAAI,CAAC;QAChD,CAAC;QACD,IAAM,IAAI,GAAG,IAAI,CAAC;QAElB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,QAAQ,EAAE;YACtC,MAAM,EAAE,MAAM;SACd,CAAC,CAAC,KAAK,CAAC,UAAC,KAAmB;YAG5B,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,gBAAgB,CAAC,CAAC,CAAC;gBAIrC,EAAE,CAAC,CAAC,6BAA6B,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;oBACrD,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;oBACpB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;oBACpB,KAAK,CAAC,IAAI,GAAG,qBAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1C,KAAK,CAAC,OAAO,GAAG,qBAAqB,CAAC;oBACtC,MAAM,KAAK,CAAC;gBACb,CAAC;gBAED,EAAE,CAAC,CACF,+DAA+D,CAAC,IAAI,CACnE,MAAM,CAAC,KAAK,CAEd,CAAC,CAAC,CAAC;oBACF,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;oBACpB,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;oBACpB,KAAK,CAAC,IAAI,GAAG,qBAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;oBAC1C,KAAK,CAAC,OAAO,GAAG,sBAAsB,CAAC;oBACvC,MAAM,KAAK,CAAC;gBACb,CAAC;gBAED,IAAM,WAAW,GAAG,CAAC,MAAM,CAAC,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;gBAEvD,oBAAoB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;gBAE1C,MAAM,CAAC,IAAI,CAAC,OAAO,CACS,UAAS,MAAW;oBAC9C,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;gBAC1B,CAAC,EACD,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACvB,CAAC;YACH,CAAC;YAED,MAAM,KAAK,CAAC;QACb,CAAC,CAAC,CAAC;IACJ,CAAC;IAKD,8BAAY,GAAZ;QAAA,iBAgCC;QA/BA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;gBACpC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,UAAC,OAAO,EAAE,MAAM;oBACrC,IAAM,aAAa,GAAG;wBAClB,MAAM,CAAC,IAAI,MAAG;wBACjB,uCAAuC;qBACvC,CAAC;oBACF,oBAAoB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;oBAE5C,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC;wBACnB,MAAM,CAAC,KAAI,CAAC,OAAO,CAGS,UAC1B,aAAqB;4BAKrB,QAAQ,CAAC,MAAM,GAAM,aAAa,iBAAY,kBAAkB,CAC/D,QAAQ,CAAC,MAAM,CACf,aAAU,CAAC;wBACb,CAAC,EACD,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACzB,CAAC;oBACH,CAAC,CAAC,CAAC;gBACJ,CAAC,EAAE,cAAI,CAAC,OAAO,EAAE,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,QAAQ,CAAC,CAAC;IAC1C,CAAC;IAOD,8BAAY,GAAZ,UAAa,IAAY;QAAzB,iBAwCC;QAvCA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC,CAAC;YAC1C,MAAM,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,IAAI,CAAC,UAAA,OAAO;gBACpC,IAAI,MAAW,CAAC;gBAChB,EAAE,CAAC,CACF,OAAO,CAAC,IAAI,CAAC,UAAA,KAAK;oBACjB,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC;wBACzB,MAAM,GAAG,KAAK,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC;oBACb,CAAC;oBACD,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC,CACF,CAAC,CAAC,CAAC;oBACF,IAAM,aAAa,GAAG;wBAClB,MAAM,CAAC,IAAI,MAAG;wBACjB,uCAAuC;qBACvC,CAAC;oBAEF,oBAAoB,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;oBAE5C,MAAM,CAAC,KAAI,CAAC,OAAO,CAGS,UAC1B,aAAkB;wBAKlB,QAAQ,CAAC,MAAM,GAAM,aAAa,iBAAY,kBAAkB,CAC/D,QAAQ,CAAC,MAAM,CACf,aAAU,CAAC;oBACb,CAAC,EACD,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CACzB,CAAC;gBACH,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,WAAW,EAAE,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3D,CAAC;IAOD,+BAAa,GAAb;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,CAAC,CAAC;YACxC,MAAM,CAAC,IAAI,CAAC,OAAO,CACS;gBAC1B,MAAM,CAAC,QAAQ,CAAC,eAAe,CAAC,SAAS,CAAC;YAC3C,CAAC,CACD,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,QAAQ,CAAC,CAAC;QACzC,CAAC;IACF,CAAC;IAMD,8BAAY,GAAZ;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,OAAO,CAAC,CAAC;IACxC,CAAC;IAiBD,sBAAI,GAAJ,UAAK,KAAe,EAAE,KAAa;QAAnC,iBAqCC;QApCA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7C,IAAM,OAAO,GAAG,sBAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3C,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7C,IAAM,OAAO,GAAG,sBAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3C,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CACF,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,IAAI,CAAC,YAAY,CAAC,6BAA6B;gBAC/C,IAAI,CAAC,YAAY,CAAC,qBAAqB,CACzC,CAAC,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,OAAO,CACS,IAAI,CAAC,qBAAqB,EACrD,CAAC,KAAK,EAAE,KAAK,CAAC,CACd,CAAC,IAAI,CAAC,UAAA,OAAO;gBACb,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACd,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;oBAC1B,KAAK,CAAC,IAAI,GAAG,eAAe,CAAC;oBAC7B,MAAM,KAAK,CAAC;gBACb,CAAC;gBACD,MAAM,CAAC,IAAI,iBAAO,CAAC,OAAO,EAAE,KAAI,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAqB,SAAS,EAAE;YACrD,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;SACZ,CAAC,CAAC,IAAI,CAAC,UAAA,OAAO;YACd,MAAM,CAAC,IAAI,iBAAO,CAAC,OAAO,EAAE,KAAI,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACJ,CAAC;IAYD,yBAAO,GAAP,UAAQ,KAAe,EAAE,KAAa;QAAtC,iBAoCC;QAnCA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7C,IAAM,OAAO,GAAG,sBAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3C,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,qBAAqB,CAAC,CAAC,CAAC;YAC7C,IAAM,OAAO,GAAG,sBAAY,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;YAC3C,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;YACtB,KAAK,GAAG,OAAO,CAAC,KAAK,CAAC;QACvB,CAAC;QAED,EAAE,CAAC,CACF,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACjC,CAAC,IAAI,CAAC,YAAY,CAAC,6BAA6B;gBAC/C,IAAI,CAAC,YAAY,CAAC,qBAAqB,CACzC,CAAC,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,OAAO,CACS,IAAI,CAAC,qBAAqB,EACrD,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CACpB,CAAC,IAAI,CAAC,UAAA,QAAQ;gBACd,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAA2B;oBAC/C,MAAM,CAAC,IAAI,iBAAO,CAAC,OAAO,EAAE,KAAI,CAAC,CAAC;gBACnC,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAQ,UAAU,EAAE;YACzC,KAAK,EAAE,KAAK;YACZ,KAAK,EAAE,KAAK;SACZ,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;YACf,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,OAA2B;gBAC/C,MAAM,CAAC,IAAI,iBAAO,CAAC,OAAO,EAAE,KAAI,CAAC,CAAC;YACnC,CAAC,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;IAMD,kCAAgB,GAAhB;QADA,iBA6BC;QA3BA,IAAM,wBAAwB,GAAG;YAChC,MAAM,CAAC,KAAI,CAAC,OAAO,CAAU,gCAAgC,CAAC,CAAC;QAChE,CAAC,CAAC;QAEF,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;YAC3C,MAAM,CAAC,wBAAwB,EAAE,CAAC;QACnC,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,IAAI,IAAI,SAA0B,CAAC;YAEnC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,0BAA0B,CAAC,CAAC,CAAC;gBAClD,IAAI,GAAG,IAAI,CAAC,SAAS,CAAqB,gBAAgB,CAAC,CAAC;YAC7D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,IAAI,GAAG,IAAI,CAAC,UAAU,CAAqB,gBAAgB,CAAC,CAAC;YAC9D,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,UAAC,OAA2B;gBAC5C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACb,MAAM,CAAC,IAAI,iBAAO,CAAC,OAAO,EAAE,KAAI,CAAC,CAAC;gBACnC,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAKP,MAAM,CAAC,wBAAwB,EAAE,CAAC;gBACnC,CAAC;YACF,CAAC,CAAC,CAAC;QACJ,CAAC;IACF,CAAC;IAeD,2BAAS,GAAT,UAAU,IAAuB;QAChC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAC1B,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC;QACf,CAAC;QAED,EAAE,CAAC,CACF,IAAI,CAAC,YAAY,CAAC,cAAc;YAChC,CAAC,IAAI,CAAC,YAAY,CAAC,mBACpB,CAAC,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC;QAC3C,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,MAAM,EAAE;YACpC,KAAK,EAAE,IAAI;SACX,CAAC,CAAC;IACJ,CAAC;IAOD,gCAAc,GAAd;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CACpB,aAAa,CACb,CAAC,IAAI,CAAC,UAAS,WAAW;YAC1B,MAAM,CAAC,WAAW,CAAC,WAAW,EAAE,CAAC;QAClC,CAAC,CAAC,CAAC;IACJ,CAAC;IAOD,gCAAc,GAAd,UAAe,WAAmB;QACjC,WAAW,GAAG,WAAW,CAAC,WAAW,EAAE,CAAC;QAExC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,aAAa,EAAE;YAC3C,WAAW,EAAE,WAAW;SACxB,CAAC,CAAC;IACJ,CAAC;IAKD,8BAAY,GAAZ;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,YAAY,CAAC,CAAC;IAC7C,CAAC;IAOD,8BAAY,GAAZ,UAAa,IAAuB;QACnC,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACtB,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,YAAY,EAAE;YAC1C,IAAI,EAAE,IAAI;SACV,CAAC,CAAC;IACJ,CAAC;IAMD,6BAAW,GAAX;QACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,cAAc,CAAC,CAAC;IAC9C,CAAC;IAOD,8BAAY,GAAZ;QACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,eAAe,CAAC,CAAC;IAC/C,CAAC;IA+BD,6BAAW,GAAX;QADA,iBA+DC;QA9DW,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACpB,IAAA,iBAAO,EAAE,iBAAO,EAAE,iBAAO,CAAS;QAEvC,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC;YACtE,OAAO,GAAG,OAAO,CAAC;YAClB,OAAO,GAAG,OAAO,CAAC;YAClB,OAAO,GAAG,IAAI,CAAC;QAChB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAO,aAAa,EAAE;gBACxC;oBACC,MAAM,EAAE,WAAW;oBACnB,QAAQ,EAAE,IAAI,CAAC,kBAAkB;oBACjC,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,OAAO;oBAChB,OAAO,EAAE,OAAO;iBAChB;aACD,CAAC,CAAC,IAAI,CAAC,UAAA,WAAW;gBAClB,KAAI,CAAC,kBAAkB,GAAG,WAAW,CAAC;YACvC,CAAC,CAAC,CAAC;QACJ,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;QAC7B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YAOlC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,CAAC,CAAC;gBAC3C,MAAM,CAAC,IAAI,CAAC,OAAO,CAClB,uBAAuB,CACvB,CAAC,IAAI,CAAC,UAAA,OAAO;oBACb,MAAM,CAAC,OAAO;yBACZ,WAAW,EAAE;yBACb,IAAI,CAAC,UAAC,QAAkC;wBACxC,MAAM,CAAC,KAAI,CAAC,WAAW,CACtB,OAAO,EACP,OAAO,GAAG,QAAQ,CAAC,CAAC,EACpB,OAAO,GAAG,QAAQ,CAAC,CAAC,CACpB,CAAC;oBACH,CAAC,CAAC,CAAC;gBACL,CAAC,CAAC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC,IAAI,CAAC,OAAO,CAClB,kCAAkC,CAClC,CAAC,IAAI,CAAC,UAAA,OAAO;oBACb,MAAM,CAAC,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;YACJ,CAAC;QACF,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,QAAQ,EAAE;YACtC,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SAChB,CAAC,CAAC,IAAI,CAAC;YACP,KAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC7B,CAAC,CAAC,CAAC;IACJ,CAAC;IAYD,kCAAgB,GAAhB,UAAiB,MAAe;QAAhC,iBAoBC;QAnBA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAO,aAAa,EAAE;gBACxC;oBACC,MAAM,EAAE,OAAO;oBACf,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,IAAI,CAAC,kBAAkB;iBACjC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,OAAO,EAAE;YACrC,MAAM,EAAE,MAAM;SACd,CAAC,CAAC,IAAI,CAAC;YAGP,EAAE,CAAC,CAAC,KAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC;gBACpC,MAAM,CAAC,YAAK,CAAC,GAAG,CAAC,CAAC;YACnB,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAQD,kCAAgB,GAAhB,UAAiB,MAAe;QAC/B,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAO,aAAa,EAAE;gBACxC;oBACC,MAAM,EAAE,WAAW;oBACnB,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,IAAI,CAAC,kBAAkB;iBACjC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,YAAY,EAAE;YAC1C,MAAM,EAAE,MAAM;SACd,CAAC,CAAC;IACJ,CAAC;IAQD,oCAAkB,GAAlB,UAAmB,MAAe;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAO,aAAa,EAAE;gBACxC;oBACC,MAAM,EAAE,SAAS;oBACjB,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,IAAI,CAAC,kBAAkB;iBACjC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,UAAU,EAAE;YACxC,MAAM,EAAE,MAAM;SACd,CAAC,CAAC;IACJ,CAAC;IAKD,6BAAW,GAAX;QAAA,iBAoBC;QAnBA,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAO,aAAa,EAAE;gBACxC;oBACC,MAAM,EAAE,UAAU;oBAClB,MAAM,EAAE,CAAC;oBACT,QAAQ,EAAE,IAAI,CAAC,kBAAkB;iBACjC;aACD,CAAC,CAAC;QACJ,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE;iBAC5B,IAAI,CAAC;gBACL,MAAM,CAAC,KAAI,CAAC,kBAAkB,EAAE,CAAC;YAClC,CAAC,CAAC;iBACD,IAAI,CAAC,cAAM,OAAA,KAAI,CAAC,UAAU,CAAO,aAAa,CAAC,EAApC,CAAoC,CAAC,CAAC;QACpD,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,aAAa,CAAC,CAAC;IAC7C,CAAC;IAUD,qBAAG,GAAH,UAAI,OAAgB;QACnB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,aAAa,EAAE;YAC3C,OAAO,EAAE,OAAO,CAAC,SAAS;SAC1B,CAAC,CAAC;IACJ,CAAC;IASD,6BAAW,GAAX,UAAY,CAAS,EAAE,CAAS;QAI/B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IAWD,+BAAa,GAAb,UAAc,CAAS,EAAE,CAAS;QACjC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,UAAU,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC1D,CAAC;IAQD,4BAAU,GAAV,UAAW,CAAS,EAAE,CAAS;QAC9B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,YAAY,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAC5D,CAAC;IAwBD,6BAAW,GAAX;QAAY,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACpB,IAAA,iBAAO,EAAE,iBAAO,EAAE,iBAAO,CAAS;QACvC,EAAE,CAAC,CAAC,OAAO,OAAO,KAAK,WAAW,IAAI,OAAO,OAAO,KAAK,WAAW,CAAC,CAAC,CAAC;YACtE,OAAO,GAAG,OAAO,CAAC;YAClB,OAAO,GAAG,OAAO,CAAC;YAClB,OAAO,GAAG,SAAS,CAAC;QACrB,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,iBAAiB,CAAC,CAAC,CAAC;YACzC,MAAM,CAAC,IAAI,CAAC,OAAO,CACS,UAC1B,OAAoB,EACpB,CAAS,EACT,CAAS;gBAET,IAAM,IAAI,GAAG,EAAE,IAAI,EAAE,MAAM,CAAC,OAAO,EAAE,GAAG,EAAE,MAAM,CAAC,OAAO,EAAE,CAAC;gBAC3D,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBACb,IAAM,IAAI,GAAG,OAAO,CAAC,qBAAqB,EAAE,CAAC;oBAC7C,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC;oBACvB,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC;gBACtB,CAAC;gBAED,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;YAC9C,CAAC,EACD,CAAC,OAAO,EAAE,OAAO,EAAE,OAAO,CAAC,CAC3B,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACb,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC;QAC7B,CAAC;QAID,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,cAAc,EAAE;YAC5C,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;SAChB,CAAC,CAAC;IACJ,CAAC;IAQD,2BAAS,GAAT,UAAU,OAAiB;QAC1B,IAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,mBAAmB,EAAE;YACjD,OAAO,EAAE,SAAS;SAClB,CAAC,CAAC;IACJ,CAAC;IAQD,yBAAO,GAAP,UAAQ,OAAiB;QACxB,IAAM,SAAS,GAAG,OAAO,IAAI,OAAO,CAAC,SAAS,CAAC;QAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,iBAAiB,EAAE,EAAE,OAAO,EAAE,SAAS,EAAE,CAAC,CAAC;IACzE,CAAC;IAoBD,6BAAW,GAAX;QAAY,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACpB,IAAA,iBAAO,EAAE,iBAAO,EAAE,iBAAO,EAAE,eAAK,CAAS;QAC9C,EAAE,CAAC,CACF,OAAO,KAAK,KAAK,WAAW;YAC5B,OAAO,OAAO,KAAK,WAAW;YAC9B,OAAO,OAAO,KAAK,WACpB,CAAC,CAAC,CAAC;YACF,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,aAAa,EAAE;gBAC3C,MAAM,EAAE,OAAO;gBACf,MAAM,EAAE,OAAO;aACf,CAAC,CAAC;QACJ,CAAC;QAMD,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,aAAa,EAAE;YAC3C,OAAO,EAAE,OAAO,CAAC,SAAS;YAC1B,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,KAAK,EAAE,KAAK;SACZ,CAAC,CAAC;IACJ,CAAC;IASD,gCAAc,GAAd;QAAA,iBAgBC;QAfA,MAAM,CAAC,IAAI,CAAC,SAAS,CAAc,UAAU,CAAC,CAAC,IAAI,CAAC,UAAA,QAAQ;YAM3D,EAAE,CAAC,CACF,QAAQ,CAAC,QAAQ,KAAK,CAAC;gBACvB,KAAI,CAAC,aAAa,KAAK,QAAQ,CAAC,QACjC,CAAC,CAAC,CAAC;gBACF,QAAQ,CAAC,QAAQ,GAAG,SAAS,CAAC;YAC/B,CAAC;YAED,MAAM,CAAC,QAAQ,CAAC;QACjB,CAAC,CAAC,CAAC;IACJ,CAAC;IASD,gCAAc,GAAd,UAAe,QAAqB;QAGnC,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,KAAK,SAAS,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC;QACxC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,UAAU,EAAE,EAAE,QAAQ,UAAA,EAAE,CAAC,CAAC;IACxD,CAAC;IAeD,4BAAU,GAAV,UAAW,IAAY;QACtB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAwB,KAAK,EAAE;YACpD,IAAI,EAAE,IAAI;SACV,CAAC,CAAC,IAAI,CAAC,UAAS,IAAI;YAIpB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACX,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;YAED,EAAE,CAAC,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBACzB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,UAAA,GAAG;oBAClB,IAAM,OAAO,GAAG,oCAAoC,CAAC,IAAI,CACxD,GAAG,CACH,CAAC;oBACF,IAAI,KAAe,CAAC;oBAEpB,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;wBACb,KAAK,GAAG;4BACP,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;4BACxC,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;4BACjB,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;yBACnB,CAAC;oBACH,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACP,KAAK,GAAG;4BACP,SAAS,EAAE,GAAG;4BACd,KAAK,EAAE,MAAM;4BACb,OAAO,EAAE,GAAG;yBACZ,CAAC;oBACH,CAAC;oBAED,MAAM,CAAC,KAAK,CAAC;gBACd,CAAC,CAAC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,MAAM,CAAC,IAAI,CAAC;YACb,CAAC;QACF,CAAC,CAAC,CAAC;IACJ,CAAC;IAMD,sCAAoB,GAApB;QACC,EAAE,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC,CAAC;YACrC,MAAM,CAAC,cAAI,CAAC,OAAO,CAAW,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;QAChE,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,SAAS,CAAW,WAAW,CAAC,CAAC;IAC9C,CAAC;IASD,2CAAyB,GAAzB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,0BAA0B,CAAC,CAAC;IAC3D,CAAC;IAMD,sBAAI,GAAJ;QACC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACpD,CAAC;IAgBO,uCAAqB,GAA7B,UACC,KAAa,EACb,KAAa,EACb,QAAiB,EACjB,OAAqB;QAErB,IAAM,KAAK,GACV,KAAK,KAAK,WAAW;YACpB,CAAC,CAAC,UAAS,QAAgB,EAAE,IAAY;gBACvC,MAAM,CAAC,QAAQ,KAAK,IAAI,CAAC;YAC1B,CAAC;YACF,CAAC,CAAC,UAAS,QAAgB,EAAE,IAAY;gBACvC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACtC,CAAC,CAAC;QAEL,IAAM,KAAK,GAAG,CAAC,OAAO,IAAI,QAAQ,CAAC,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC;QAC9D,IAAI,QAAgB,CAAC;QACrB,IAAM,KAAK,GAAkB,EAAE,CAAC;QAMhC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAEvC,QAAQ,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS;iBAC3B,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;iBACnB,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;iBACnB,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;iBAC5B,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;YACtB,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC5B,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;oBACf,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBACjB,CAAC;gBACD,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;QACF,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACd,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;IACF,CAAC;IAKD,qCAAmB,GAAnB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAW,eAAe,CAAC,CAAC;IAClD,CAAC;IAQD,qCAAmB,GAAnB,UAAoB,GAAW,EAAE,KAAa;QAC7C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,eAAe,EAAE,EAAE,GAAG,KAAA,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;IAC/D,CAAC;IAKD,mCAAiB,GAAjB;QACC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,eAAe,CAAC,CAAC;IACjD,CAAC;IAOD,qCAAmB,GAAnB,UAAoB,GAAW;QAC9B,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,sBAAsB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACpE,CAAC;IAOD,wCAAsB,GAAtB,UAAuB,GAAW;QACjC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,sBAAsB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACrE,CAAC;IAMD,uCAAqB,GAArB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,oBAAoB,CAAC,CAAC;IACrD,CAAC;IAMD,uCAAqB,GAArB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAW,iBAAiB,CAAC,CAAC;IACpD,CAAC;IAQD,uCAAqB,GAArB,UAAsB,GAAW,EAAE,KAAa;QAC/C,MAAM,CAAC,IAAI,CAAC,UAAU,CAAO,iBAAiB,EAAE,EAAE,GAAG,KAAA,EAAE,KAAK,OAAA,EAAE,CAAC,CAAC;IACjE,CAAC;IAKD,qCAAmB,GAAnB;QACC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,iBAAiB,CAAC,CAAC;IACnD,CAAC;IAOD,uCAAqB,GAArB,UAAsB,GAAW;QAChC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,wBAAwB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACtE,CAAC;IAOD,0CAAwB,GAAxB,UAAyB,GAAW;QACnC,MAAM,CAAC,IAAI,CAAC,YAAY,CAAO,wBAAwB,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IACvE,CAAC;IAMD,yCAAuB,GAAvB;QACC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAS,sBAAsB,CAAC,CAAC;IACvD,CAAC;IAiBD,+BAAa,GAAb,UAAc,KAAe,EAAE,KAAa;QAC3C,MAAM,CAAC,uBAAa,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IAChD,CAAC;IAYD,gCAAc,GAAd,UAAe,KAAe,EAAE,KAAa;QAC5C,MAAM,CAAC,wBAAc,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;IACjD,CAAC;IAKD,wCAAsB,GAAtB;QACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IAOD,wCAAsB,GAAtB,UAAuB,EAAU;QAChC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;IACtC,CAAC;IAKD,gCAAc,GAAd;QACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;IACpC,CAAC;IAOD,gCAAc,GAAd,UAAe,EAAU;QACxB,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;IACxC,CAAC;IAKD,oCAAkB,GAAlB;QACC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACrC,CAAC;IAOD,oCAAkB,GAAlB,UAAmB,EAAU;QAC5B,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACzC,CAAC;IA/1BD;QADC,UAAU,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;mDA6BpC;IA8HD;QADC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;8CA+DjC;IA+GD;QADC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;sCAKjC;IA6DD;QADC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;8CAwCjC;IAQD;QADC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;4CAMjC;IAQD;QADC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;0CAIjC;IAoBD;QADC,UAAU,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC;8CAwBjC;IA8WF,cAAC;CAAA,AAxhED,CAAqC,iBAAO,GAwhE3C;kBAxhEoB,OAAO;AAmiE5B,oBAAoB,UAGnB;IACA,MAAM,CAAC,UACN,MAAW,EACX,QAAgB,EAChB,UAA8B;QAE9B,IAAM,EAAE,GAAa,MAAM,CAAC,QAAQ,CAAC,CAAC;QACtC,UAAU,CAAC,KAAK,GAAG,iBAAc,CAAC,EAAE,EAAE,UAAU,CAAC,CAAC;IACnD,CAAC,CAAC;AACH,CAAC;AAYD,2BAA2B,OAAgB,EAAE,KAAU;IAEtD,iBAAiB,KAAU;QAC1B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YAC1B,KAAK,GAAG,KAAK,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QAC5B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,CAAC,CAAC,CAAC;YACxD,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACnB,KAAK,GAAG,IAAI,iBAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC;YACrC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACP,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC;oBACrB,KAAK,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAC9B,CAAC;YACF,CAAC;QACF,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACd,CAAC;IAED,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AACvB,CAAC;AAQD,yBAAyB,KAAmB;IAC3C,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC;QACnC,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;QACpB,KAAK,CAAC,IAAI,GAAG,qBAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM,KAAK,CAAC;AACb,CAAC;AAWD,8BAA8B,MAAa,EAAE,MAAW;IACvD,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAS,GAAG;QACvC,IAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QAExB,EAAE,CAAC,CACF,GAAG,KAAK,MAAM;YACd,GAAG,KAAK,OAAO;YACf,CAAC,GAAG,KAAK,QAAQ,IAAI,KAAK,KAAK,MAAM,CACtC,CAAC,CAAC,CAAC;YACF,MAAM,CAAC;QACR,CAAC;QAED,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,SAAS,CAAC,CAAC,CAAC;YAChC,KAAK,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC3B,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,QAAQ,CAAC,CAAC,CAAC;YAG7B,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC/B,KAAK,GAAG,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC;YAChC,CAAC;YAED,EAAE,CAAC,CAAC,KAAK,YAAY,IAAI,CAAC,CAAC,CAAC;gBAC3B,KAAK,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;YAC7B,CAAC;YAED,MAAM,CAAC,IAAI,CAAC,UAAU,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QACrD,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,MAAM,CAAC,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;QACpD,CAAC;IACF,CAAC,CAAC,CAAC;AACJ,CAAC;AAQD,sBAAsB,IAAc;IACnC,IAAM,MAAM,GAAQ,QAAQ,CAAC,aAAa,CAAC;IAE3C,kBAAkB,MAAW;QAC5B,IAAI,KAAoB,CAAC;QAEzB,EAAE,CAAC,CAAC,OAAO,aAAa,KAAK,UAAU,CAAC,CAAC,CAAC;YACzC,KAAK,GAAG,IAAI,aAAa,CAAC,MAAM,CAAC,IAAI,EAAE;gBACtC,OAAO,EAAE,IAAI;gBACb,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,KAAK;gBACtC,IAAI,EAAE,MAAM;gBACZ,GAAG,EAAE,MAAM,CAAC,GAAG,IAAI,EAAE;gBACrB,QAAQ,EAAE,CAAC;aACX,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC9C,KAAK,CAAC,iBAAiB,CACtB,MAAM,CAAC,IAAI,EACX,IAAI,EACJ,MAAM,CAAC,UAAU,IAAI,KAAK,EAC1B,MAAM,EACN,MAAM,CAAC,GAAG,IAAI,EAAE,EAChB,CAAC,EACD,EAAE,EACG,CAAC,EACN,EAAE,CACF,CAAC;QACH,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED;QACC,IAAI,KAAY,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,KAAK,UAAU,CAAC,CAAC,CAAC;YACjC,KAAK,GAAG,IAAI,KAAK,CAAC,OAAO,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC,CAAC;QAClE,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;YACtC,KAAK,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;QACD,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACpC,CAAC;IAED,IAAI,GAAG,CAAA,KAAW,EAAG,CAAA,CAAC,MAAM,WAAI,IAAI,CAAC,GAAG,CAAC,UAAA,IAAI,IAAI,OAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAd,CAAc,CAAC,CAAC,CAAC;IAElE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC;QAC7C,IAAM,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,cAAc,GAAG,IAAI,CAAC;QAE1B,cAAc,GAAG,QAAQ,CAAC;YACzB,IAAI,EAAE,SAAS;YACf,UAAU,EAAE,IAAI;YAChB,GAAG,EAAE,GAAG;SACR,CAAC,CAAC;QACH,cAAc;YACb,cAAc;gBACd,QAAQ,CAAC,EAAE,IAAI,EAAE,UAAU,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;QAE5D,EAAE,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,OAAO,IAAI,MAAM,CAAC,CAAC,CAAC;gBACvB,MAAM,CAAC,KAAK;oBACX,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,cAAc,CAAC;wBAC5C,GAAG;wBACH,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC;gBACzC,aAAa,EAAE,CAAC;YACjB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC,CAAC;gBACrC,IAAI,IAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;gBACxC,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;gBACtC,IAAI,KAAK,GAAG,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;gBACpC,KAAK,CAAC,cAAc,EAAE,CAAC;gBACvB,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;gBACvB,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;gBAC1B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;gBACxB,SAAS,CAAC,eAAe,EAAE,CAAC;gBAC5B,SAAS,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YAC3B,CAAC;QACF,CAAC;QAED,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC;IACzD,CAAC;;AACF,CAAC;AAQD,uBAAuB,MAAW;IACjC,IAAI,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;IAE/B,kBAAkB,MAAW;QAC5B,IAAI,KAAiB,CAAC;QACtB,EAAE,CAAC,CAAC,OAAO,UAAU,KAAK,UAAU,CAAC,CAAC,CAAC;YACtC,KAAK,GAAG,IAAI,UAAU,CAAC,MAAM,CAAC,IAAI,EAAE;gBACnC,OAAO,EAAE,SAAS,IAAI,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI;gBACpD,UAAU,EAAE,MAAM,CAAC,UAAU,IAAI,KAAK;gBACtC,IAAI,EAAE,MAAM;gBACZ,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,CAAC;gBAC1B,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;gBACpC,OAAO,EAAE,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;gBACpC,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnB,OAAO,EAAE,QAAQ,CAAC,CAAC;gBACnB,OAAO,EAAE,MAAM,CAAC,OAAO,IAAI,KAAK;gBAChC,QAAQ,EAAE,MAAM,CAAC,QAAQ,IAAI,KAAK;gBAClC,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,KAAK;gBAC9B,OAAO,EAAE,MAAM,CAAC,OAAO,IAAI,KAAK;gBAChC,MAAM,EAAE,MAAM,CAAC,MAAM,IAAI,CAAC;gBAC1B,aAAa,EAAE,MAAM,CAAC,aAAa;aACnC,CAAC,CAAC;QACJ,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,KAAK,GAAG,QAAQ,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YAC5C,KAAK,CAAC,cAAc,CACnB,MAAM,CAAC,IAAI,EACX,MAAM,CAAC,OAAO,IAAI,IAAI,EACtB,MAAM,CAAC,UAAU,IAAI,KAAK,EAC1B,MAAM,EACN,MAAM,CAAC,MAAM,IAAI,CAAC,EAClB,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,EAC3B,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC,EAC3B,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,EACV,MAAM,CAAC,OAAO,IAAI,KAAK,EACvB,MAAM,CAAC,MAAM,IAAI,KAAK,EACtB,MAAM,CAAC,QAAQ,IAAI,KAAK,EACxB,MAAM,CAAC,OAAO,IAAI,KAAK,EACvB,MAAM,CAAC,MAAM,IAAI,CAAC,EAClB,MAAM,CAAC,aAAa,IAAI,IAAI,CAC5B,CAAC;QACH,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED,eAAe,MAAW,EAAE,MAAW,EAAE,MAAW;QACnD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YAC3B,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;YACf,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,OAAO;SACb,CAAC,CAAC;IACJ,CAAC;IAED,cAAc,MAAW,EAAE,MAAW;QACrC,MAAM,CAAC,QAAQ,CAAC;YACf,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,WAAW;SACjB,CAAC,CAAC;IACJ,CAAC;IAED,YAAY,MAAW,EAAE,MAAW;QACnC,MAAM,CAAC,QAAQ,CAAC;YACf,MAAM,EAAE,MAAM;YACd,UAAU,EAAE,IAAI;YAChB,MAAM,EAAE,MAAM;YACd,IAAI,EAAE,SAAS;SACf,CAAC,CAAC;IACJ,CAAC;IAED,cACC,cAA2B,EAC3B,UAAuB,EACvB,OAAe,EACf,OAAe;QAEf,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YAChB,IAAM,IAAI,GAAG,UAAU,CAAC,qBAAqB,EAAE,CAAC;YAEhD,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrB,OAAO,GAAG,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC;YAC1C,CAAC;YAED,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;gBACrB,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;YAC1C,CAAC;YAED,QAAQ,GAAG,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,GAAG,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,GAAG,GAAG,OAAO,EAAE,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,CAAC;YACP,QAAQ,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC;YAC3B,QAAQ,CAAC,CAAC,IAAI,OAAO,IAAI,CAAC,CAAC;YAE3B,UAAU,GAAgB,QAAQ,CAAC,gBAAgB,CAClD,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACV,CAAC;QACH,CAAC;QAED,EAAE,CAAC,CAAC,cAAc,KAAK,UAAU,CAAC,CAAC,CAAC;YACnC,QAAQ,CAAC;gBACR,IAAI,EAAE,UAAU;gBAChB,MAAM,EAAE,cAAc;gBACtB,aAAa,EAAE,UAAU;aACzB,CAAC,CAAC;YACH,QAAQ,CAAC;gBACR,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,cAAc;gBACtB,aAAa,EAAE,UAAU;gBACzB,OAAO,EAAE,KAAK;aACd,CAAC,CAAC;YACH,QAAQ,CAAC;gBACR,IAAI,EAAE,YAAY;gBAClB,MAAM,EAAE,UAAU;gBAClB,aAAa,EAAE,cAAc;gBAC7B,OAAO,EAAE,KAAK;aACd,CAAC,CAAC;YACH,QAAQ,CAAC;gBACR,IAAI,EAAE,WAAW;gBACjB,MAAM,EAAE,UAAU;gBAClB,aAAa,EAAE,cAAc;aAC7B,CAAC,CAAC;QACJ,CAAC;QAED,QAAQ,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAEnE,MAAM,CAAC,QAAQ,CAAC;IACjB,CAAC;IAED,IAAM,MAAM,GAAgB,QAAQ,CAAC,gBAAgB,CACpD,QAAQ,CAAC,CAAC,EACV,QAAQ,CAAC,CAAC,CACV,CAAC;IAEF,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC;QAC1C,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC;QACxC,MAAM,CAAC,EAAE,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAClC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,OAAO,CAAC,CAAC,CAAC;QACtC,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IACxC,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;QACzC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;YACtC,MAAM,CAAC,KAAK,CAAC;QACd,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;YACf,IAAI,EAAE,UAAU;YAChB,MAAM,EAAE,MAAM;YACd,MAAM,EAAE,MAAM,CAAC,MAAM;YACrB,MAAM,EAAE,CAAC;YACT,UAAU,EAAE,IAAI;SAChB,CAAC,CAAC;IACJ,CAAC;AACF,CAAC;AAED,uBAAuB,KAAU;IAChC,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,QAAQ,CAAC;AAC7D,CAAC","sourcesContent":["import Element, { ElementOrElementId } from './Element';\nimport Server, { Method } from './Server';\nimport findDisplayed from './lib/findDisplayed';\nimport { partial } from '@dojo/core/lang';\nimport Task from '@dojo/core/async/Task';\nimport statusCodes from './lib/statusCodes';\nimport Locator, { toW3cLocator, Strategy } from './lib/Locator';\nimport {\n\tforCommand as utilForCommand,\n\tsleep,\n\ttoExecuteString\n} from './lib/util';\nimport waitForDeleted from './lib/waitForDeleted';\nimport {\n\tCapabilities,\n\tGeolocation,\n\tLogEntry,\n\tWebDriverCookie,\n\tWebDriverResponse\n} from './interfaces';\n\n/**\n * A Session represents a connection to a remote environment that can be driven\n * programmatically.\n */\nexport default class Session extends Locator<\n\tTask<Element>,\n\tTask<Element[]>,\n\tTask<void>\n> {\n\tprivate _sessionId: string;\n\tprivate _server: Server;\n\tprivate _capabilities: Capabilities;\n\tprivate _closedWindows: any = null;\n\t// TODO: Timeouts are held so that we can fiddle with the implicit wait\n\t// timeout to add efficient `waitFor` and `waitForDeleted` convenience\n\t// methods. Technically only the implicit timeout is necessary.\n\tprivate _timeouts: { [key: string]: Task<number> } = {};\n\tprivate _movedToElement = false;\n\tprivate _lastMousePosition: any = null;\n\tprivate _lastAltitude: any = null;\n\tprivate _nextRequest: Task<any> | undefined;\n\n\t/**\n\t * A Session represents a connection to a remote environment that can be\n\t * driven programmatically.\n\t *\n\t * @param sessionId The ID of the session, as provided by the remote.\n\t * @param server The server that the session belongs to.\n\t * @param capabilities A map of bugs and features that the remote\n\t * environment exposes.\n\t */\n\tconstructor(sessionId: string, server: Server, capabilities: Capabilities) {\n\t\tsuper();\n\n\t\tthis._sessionId = sessionId;\n\t\tthis._server = server;\n\t\tthis._capabilities = capabilities;\n\t\tthis._closedWindows = {};\n\t\tthis._timeouts = {\n\t\t\tscript: Task.resolve(0),\n\t\t\timplicit: Task.resolve(0),\n\t\t\t'page load': Task.resolve(Infinity)\n\t\t};\n\t}\n\n\t/**\n\t * Information about the available features and bugs in the remote\n\t * environment.\n\t */\n\tget capabilities() {\n\t\treturn this._capabilities;\n\t}\n\n\t/**\n\t * The current session ID.\n\t */\n\tget sessionId() {\n\t\treturn this._sessionId;\n\t}\n\n\t/**\n\t * The Server that the session runs on.\n\t */\n\tget server() {\n\t\treturn this._server;\n\t}\n\n\t/**\n\t * Delegates the HTTP request for a method to the underlying\n\t * [[Server.Server]] object.\n\t */\n\tprivate _delegateToServer<T>(\n\t\tmethod: Method,\n\t\tpath: string,\n\t\trequestData: any,\n\t\tpathParts?: string[]\n\t) {\n\t\tpath = 'session/' + this._sessionId + (path ? '/' + path : '');\n\n\t\tif (\n\t\t\tmethod === 'post' &&\n\t\t\t!requestData &&\n\t\t\tthis.capabilities.brokenEmptyPost\n\t\t) {\n\t\t\trequestData = {};\n\t\t}\n\n\t\tlet cancelled = false;\n\t\treturn new Task<T>(resolve => {\n\t\t\t// The promise is cleared from `_nextRequest` once it has been\n\t\t\t// resolved in order to avoid infinitely long chains of promises\n\t\t\t// retaining values that are not used any more\n\t\t\tlet thisRequest: Task<any> | undefined;\n\t\t\tconst clearNextRequest = () => {\n\t\t\t\tif (this._nextRequest === thisRequest) {\n\t\t\t\t\tthis._nextRequest = undefined;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst runRequest = () => {\n\t\t\t\t// `runRequest` is normally called once the previous request is\n\t\t\t\t// finished. If this request is cancelled before the previous\n\t\t\t\t// request is finished, then it should simply never run. (This\n\t\t\t\t// Task will have been rejected already by the cancellation.)\n\t\t\t\tif (cancelled) {\n\t\t\t\t\tclearNextRequest();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst response = this._server\n\t\t\t\t\t[method]<WebDriverResponse>(path, requestData, pathParts)\n\t\t\t\t\t.then(response => response.value);\n\n\t\t\t\t// safePromise is simply a promise based on the response that\n\t\t\t\t// is guaranteed to resolve -- it is only used for promise\n\t\t\t\t// chain management\n\t\t\t\tconst safePromise = response.catch(_error => {});\n\t\t\t\tsafePromise.then(clearNextRequest);\n\n\t\t\t\t// The value of the response always needs to be taken directly\n\t\t\t\t// from the server call rather than from the chained\n\t\t\t\t// `_nextRequest` promise, since if an undefined value is\n\t\t\t\t// returned by the server call and that value is returned\n\t\t\t\t// through `finally(runRequest)`, the *previous* Task’s\n\t\t\t\t// resolved value will be used as the resolved value, which is\n\t\t\t\t// wrong\n\t\t\t\tresolve(response);\n\n\t\t\t\treturn safePromise;\n\t\t\t};\n\n\t\t\t// At least ChromeDriver 2.19 will just hard close connections if\n\t\t\t// parallel requests are made to the server, so any request sent to\n\t\t\t// the server for a given session must be serialised. Other servers\n\t\t\t// like Selendroid have been known to have issues with parallel\n\t\t\t// requests as well, so serialisation is applied universally, even\n\t\t\t// though it has negative performance implications\n\t\t\tif (this._nextRequest) {\n\t\t\t\tthisRequest = this._nextRequest = this._nextRequest.finally(\n\t\t\t\t\trunRequest\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tthisRequest = this._nextRequest = runRequest();\n\t\t\t}\n\t\t}, () => (cancelled = true));\n\t}\n\n\tserverGet<T>(path: string, requestData?: any, pathParts?: string[]) {\n\t\treturn this._delegateToServer<T>('get', path, requestData, pathParts);\n\t}\n\n\tserverPost<T>(path: string, requestData?: any, pathParts?: string[]) {\n\t\treturn this._delegateToServer<T>('post', path, requestData, pathParts);\n\t}\n\n\tserverDelete<T>(path: string, requestData?: any, pathParts?: string[]) {\n\t\treturn this._delegateToServer<T>(\n\t\t\t'delete',\n\t\t\tpath,\n\t\t\trequestData,\n\t\t\tpathParts\n\t\t);\n\t}\n\n\t/**\n\t * Gets the current value of a timeout for the session.\n\t *\n\t * @param type The type of timeout to retrieve. One of 'script',\n\t * 'implicit', or 'page load'.\n\t * @returns The timeout, in milliseconds.\n\t */\n\tgetTimeout(type: Timeout): Task<number> {\n\t\treturn this._timeouts[type];\n\t}\n\n\t/**\n\t * Sets the value of a timeout for the session.\n\t *\n\t * @param type The type of timeout to set. One of 'script', 'implicit', or\n\t * 'page load'.\n\t *\n\t * @param ms The length of time to use for the timeout, in milliseconds. A\n\t * value of 0 will cause operations to time out immediately.\n\t */\n\tsetTimeout(type: Timeout, ms: number) {\n\t\t// Infinity cannot be serialised by JSON\n\t\tif (ms === Infinity) {\n\t\t\t// It seems that at least ChromeDriver 2.10 has a limit here that\n\t\t\t// is near the 32-bit signed integer limit, and IEDriverServer\n\t\t\t// 2.42.2 has an even lower limit; 2.33 hours should be infinite\n\t\t\t// enough for testing\n\t\t\tms = Math.pow(2, 23) - 1;\n\t\t}\n\n\t\t// If the target doesn't support a timeout of 0, use 1.\n\t\tif (this.capabilities.brokenZeroTimeout && ms === 0) {\n\t\t\tms = 1;\n\t\t}\n\n\t\tlet data = this.capabilities.usesWebDriverTimeouts\n\t\t\t? { [type]: ms }\n\t\t\t: { type, ms };\n\n\t\tconst promise = this.serverPost<void>('timeouts', data).catch(error => {\n\t\t\t// Appium as of April 2014 complains that `timeouts` is\n\t\t\t// unsupported, so try the more specific endpoints if they exist\n\t\t\tif (error.name === 'UnknownCommand') {\n\t\t\t\tif (type === 'script') {\n\t\t\t\t\treturn this.serverPost<void>('timeouts/async_script', {\n\t\t\t\t\t\tms: ms\n\t\t\t\t\t});\n\t\t\t\t} else if (type === 'implicit') {\n\t\t\t\t\treturn this.serverPost<void>('timeouts/implicit_wait', {\n\t\t\t\t\t\tms: ms\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t});\n\n\t\tthis._timeouts[type] = promise.then(() => ms).catch(() => 0);\n\n\t\treturn promise;\n\t}\n\n\t/**\n\t * Gets the identifier for the window that is currently focused.\n\t *\n\t * @returns A window handle identifier that can be used with other window\n\t * handling functions.\n\t */\n\tgetCurrentWindowHandle() {\n\t\treturn this.serverGet<string>('window_handle').then(handle => {\n\t\t\tif (\n\t\t\t\tthis.capabilities.brokenDeleteWindow &&\n\t\t\t\tthis._closedWindows[handle]\n\t\t\t) {\n\t\t\t\tconst error: SessionError = new Error();\n\t\t\t\terror.status = '23';\n\t\t\t\terror.name = statusCodes[error.status][0];\n\t\t\t\terror.message = statusCodes[error.status][1];\n\t\t\t\tthrow error;\n\t\t\t}\n\n\t\t\treturn handle;\n\t\t});\n\t}\n\n\t/**\n\t * Gets a list of identifiers for all currently open windows.\n\t */\n\tgetAllWindowHandles() {\n\t\treturn this.serverGet<string[]>(\n\t\t\t'window_handles'\n\t\t).then((handles: string[]) => {\n\t\t\tif (this.capabilities.brokenDeleteWindow) {\n\t\t\t\treturn handles.filter(handle => {\n\t\t\t\t\treturn !this._closedWindows[handle];\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn handles;\n\t\t});\n\t}\n\n\t/**\n\t * Gets the URL that is loaded in the focused window/frame.\n\t */\n\tgetCurrentUrl() {\n\t\treturn this.serverGet<string>('url');\n\t}\n\n\t/**\n\t * Navigates the focused window/frame to a new URL.\n\t */\n\tget(url: string) {\n\t\tthis._movedToElement = false;\n\n\t\tif (this.capabilities.brokenMouseEvents) {\n\t\t\tthis._lastMousePosition = { x: 0, y: 0 };\n\t\t}\n\n\t\treturn this.serverPost<void>('url', { url: url });\n\t}\n\n\t/**\n\t * Navigates the focused window/frame forward one page using the browser’s\n\t * navigation history.\n\t */\n\tgoForward() {\n\t\t// TODO: SPEC: Seems like this and `back` should return the newly\n\t\t// navigated URL.\n\t\treturn this.serverPost<void>('forward');\n\t}\n\n\t/**\n\t * Navigates the focused window/frame back one page using the browser’s\n\t * navigation history.\n\t */\n\tgoBack() {\n\t\t// TODO: SPEC: Seems like this and `back` should return the newly\n\t\t// navigated URL.\n\t\treturn this.serverPost<void>('back');\n\t}\n\n\t/**\n\t * Reloads the current browser window/frame.\n\t */\n\trefresh() {\n\t\tif (this.capabilities.brokenRefresh) {\n\t\t\treturn this.execute<void>('location.reload();');\n\t\t}\n\n\t\treturn this.serverPost<void>('refresh');\n\t}\n\n\t/**\n\t * Executes JavaScript code within the focused window/frame. The code\n\t * should return a value synchronously.\n\t *\n\t * See [[Session.Session.executeAsync]] to execute code that returns values\n\t * asynchronously.\n\t *\n\t * @param script The code to execute. This function will always be\n\t * converted to a string, sent to the remote environment, and reassembled\n\t * as a new anonymous function on the remote end. This means that you\n\t * cannot access any variables through closure. If your code needs to get\n\t * data from variables on the local end, they should be passed using\n\t * `args`.\n\t *\n\t * @param args An array of arguments that will be passed to the executed\n\t * code. Only values that can be serialised to JSON, plus\n\t * [[Element.Element]] objects, can be specified as arguments.\n\t *\n\t * @returns The value returned by the remote code. Only values that can be\n\t * serialised to JSON, plus DOM elements, can be returned.\n\t */\n\texecute<T>(script: Function | string, args?: any[]): Task<T> {\n\t\t// At least FirefoxDriver 2.40.0 will throw a confusing\n\t\t// NullPointerException if args is not an array; provide a friendlier\n\t\t// error message to users that accidentally pass a non-array\n\t\tif (typeof args !== 'undefined' && !Array.isArray(args)) {\n\t\t\tthrow new Error('Arguments passed to execute must be an array');\n\t\t}\n\n\t\tlet result = this.serverPost<T>('execute', {\n\t\t\tscript: toExecuteString(script),\n\t\t\targs: args || []\n\t\t}).then(value => convertToElements(this, value), fixExecuteError);\n\n\t\tif (this.capabilities.brokenExecuteUndefinedReturn) {\n\t\t\tresult = result.then(value => (value == null ? null : value));\n\t\t}\n\n\t\treturn result;\n\t}\n\n\t/**\n\t * Executes JavaScript code within the focused window/frame. The code must\n\t * invoke the provided callback in order to signal that it has completed\n\t * execution.\n\t *\n\t * See [[Session.Session.execute]] to execute code that returns values\n\t * synchronously.\n\t *\n\t * See [[Session.Session.setExecuteAsyncTimeout]] to set the time until an\n\t * asynchronous script is considered timed out.\n\t *\n\t * @param script The code to execute. This function will always be\n\t * converted to a string, sent to the remote environment, and reassembled\n\t * as a new anonymous function on the remote end. This means that you\n\t * cannot access any variables through closure. If your code needs to get\n\t * data from variables on the local end, they should be passed using\n\t * `args`.\n\t *\n\t * @param args An array of arguments that will be passed to the executed\n\t * code. Only values that can be serialised to JSON, plus\n\t * [[Element.Element]] objects, can be specified as arguments. In addition\n\t * to these arguments, a callback function will always be passed as the\n\t * final argument to the function specified in `script`. This callback\n\t * function must be invoked in order to signal that execution has\n\t * completed. The return value of the execution, if any, should be passed\n\t * to this callback function.\n\t *\n\t * @returns The value returned by the remote code. Only values that can be\n\t * serialised to JSON, plus DOM elements, can be returned.\n\t */\n\texecuteAsync<T>(script: Function | string, args?: any[]) {\n\t\t// At least FirefoxDriver 2.40.0 will throw a confusing\n\t\t// NullPointerException if args is not an array; provide a friendlier\n\t\t// error message to users that accidentally pass a non-array\n\t\tif (typeof args !== 'undefined' && !Array.isArray(args)) {\n\t\t\tthrow new Error(\n\t\t\t\t'Arguments passed to executeAsync must be an array'\n\t\t\t);\n\t\t}\n\n\t\treturn this.serverPost<T>('execute_async', {\n\t\t\tscript: toExecuteString(script),\n\t\t\targs: args || []\n\t\t}).then(partial(convertToElements, this), fixExecuteError);\n\t}\n\n\t/**\n\t * Gets a screenshot of the focused window and returns it in PNG format.\n\t *\n\t * @returns A buffer containing a PNG image.\n\t */\n\ttakeScreenshot() {\n\t\treturn this.serverGet<string>('screenshot').then(\n\t\t\tdata => new Buffer(data, 'base64')\n\t\t);\n\t}\n\n\t/**\n\t * Gets a list of input method editor engines available to the remote\n\t * environment. As of April 2014, no known remote environments support IME\n\t * functions.\n\t */\n\tgetAvailableImeEngines() {\n\t\treturn this.serverGet<string[]>('ime/available_engines');\n\t}\n\n\t/**\n\t * Gets the currently active input method editor for the remote environment.\n\t * As of April 2014, no known remote environments support IME functions.\n\t */\n\tgetActiveImeEngine() {\n\t\treturn this.serverGet<string>('ime/active_engine');\n\t}\n\n\t/**\n\t * Returns whether or not an input method editor is currently active in the\n\t * remote environment. As of April 2014, no known remote environments\n\t * support IME functions.\n\t */\n\tisImeActivated() {\n\t\treturn this.serverGet<boolean>('ime/activated');\n\t}\n\n\t/**\n\t * Deactivates any active input method editor in the remote environment.\n\t * As of April 2014, no known remote environments support IME functions.\n\t */\n\tdeactivateIme() {\n\t\treturn this.serverPost<void>('ime/deactivate');\n\t}\n\n\t/**\n\t * Activates an input method editor in the remote environment.\n\t * As of April 2014, no known remote environments support IME functions.\n\t *\n\t * @param engine The type of IME to activate.\n\t */\n\tactivateIme(engine: string) {\n\t\treturn this.serverPost<void>('ime/activate', { engine: engine });\n\t}\n\n\t/**\n\t * Switches the currently focused frame to a new frame.\n\t *\n\t * @param id The frame to switch to. In most environments, a number or\n\t * string value corresponds to a key in the `window.frames` object of the\n\t * currently active frame. If `null`, the topmost (default) frame will be\n\t * used. If an Element is provided, it must correspond to a `<frame>` or\n\t * `<iframe>` element.\n\t */\n\tswitchToFrame(id: string | number | Element) {\n\t\tif (this.capabilities.usesWebDriverFrameId && typeof id === 'string') {\n\t\t\treturn this.findById(id).then(element =>\n\t\t\t\tthis.serverPost<void>('frame', { id: element })\n\t\t\t);\n\t\t}\n\t\treturn this.serverPost<void>('frame', { id: id });\n\t}\n\n\t/**\n\t * Switches the currently focused window to a new window.\n\t *\n\t * @param handle The handle of the window to switch to. In mobile\n\t * environments and environments based on the W3C WebDriver standard, this\n\t * should be a handle as returned by\n\t * [[Session.Session.getAllWindowHandles]].\n\t *\n\t * In environments using the JsonWireProtocol, this value corresponds to\n\t * the `window.name` property of a window.\n\t */\n\tswitchToWindow(handle: string) {\n\t\t// const handleProperty = this.capabilities.=== 'selendroid' &&\n\t\tlet data: { [key: string]: string } = { name: handle };\n\t\tif (this.capabilities.usesHandleParameter) {\n\t\t\tdata = { handle };\n\t\t}\n\t\treturn this.serverPost<void>('window', data);\n\t}\n\n\t/**\n\t * Switches the currently focused frame to the parent of the currently\n\t * focused frame.\n\t */\n\tswitchToParentFrame() {\n\t\treturn this.serverPost<void>('frame/parent').catch(error => {\n\t\t\t// At least FirefoxDriver 2.40.0 does not implement this command,\n\t\t\t// but we can fake it by retrieving the parent frame element using\n\t\t\t// JavaScript and switching to it directly by reference At least\n\t\t\t// Selendroid 0.9.0 also does not support this command, but\n\t\t\t// unfortunately throws an incorrect error so it looks like a fatal\n\t\t\t// error; see https://github.com/selendroid/selendroid/issues/364\n\t\t\tif (\n\t\t\t\terror.name === 'UnknownCommand' ||\n\t\t\t\t(this.capabilities.browserName === 'selendroid' &&\n\t\t\t\t\terror.message.indexOf(\n\t\t\t\t\t\t'Error occured while communicating with selendroid server'\n\t\t\t\t\t) > -1)\n\t\t\t) {\n\t\t\t\tif (this.capabilities.scriptedParentFrameCrashesBrowser) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\treturn this.execute<Element>(\n\t\t\t\t\t'return window.parent.frameElement;'\n\t\t\t\t).then(parent => {\n\t\t\t\t\t// TODO: Using `null` if no parent frame was returned keeps\n\t\t\t\t\t// the request from being invalid, but may be incorrect and\n\t\t\t\t\t// may cause incorrect frame retargeting on certain\n\t\t\t\t\t// platforms; At least Selendroid 0.9.0 fails both commands\n\t\t\t\t\treturn this.switchToFrame(parent || null);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Closes the currently focused window. In most environments, after the\n\t * window has been closed, it is necessary to explicitly switch to whatever\n\t * window is now focused.\n\t */\n\tcloseCurrentWindow() {\n\t\tconst self = this;\n\t\tfunction manualClose() {\n\t\t\treturn self.getCurrentWindowHandle().then(function(handle: any) {\n\t\t\t\treturn self.execute('window.close();').then(function() {\n\t\t\t\t\tself._closedWindows[handle] = true;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tif (this.capabilities.brokenDeleteWindow) {\n\t\t\treturn manualClose();\n\t\t}\n\n\t\treturn this.serverDelete<void>('window').catch(error => {\n\t\t\t// ios-driver 0.6.6-SNAPSHOT April 2014 does not implement close\n\t\t\t// window command\n\t\t\tif (error.name === 'UnknownCommand') {\n\t\t\t\tthis.capabilities.brokenDeleteWindow = true;\n\t\t\t\treturn manualClose();\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Sets the dimensions of a window.\n\t *\n\t * @param windowHandle The name of the window to resize. See\n\t * [[Session.Session.switchToWindow]] to learn about valid window names.\n\t * Omit this argument to resize the currently focused window.\n\t *\n\t * @param width The new width of the window, in CSS pixels.\n\t *\n\t * @param height The new height of the window, in CSS pixels.\n\t */\n\tsetWindowSize(width: number, height: number): Task<void>;\n\tsetWindowSize(\n\t\twindowHandle: string,\n\t\twidth: number,\n\t\theight: number\n\t): Task<void>;\n\tsetWindowSize(...args: any[]) {\n\t\tlet [windowHandle, width, height] = args;\n\n\t\tif (typeof height === 'undefined') {\n\t\t\theight = width;\n\t\t\twidth = windowHandle;\n\t\t\twindowHandle = null;\n\t\t}\n\n\t\tconst data = { width, height };\n\n\t\tif (this.capabilities.usesWebDriverWindowCommands) {\n\t\t\tconst setWindowSize = () =>\n\t\t\t\tthis.getWindowPosition().then(position =>\n\t\t\t\t\tthis.setWindowRect({\n\t\t\t\t\t\t// At least Firefox + geckodriver 0.17.0 requires all 4 rect\n\t\t\t\t\t\t// parameters have values\n\t\t\t\t\t\tx: position.x,\n\t\t\t\t\t\ty: position.y,\n\t\t\t\t\t\twidth: data.width,\n\t\t\t\t\t\theight: data.height\n\t\t\t\t\t})\n\t\t\t\t);\n\n\t\t\tif (windowHandle == null) {\n\t\t\t\treturn setWindowSize();\n\t\t\t} else {\n\t\t\t\t// User provided a window handle; get the current handle,\n\t\t\t\t// switch to the new one, get the size, then switch back to the\n\t\t\t\t// original handle.\n\t\t\t\tlet error: Error;\n\t\t\t\treturn this.getCurrentWindowHandle().then(originalHandle => {\n\t\t\t\t\treturn this.switchToWindow(windowHandle)\n\t\t\t\t\t\t.then(() => setWindowSize())\n\t\t\t\t\t\t.catch(_error => {\n\t\t\t\t\t\t\terror = _error;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(() => this.switchToWindow(originalHandle))\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (windowHandle == null) {\n\t\t\t\twindowHandle = 'current';\n\t\t\t}\n\t\t\treturn this.serverPost<void>('window/$0/size', { width, height }, [\n\t\t\t\twindowHandle\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the dimensions of a window.\n\t *\n\t * @param windowHandle The name of the window to query. See\n\t * [[Session.Session.switchToWindow]] to learn about valid window names.\n\t * Omit this argument to query the currently focused window.\n\t *\n\t * @returns An object describing the width and height of the window, in CSS\n\t * pixels.\n\t */\n\tgetWindowSize(windowHandle?: string) {\n\t\tif (this.capabilities.usesWebDriverWindowCommands) {\n\t\t\tconst getWindowSize = () =>\n\t\t\t\tthis.getWindowRect().then(rect => ({\n\t\t\t\t\twidth: rect.width,\n\t\t\t\t\theight: rect.height\n\t\t\t\t}));\n\n\t\t\tif (windowHandle == null) {\n\t\t\t\treturn getWindowSize();\n\t\t\t} else {\n\t\t\t\t// User provided a window handle; get the current handle,\n\t\t\t\t// switch to the new one, get the size, then switch back to the\n\t\t\t\t// original handle.\n\t\t\t\tlet error: Error;\n\t\t\t\tlet size: { width: number; height: number };\n\t\t\t\treturn this.getCurrentWindowHandle().then(originalHandle => {\n\t\t\t\t\treturn this.switchToWindow(windowHandle!)\n\t\t\t\t\t\t.then(() => getWindowSize())\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t_size => {\n\t\t\t\t\t\t\t\tsize = _size;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_error => {\n\t\t\t\t\t\t\t\terror = _error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then(() => this.switchToWindow(originalHandle))\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn size;\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (windowHandle == null) {\n\t\t\t\twindowHandle = 'current';\n\t\t\t}\n\t\t\treturn this.serverGet<{\n\t\t\t\twidth: number;\n\t\t\t\theight: number;\n\t\t\t}>('window/$0/size', null, [windowHandle]);\n\t\t}\n\t}\n\n\t/**\n\t * Return the current window's rectangle (size and position).\n\t */\n\tgetWindowRect() {\n\t\treturn this.serverGet<{\n\t\t\twidth: number;\n\t\t\theight: number;\n\t\t\tx: number;\n\t\t\ty: number;\n\t\t}>('window/rect');\n\t}\n\n\t/**\n\t * Set the current window's rectangle (size and position).\n\t *\n\t * @param rect The windows rectangle. This may contain all 4 properties, or\n\t * just x & y, or just width & height.\n\t */\n\tsetWindowRect(rect: {\n\t\tx: number;\n\t\ty: number;\n\t\twidth: number;\n\t\theight: number;\n\t}) {\n\t\treturn this.serverPost<void>('window/rect', rect);\n\t}\n\n\t/**\n\t * Sets the position of a window.\n\t *\n\t * Note that this method is not part of the W3C WebDriver standard.\n\t *\n\t * @param windowHandle The name of the window to move. See\n\t * [[Session.Session.switchToWindow]] to learn about valid window names.\n\t * Omit this argument to move the currently focused window.\n\t *\n\t * @param x The screen x-coordinate to move to, in CSS pixels, relative to\n\t * the left edge of the primary monitor.\n\t *\n\t * @param y The screen y-coordinate to move to, in CSS pixels, relative to\n\t * the top edge of the primary monitor.\n\t */\n\tsetWindowPosition(x: number, y: number): Task<void>;\n\tsetWindowPosition(windowHandle: string, x: number, y: number): Task<void>;\n\tsetWindowPosition(...args: any[]) {\n\t\tlet [windowHandle, x, y] = args;\n\n\t\tif (typeof y === 'undefined') {\n\t\t\ty = x;\n\t\t\tx = windowHandle;\n\t\t\twindowHandle = null;\n\t\t}\n\n\t\tif (this.capabilities.usesWebDriverWindowCommands) {\n\t\t\t// At least Firefox + geckodriver 0.17.0 requires all 4 rect\n\t\t\t// parameters have values\n\t\t\treturn this.getWindowSize().then(size => {\n\t\t\t\tconst data = { x, y, width: size.width, height: size.height };\n\t\t\t\tconsole.log('setting window rect to', data);\n\n\t\t\t\tif (windowHandle == null) {\n\t\t\t\t\treturn this.setWindowRect(data);\n\t\t\t\t} else {\n\t\t\t\t\t// User provided a window handle; get the current handle,\n\t\t\t\t\t// switch to the new one, get the size, then switch back to the\n\t\t\t\t\t// original handle.\n\t\t\t\t\tlet error: Error;\n\t\t\t\t\treturn this.getCurrentWindowHandle().then(\n\t\t\t\t\t\toriginalHandle => {\n\t\t\t\t\t\t\tif (originalHandle === windowHandle) {\n\t\t\t\t\t\t\t\tthis.setWindowRect(data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\treturn this.switchToWindow(windowHandle)\n\t\t\t\t\t\t\t\t\t.then(() => this.setWindowRect(data))\n\t\t\t\t\t\t\t\t\t.catch(_error => {\n\t\t\t\t\t\t\t\t\t\terror = _error;\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t.then(() =>\n\t\t\t\t\t\t\t\t\t\tthis.switchToWindow(originalHandle)\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\tif (windowHandle == null) {\n\t\t\t\twindowHandle = 'current';\n\t\t\t}\n\t\t\treturn this.serverPost<void>('window/$0/position', { x, y }, [\n\t\t\t\twindowHandle\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * Gets the position of a window.\n\t *\n\t * Note that this method is not part of the W3C WebDriver standard.\n\t *\n\t * @param windowHandle The name of the window to query. See\n\t * [[Session.Session.switchToWindow]] to learn about valid window names.\n\t * Omit this argument to query the currently focused window.\n\t *\n\t * @returns An object describing the position of the window, in CSS pixels,\n\t * relative to the top-left corner of the primary monitor. If a secondary\n\t * monitor exists above or to the left of the primary monitor, these values\n\t * will be negative.\n\t */\n\tgetWindowPosition(windowHandle?: string) {\n\t\tif (this.capabilities.usesWebDriverWindowCommands) {\n\t\t\tconst getWindowPosition = () =>\n\t\t\t\tthis.getWindowRect().then(({ x, y }) => {\n\t\t\t\t\treturn { x, y };\n\t\t\t\t});\n\n\t\t\tif (windowHandle == null) {\n\t\t\t\treturn getWindowPosition();\n\t\t\t} else {\n\t\t\t\t// User provided a window handle; get the current handle,\n\t\t\t\t// switch to the new one, get the position, then switch back to\n\t\t\t\t// the original handle.\n\t\t\t\tlet error: Error;\n\t\t\t\tlet position: { x: number; y: number };\n\t\t\t\treturn this.getCurrentWindowHandle().then(originalHandle => {\n\t\t\t\t\treturn this.switchToWindow(windowHandle!)\n\t\t\t\t\t\t.then(() => getWindowPosition())\n\t\t\t\t\t\t.then(\n\t\t\t\t\t\t\t_position => {\n\t\t\t\t\t\t\t\tposition = _position;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t_error => {\n\t\t\t\t\t\t\t\terror = _error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t)\n\t\t\t\t\t\t.then(() => this.switchToWindow(originalHandle))\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn position;\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof windowHandle === 'undefined') {\n\t\t\t\twindowHandle = 'current';\n\t\t\t}\n\t\t\treturn this.serverGet<{\n\t\t\t\tx: number;\n\t\t\t\ty: number;\n\t\t\t}>('window/$0/position', null, [windowHandle]).then(position => {\n\t\t\t\t// At least Firefox + geckodriver 0.19.0 will return a full\n\t\t\t\t// rectangle for the position command.\n\t\t\t\treturn {\n\t\t\t\t\tx: position.x,\n\t\t\t\t\ty: position.y\n\t\t\t\t};\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Maximises a window according to the platform’s window system behaviour.\n\t *\n\t * @param windowHandle The name of the window to resize. See\n\t * [[Session.Session.switchToWindow]] to learn about valid window names.\n\t * Omit this argument to resize the currently focused window.\n\t */\n\tmaximizeWindow(windowHandle?: string) {\n\t\tif (this.capabilities.usesWebDriverWindowCommands) {\n\t\t\tconst maximizeWindow = () =>\n\t\t\t\tthis.serverPost<void>('window/maximize');\n\n\t\t\tif (windowHandle == null) {\n\t\t\t\treturn maximizeWindow();\n\t\t\t} else {\n\t\t\t\t// User provided a window handle; get the current handle,\n\t\t\t\t// switch to the new one, get the position, then switch back to\n\t\t\t\t// the original handle.\n\t\t\t\tlet error: Error;\n\t\t\t\treturn this.getCurrentWindowHandle().then(originalHandle => {\n\t\t\t\t\treturn this.switchToWindow(windowHandle!)\n\t\t\t\t\t\t.then(() => maximizeWindow())\n\t\t\t\t\t\t.catch(_error => {\n\t\t\t\t\t\t\terror = _error;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.then(() => this.switchToWindow(originalHandle))\n\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\tif (error) {\n\t\t\t\t\t\t\t\tthrow error;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t}\n\t\t} else {\n\t\t\tif (typeof windowHandle === 'undefined') {\n\t\t\t\twindowHandle = 'current';\n\t\t\t}\n\t\t\treturn this.serverPost<void>('window/$0/maximize', null, [\n\t\t\t\twindowHandle\n\t\t\t]);\n\t\t}\n\t}\n\n\t/**\n\t * Gets all cookies set on the current page.\n\t */\n\tgetCookies() {\n\t\treturn this.serverGet<WebDriverCookie[]>('cookie').then(function(\n\t\t\tcookies: WebDriverCookie[]\n\t\t) {\n\t\t\t// At least SafariDriver 2.41.0 returns cookies with extra class\n\t\t\t// and hCode properties that should not exist\n\t\t\treturn cookies.map(function(badCookie) {\n\t\t\t\tlet cookie: any = {};\n\t\t\t\tfor (let key in badCookie) {\n\t\t\t\t\tif (\n\t\t\t\t\t\tkey === 'name' ||\n\t\t\t\t\t\tkey === 'value' ||\n\t\t\t\t\t\tkey === 'path' ||\n\t\t\t\t\t\tkey === 'domain' ||\n\t\t\t\t\t\tkey === 'secure' ||\n\t\t\t\t\t\tkey === 'httpOnly' ||\n\t\t\t\t\t\tkey === 'expiry'\n\t\t\t\t\t) {\n\t\t\t\t\t\tcookie[key] = (<any>badCookie)[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (typeof cookie.expiry === 'number') {\n\t\t\t\t\tcookie.expiry = new Date(cookie.expiry * 1000);\n\t\t\t\t}\n\n\t\t\t\treturn cookie;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Sets a cookie on the current page.\n\t */\n\tsetCookie(cookie: WebDriverCookie) {\n\t\tif (typeof cookie.expiry === 'string') {\n\t\t\tcookie.expiry = new Date(cookie.expiry);\n\t\t}\n\n\t\tif (cookie.expiry instanceof Date) {\n\t\t\tcookie.expiry = cookie.expiry.valueOf() / 1000;\n\t\t}\n\t\tconst self = this;\n\n\t\treturn this.serverPost<void>('cookie', {\n\t\t\tcookie: cookie\n\t\t}).catch((error: SessionError) => {\n\t\t\t// At least ios-driver 0.6.0-SNAPSHOT April 2014 does not know how\n\t\t\t// to set cookies\n\t\t\tif (error.name === 'UnknownCommand') {\n\t\t\t\t// Per RFC6265 section 4.1.1, cookie names must match `token`\n\t\t\t\t// (any US-ASCII character except for control characters and\n\t\t\t\t// separators as defined in RFC2616 section 2.2)\n\t\t\t\tif (/[^A-Za-z0-9!#$%&'*+.^_`|~-]/.test(cookie.name)) {\n\t\t\t\t\terror = new Error();\n\t\t\t\t\terror.status = '25';\n\t\t\t\t\terror.name = statusCodes[error.status][0];\n\t\t\t\t\terror.message = 'Invalid cookie name';\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t/[^\\u0021\\u0023-\\u002b\\u002d-\\u003a\\u003c-\\u005b\\u005d-\\u007e]/.test(\n\t\t\t\t\t\tcookie.value\n\t\t\t\t\t)\n\t\t\t\t) {\n\t\t\t\t\terror = new Error();\n\t\t\t\t\terror.status = '25';\n\t\t\t\t\terror.name = statusCodes[error.status][0];\n\t\t\t\t\terror.message = 'Invalid cookie value';\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tconst cookieToSet = [cookie.name + '=' + cookie.value];\n\n\t\t\t\tpushCookieProperties(cookieToSet, cookie);\n\n\t\t\t\treturn self.execute<void>(\n\t\t\t\t\t/* istanbul ignore next */ function(cookie: any) {\n\t\t\t\t\t\tdocument.cookie = cookie;\n\t\t\t\t\t},\n\t\t\t\t\t[cookieToSet.join(';')]\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tthrow error;\n\t\t});\n\t}\n\n\t/**\n\t * Clears all cookies for the current page.\n\t */\n\tclearCookies() {\n\t\tif (this.capabilities.brokenDeleteCookie) {\n\t\t\treturn this.getCookies().then(cookies => {\n\t\t\t\treturn cookies.reduce((promise, cookie) => {\n\t\t\t\t\tconst expiredCookie = [\n\t\t\t\t\t\t`${cookie.name}=`,\n\t\t\t\t\t\t'expires=Thu, 01 Jan 1970 00:00:00 GMT'\n\t\t\t\t\t];\n\t\t\t\t\tpushCookieProperties(expiredCookie, cookie);\n\n\t\t\t\t\treturn promise.then(() => {\n\t\t\t\t\t\treturn this.execute<\n\t\t\t\t\t\t\tvoid\n\t\t\t\t\t\t>(\n\t\t\t\t\t\t\t/* istanbul ignore next */ function(\n\t\t\t\t\t\t\t\texpiredCookie: string\n\t\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t\t// Assume the cookie was created by Selenium,\n\t\t\t\t\t\t\t\t// so it's path is '/'; at least MS Edge\n\t\t\t\t\t\t\t\t// requires a path to delete a cookie\n\t\t\t\t\t\t\t\tdocument.cookie = `${expiredCookie}; domain=${encodeURIComponent(\n\t\t\t\t\t\t\t\t\tdocument.domain\n\t\t\t\t\t\t\t\t)}; path=/`;\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t[expiredCookie.join(';')]\n\t\t\t\t\t\t);\n\t\t\t\t\t});\n\t\t\t\t}, Task.resolve());\n\t\t\t});\n\t\t}\n\n\t\treturn this.serverDelete<void>('cookie');\n\t}\n\n\t/**\n\t * Deletes a cookie on the current page.\n\t *\n\t * @param name The name of the cookie to delete.\n\t */\n\tdeleteCookie(name: string) {\n\t\tif (this.capabilities.brokenDeleteCookie) {\n\t\t\treturn this.getCookies().then(cookies => {\n\t\t\t\tlet cookie: any;\n\t\t\t\tif (\n\t\t\t\t\tcookies.some(value => {\n\t\t\t\t\t\tif (value.name === name) {\n\t\t\t\t\t\t\tcookie = value;\n\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t})\n\t\t\t\t) {\n\t\t\t\t\tconst expiredCookie = [\n\t\t\t\t\t\t`${cookie.name}=`,\n\t\t\t\t\t\t'expires=Thu, 01 Jan 1970 00:00:00 GMT'\n\t\t\t\t\t];\n\n\t\t\t\t\tpushCookieProperties(expiredCookie, cookie);\n\n\t\t\t\t\treturn this.execute<\n\t\t\t\t\t\tvoid\n\t\t\t\t\t>(\n\t\t\t\t\t\t/* istanbul ignore next */ function(\n\t\t\t\t\t\t\texpiredCookie: any\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\t// Assume the cookie was created by Selenium, so\n\t\t\t\t\t\t\t// it's path is '/'; at least MS Edge requires a\n\t\t\t\t\t\t\t// path to delete a cookie\n\t\t\t\t\t\t\tdocument.cookie = `${expiredCookie}; domain=${encodeURIComponent(\n\t\t\t\t\t\t\t\tdocument.domain\n\t\t\t\t\t\t\t)}; path=/`;\n\t\t\t\t\t\t},\n\t\t\t\t\t\t[expiredCookie.join(';')]\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\treturn this.serverDelete<void>('cookie/$0', null, [name]);\n\t}\n\n\t/**\n\t * Gets the HTML loaded in the focused window/frame. This markup is\n\t * serialised by the remote environment so may not exactly match the HTML\n\t * provided by the Web server.\n\t */\n\tgetPageSource() {\n\t\tif (this.capabilities.brokenPageSource) {\n\t\t\treturn this.execute<string>(\n\t\t\t\t/* istanbul ignore next */ function() {\n\t\t\t\t\treturn document.documentElement.outerHTML;\n\t\t\t\t}\n\t\t\t);\n\t\t} else {\n\t\t\treturn this.serverGet<string>('source');\n\t\t}\n\t}\n\n\t/**\n\t * Gets the title of the top-level browsing context of the current window\n\t * or tab.\n\t */\n\tgetPageTitle() {\n\t\treturn this.serverGet<string>('title');\n\t}\n\n\t/**\n\t * Gets the first element from the focused window/frame that matches the\n\t * given query.\n\t *\n\t * See [[Session.Session.setFindTimeout]] to set the amount of time it the\n\t * remote environment should spend waiting for an element that does not\n\t * exist at the time of the `find` call before timing out.\n\t *\n\t * @param using The element retrieval strategy to use. One of 'class name',\n\t * 'css selector', 'id', 'name', 'link text', 'partial link text', 'tag\n\t * name', 'xpath'.\n\t *\n\t * @param value The strategy-specific value to search for. For example, if\n\t * `using` is 'id', `value` should be the ID of the element to retrieve.\n\t */\n\tfind(using: Strategy, value: string) {\n\t\tif (this.capabilities.usesWebDriverLocators) {\n\t\t\tconst locator = toW3cLocator(using, value);\n\t\t\tusing = locator.using;\n\t\t\tvalue = locator.value;\n\t\t}\n\n\t\tif (this.capabilities.usesWebDriverLocators) {\n\t\t\tconst locator = toW3cLocator(using, value);\n\t\t\tusing = locator.using;\n\t\t\tvalue = locator.value;\n\t\t}\n\n\t\tif (\n\t\t\tusing.indexOf('link text') !== -1 &&\n\t\t\t(this.capabilities.brokenWhitespaceNormalization ||\n\t\t\t\tthis.capabilities.brokenLinkTextLocator)\n\t\t) {\n\t\t\treturn this.execute<Element>(\n\t\t\t\t/* istanbul ignore next */ this._manualFindByLinkText,\n\t\t\t\t[using, value]\n\t\t\t).then(element => {\n\t\t\t\tif (!element) {\n\t\t\t\t\tconst error = new Error();\n\t\t\t\t\terror.name = 'NoSuchElement';\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t\treturn new Element(element, this);\n\t\t\t});\n\t\t}\n\n\t\treturn this.serverPost<ElementOrElementId>('element', {\n\t\t\tusing: using,\n\t\t\tvalue: value\n\t\t}).then(element => {\n\t\t\treturn new Element(element, this);\n\t\t});\n\t}\n\n\t/**\n\t * Gets an array of elements from the focused window/frame that match the\n\t * given query.\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\tfindAll(using: Strategy, value: string) {\n\t\tif (this.capabilities.usesWebDriverLocators) {\n\t\t\tconst locator = toW3cLocator(using, value);\n\t\t\tusing = locator.using;\n\t\t\tvalue = locator.value;\n\t\t}\n\n\t\tif (this.capabilities.usesWebDriverLocators) {\n\t\t\tconst locator = toW3cLocator(using, value);\n\t\t\tusing = locator.using;\n\t\t\tvalue = locator.value;\n\t\t}\n\n\t\tif (\n\t\t\tusing.indexOf('link text') !== -1 &&\n\t\t\t(this.capabilities.brokenWhitespaceNormalization ||\n\t\t\t\tthis.capabilities.brokenLinkTextLocator)\n\t\t) {\n\t\t\treturn this.execute<Element[]>(\n\t\t\t\t/* istanbul ignore next */ this._manualFindByLinkText,\n\t\t\t\t[using, value, true]\n\t\t\t).then(elements => {\n\t\t\t\treturn elements.map((element: ElementOrElementId) => {\n\t\t\t\t\treturn new Element(element, this);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treturn this.serverPost<any[]>('elements', {\n\t\t\tusing: using,\n\t\t\tvalue: value\n\t\t}).then(elements => {\n\t\t\treturn elements.map((element: ElementOrElementId) => {\n\t\t\t\treturn new Element(element, this);\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * Gets the currently focused element from the focused window/frame.\n\t */\n\t@forCommand({ createsContext: true })\n\tgetActiveElement() {\n\t\tconst getDocumentActiveElement = () => {\n\t\t\treturn this.execute<Element>('return document.activeElement;');\n\t\t};\n\n\t\tif (this.capabilities.brokenActiveElement) {\n\t\t\treturn getDocumentActiveElement();\n\t\t} else {\n\t\t\tlet task: Task<ElementOrElementId>;\n\n\t\t\tif (this.capabilities.usesWebDriverActiveElement) {\n\t\t\t\ttask = this.serverGet<ElementOrElementId>('element/active');\n\t\t\t} else {\n\t\t\t\ttask = this.serverPost<ElementOrElementId>('element/active');\n\t\t\t}\n\n\t\t\treturn task.then((element: ElementOrElementId) => {\n\t\t\t\tif (element) {\n\t\t\t\t\treturn new Element(element, this);\n\t\t\t\t} else {\n\t\t\t\t\t// The driver will return `null` if the active element is\n\t\t\t\t\t// the body element; for consistency with how the DOM\n\t\t\t\t\t// `document.activeElement` property works, we’ll diverge\n\t\t\t\t\t// and always return an element\n\t\t\t\t\treturn getDocumentActiveElement();\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Types into the focused window/frame/element.\n\t *\n\t * @param keys The text to type in the remote environment. It is possible\n\t * to type keys that do not have normal character representations (modifier\n\t * keys, function keys, etc.) as well as keys that have two different\n\t * representations on a typical US-ASCII keyboard (numpad keys); use the\n\t * values from [[keys]] to type these special characters. Any modifier keys\n\t * that are activated by this call will persist until they are deactivated.\n\t * To deactivate a modifier key, type the same modifier key a second time,\n\t * or send `\\uE000` ('NULL') to deactivate all currently active modifier\n\t * keys.\n\t */\n\tpressKeys(keys: string | string[]) {\n\t\tif (!Array.isArray(keys)) {\n\t\t\tkeys = [keys];\n\t\t}\n\n\t\tif (\n\t\t\tthis.capabilities.brokenSendKeys ||\n\t\t\t!this.capabilities.supportsKeysCommand\n\t\t) {\n\t\t\treturn this.execute(simulateKeys, [keys]);\n\t\t}\n\n\t\treturn this.serverPost<void>('keys', {\n\t\t\tvalue: keys\n\t\t});\n\t}\n\n\t/**\n\t * Gets the current screen orientation.\n\t *\n\t * @returns Either 'portrait' or 'landscape'.\n\t */\n\tgetOrientation() {\n\t\treturn this.serverGet<'portrait' | 'landscape'>(\n\t\t\t'orientation'\n\t\t).then(function(orientation) {\n\t\t\treturn orientation.toLowerCase();\n\t\t});\n\t}\n\n\t/**\n\t * Sets the screen orientation.\n\t *\n\t * @param orientation Either 'portrait' or 'landscape'.\n\t */\n\tsetOrientation(orientation: string) {\n\t\torientation = orientation.toUpperCase();\n\n\t\treturn this.serverPost<void>('orientation', {\n\t\t\torientation: orientation\n\t\t});\n\t}\n\n\t/**\n\t * Gets the text displayed in the currently active alert pop-up.\n\t */\n\tgetAlertText() {\n\t\treturn this.serverGet<string>('alert_text');\n\t}\n\n\t/**\n\t * Types into the currently active prompt pop-up.\n\t *\n\t * @param text The text to type into the pop-up’s input box.\n\t */\n\ttypeInPrompt(text: string | string[]) {\n\t\tif (Array.isArray(text)) {\n\t\t\ttext = text.join('');\n\t\t}\n\n\t\treturn this.serverPost<void>('alert_text', {\n\t\t\ttext: text\n\t\t});\n\t}\n\n\t/**\n\t * Accepts an alert, prompt, or confirmation pop-up. Equivalent to clicking\n\t * the 'OK' button.\n\t */\n\tacceptAlert() {\n\t\treturn this.serverPost<void>('accept_alert');\n\t}\n\n\t/**\n\t * Dismisses an alert, prompt, or confirmation pop-up. Equivalent to\n\t * clicking the 'OK' button of an alert pop-up or the 'Cancel' button of a\n\t * prompt or confirmation pop-up.\n\t */\n\tdismissAlert() {\n\t\treturn this.serverPost<void>('dismiss_alert');\n\t}\n\n\t/**\n\t * Moves the remote environment’s mouse cursor to the specified element or\n\t * relative position. If the element is outside of the viewport, the remote\n\t * driver will attempt to scroll it into view automatically.\n\t *\n\t * @param element The element to move the mouse to. If x-offset and\n\t * y-offset are not specified, the mouse will be moved to the centre of the\n\t * element.\n\t *\n\t * @param xOffset The x-offset of the cursor, maybe in CSS pixels, relative\n\t * to the left edge of the specified element’s bounding client rectangle.\n\t * If no element is specified, the offset is relative to the previous\n\t * position of the mouse, or to the left edge of the page’s root element if\n\t * the mouse was never moved before.\n\t *\n\t * @param yOffset The y-offset of the cursor, maybe in CSS pixels, relative\n\t * to the top edge of the specified element’s bounding client rectangle. If\n\t * no element is specified, the offset is relative to the previous position\n\t * of the mouse, or to the top edge of the page’s root element if the mouse\n\t * was never moved before.\n\t */\n\tmoveMouseTo(): Task<void>;\n\tmoveMouseTo(xOffset?: number, yOffset?: number): Task<void>;\n\tmoveMouseTo(\n\t\telement?: Element,\n\t\txOffset?: number,\n\t\tyOffset?: number\n\t): Task<void>;\n\t@forCommand({ usesElement: true })\n\tmoveMouseTo(...args: any[]) {\n\t\tlet [element, xOffset, yOffset] = args;\n\n\t\tif (typeof yOffset === 'undefined' && typeof xOffset !== 'undefined') {\n\t\t\tyOffset = xOffset;\n\t\t\txOffset = element;\n\t\t\telement = null;\n\t\t}\n\n\t\tif (this.capabilities.brokenMouseEvents) {\n\t\t\treturn this.execute<void>(simulateMouse, [\n\t\t\t\t{\n\t\t\t\t\taction: 'mousemove',\n\t\t\t\t\tposition: this._lastMousePosition,\n\t\t\t\t\telement: element,\n\t\t\t\t\txOffset: xOffset,\n\t\t\t\t\tyOffset: yOffset\n\t\t\t\t}\n\t\t\t]).then(newPosition => {\n\t\t\t\tthis._lastMousePosition = newPosition;\n\t\t\t});\n\t\t}\n\n\t\tif (element) {\n\t\t\telement = element.elementId;\n\t\t} else if (!this._movedToElement) {\n\t\t\t// If the mouse has not been moved to any element on this page yet,\n\t\t\t// drivers will either throw errors (FirefoxDriver 2.40.0) or\n\t\t\t// silently fail (ChromeDriver 2.9) when trying to move the mouse\n\t\t\t// cursor relative to the \"previous\" position; in this case, we\n\t\t\t// just assume that the mouse position defaults to the top-left\n\t\t\t// corner of the document\n\t\t\tif (this.capabilities.brokenHtmlMouseMove) {\n\t\t\t\treturn this.execute<Element>(\n\t\t\t\t\t'return document.body;'\n\t\t\t\t).then(element => {\n\t\t\t\t\treturn element\n\t\t\t\t\t\t.getPosition()\n\t\t\t\t\t\t.then((position: { x: number; y: number }) => {\n\t\t\t\t\t\t\treturn this.moveMouseTo(\n\t\t\t\t\t\t\t\telement,\n\t\t\t\t\t\t\t\txOffset - position.x,\n\t\t\t\t\t\t\t\tyOffset - position.y\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn this.execute<Element>(\n\t\t\t\t\t'return document.documentElement;'\n\t\t\t\t).then(element => {\n\t\t\t\t\treturn this.moveMouseTo(element, xOffset, yOffset);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\treturn this.serverPost<void>('moveto', {\n\t\t\telement: element,\n\t\t\txoffset: xOffset,\n\t\t\tyoffset: yOffset\n\t\t}).then(() => {\n\t\t\tthis._movedToElement = true;\n\t\t});\n\t}\n\n\t/**\n\t * Clicks a mouse button at the point where the mouse cursor is currently\n\t * positioned. This method may fail to execute with an error if the mouse\n\t * has not been moved anywhere since the page was loaded.\n\t *\n\t * @param button The button to click. 0 corresponds to the primary mouse\n\t * button, 1 to the middle mouse button, 2 to the secondary mouse button.\n\t * Numbers above 2 correspond to any additional buttons a mouse might\n\t * provide.\n\t */\n\tclickMouseButton(button?: number) {\n\t\tif (this.capabilities.brokenMouseEvents) {\n\t\t\treturn this.execute<void>(simulateMouse, [\n\t\t\t\t{\n\t\t\t\t\taction: 'click',\n\t\t\t\t\tbutton: button,\n\t\t\t\t\tposition: this._lastMousePosition\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\n\t\treturn this.serverPost<void>('click', {\n\t\t\tbutton: button\n\t\t}).then(() => {\n\t\t\t// ios-driver 0.6.6-SNAPSHOT April 2014 does not wait until the\n\t\t\t// default action for a click event occurs before returning\n\t\t\tif (this.capabilities.touchEnabled) {\n\t\t\t\treturn sleep(300);\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Depresses a mouse button without releasing it.\n\t *\n\t * @param button The button to press. See [[Session.Session.click]] for\n\t * available options.\n\t */\n\tpressMouseButton(button?: number) {\n\t\tif (this.capabilities.brokenMouseEvents) {\n\t\t\treturn this.execute<void>(simulateMouse, [\n\t\t\t\t{\n\t\t\t\t\taction: 'mousedown',\n\t\t\t\t\tbutton: button,\n\t\t\t\t\tposition: this._lastMousePosition\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\n\t\treturn this.serverPost<void>('buttondown', {\n\t\t\tbutton: button\n\t\t});\n\t}\n\n\t/**\n\t * Releases a previously depressed mouse button.\n\t *\n\t * @param button The button to press. See [[Session.Session.click]] for\n\t * available options.\n\t */\n\treleaseMouseButton(button?: number) {\n\t\tif (this.capabilities.brokenMouseEvents) {\n\t\t\treturn this.execute<void>(simulateMouse, [\n\t\t\t\t{\n\t\t\t\t\taction: 'mouseup',\n\t\t\t\t\tbutton: button,\n\t\t\t\t\tposition: this._lastMousePosition\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\n\t\treturn this.serverPost<void>('buttonup', {\n\t\t\tbutton: button\n\t\t});\n\t}\n\n\t/**\n\t * Double-clicks the primary mouse button.\n\t */\n\tdoubleClick() {\n\t\tif (this.capabilities.brokenMouseEvents) {\n\t\t\treturn this.execute<void>(simulateMouse, [\n\t\t\t\t{\n\t\t\t\t\taction: 'dblclick',\n\t\t\t\t\tbutton: 0,\n\t\t\t\t\tposition: this._lastMousePosition\n\t\t\t\t}\n\t\t\t]);\n\t\t}\n\n\t\tif (this.capabilities.brokenDoubleClick) {\n\t\t\treturn this.pressMouseButton()\n\t\t\t\t.then(() => {\n\t\t\t\t\treturn this.releaseMouseButton();\n\t\t\t\t})\n\t\t\t\t.then(() => this.serverPost<void>('doubleclick'));\n\t\t}\n\n\t\treturn this.serverPost<void>('doubleclick');\n\t}\n\n\t/**\n\t * Taps an element on a touch screen device. If the element is outside of\n\t * the viewport, the remote driver will attempt to scroll it into view\n\t * automatically.\n\t *\n\t * @param element The element to tap.\n\t */\n\t@forCommand({ usesElement: true })\n\ttap(element: Element) {\n\t\treturn this.serverPost<void>('touch/click', {\n\t\t\telement: element.elementId\n\t\t});\n\t}\n\n\t/**\n\t * Depresses a new finger at the given point on a touch screen device\n\t * without releasing it.\n\t *\n\t * @param x The screen x-coordinate to press, maybe in device pixels.\n\t * @param y The screen y-coordinate to press, maybe in device pixels.\n\t */\n\tpressFinger(x: number, y: number) {\n\t\t// TODO: If someone specifies the same coordinates as as an existing\n\t\t// finger, will it switch the active finger back to that finger instead\n\t\t// of adding a new one?\n\t\treturn this.serverPost<void>('touch/down', { x: x, y: y });\n\t}\n\n\t/**\n\t * Releases whatever finger exists at the given point on a touch screen\n\t * device.\n\t *\n\t * @param x The screen x-coordinate where a finger is pressed, maybe in\n\t * device pixels.\n\t * @param y The screen y-coordinate where a finger is pressed, maybe in\n\t * device pixels.\n\t */\n\treleaseFinger(x: number, y: number) {\n\t\treturn this.serverPost<void>('touch/up', { x: x, y: y });\n\t}\n\n\t/**\n\t * Moves the last depressed finger to a new point on the touch screen.\n\t *\n\t * @param x The screen x-coordinate to move to, maybe in device pixels.\n\t * @param y The screen y-coordinate to move to, maybe in device pixels.\n\t */\n\tmoveFinger(x: number, y: number) {\n\t\treturn this.serverPost<void>('touch/move', { x: x, y: y });\n\t}\n\n\t/**\n\t * Scrolls the currently focused window on a touch screen device.\n\t *\n\t * @param element An element to scroll to. The window will be scrolled so\n\t * the element is as close to the top-left corner of the window as\n\t * possible.\n\t *\n\t * @param xOffset An optional x-offset, relative to the left edge of the\n\t * element, in CSS pixels. If no element is specified, the offset is\n\t * relative to the previous scroll position of the window.\n\t *\n\t * @param yOffset An optional y-offset, relative to the top edge of the\n\t * element, in CSS pixels. If no element is specified, the offset is\n\t * relative to the previous scroll position of the window.\n\t */\n\ttouchScroll(xOffset: number, yOffset: number): Task<void>;\n\ttouchScroll(\n\t\telement?: Element,\n\t\txOffset?: number,\n\t\tyOffset?: number\n\t): Task<void>;\n\t@forCommand({ usesElement: true })\n\ttouchScroll(...args: any[]) {\n\t\tlet [element, xOffset, yOffset] = args;\n\t\tif (typeof yOffset === 'undefined' && typeof xOffset !== 'undefined') {\n\t\t\tyOffset = xOffset;\n\t\t\txOffset = element;\n\t\t\telement = undefined;\n\t\t}\n\n\t\tif (this.capabilities.brokenTouchScroll) {\n\t\t\treturn this.execute<void>(\n\t\t\t\t/* istanbul ignore next */ function(\n\t\t\t\t\telement: HTMLElement,\n\t\t\t\t\tx: number,\n\t\t\t\t\ty: number\n\t\t\t\t) {\n\t\t\t\t\tconst rect = { left: window.scrollX, top: window.scrollY };\n\t\t\t\t\tif (element) {\n\t\t\t\t\t\tconst bbox = element.getBoundingClientRect();\n\t\t\t\t\t\trect.left += bbox.left;\n\t\t\t\t\t\trect.top += bbox.top;\n\t\t\t\t\t}\n\n\t\t\t\t\twindow.scrollTo(rect.left + x, rect.top + y);\n\t\t\t\t},\n\t\t\t\t[element, xOffset, yOffset]\n\t\t\t);\n\t\t}\n\n\t\tif (element) {\n\t\t\telement = element.elementId;\n\t\t}\n\n\t\t// TODO: If using this, please correct for device pixel ratio to ensure\n\t\t// consistency\n\t\treturn this.serverPost<void>('touch/scroll', {\n\t\t\telement: element,\n\t\t\txoffset: xOffset,\n\t\t\tyoffset: yOffset\n\t\t});\n\t}\n\n\t/**\n\t * Performs a double-tap gesture on an element.\n\t *\n\t * @param element The element to double-tap.\n\t */\n\t@forCommand({ usesElement: true })\n\tdoubleTap(element?: Element) {\n\t\tconst elementId = element && element.elementId;\n\t\treturn this.serverPost<void>('touch/doubleclick', {\n\t\t\telement: elementId\n\t\t});\n\t}\n\n\t/**\n\t * Performs a long-tap gesture on an element.\n\t *\n\t * @param element The element to long-tap.\n\t */\n\t@forCommand({ usesElement: true })\n\tlongTap(element?: Element) {\n\t\tconst elementId = element && element.elementId;\n\t\treturn this.serverPost<void>('touch/longclick', { element: elementId });\n\t}\n\n\t/**\n\t * Flicks a finger. Note that this method is currently badly specified and\n\t * highly dysfunctional and is only provided for the sake of completeness.\n\t *\n\t * @param element The element where the flick should start.\n\t * @param xOffset The x-offset in pixels to flick by.\n\t * @param yOffset The x-offset in pixels to flick by.\n\t * @param speed The speed of the flick, in pixels per *second*. Most human\n\t * flicks are 100–200ms, so this value will be higher than expected.\n\t */\n\tflickFinger(\n\t\telement: Element,\n\t\txOffset: number,\n\t\tyOffset: number,\n\t\tspeed?: number\n\t): Task<void>;\n\tflickFinger(xOffset: number, yOffset: number, speed?: number): Task<void>;\n\t@forCommand({ usesElement: true })\n\tflickFinger(...args: any[]) {\n\t\tlet [element, xOffset, yOffset, speed] = args;\n\t\tif (\n\t\t\ttypeof speed === 'undefined' &&\n\t\t\ttypeof yOffset === 'undefined' &&\n\t\t\ttypeof xOffset !== 'undefined'\n\t\t) {\n\t\t\treturn this.serverPost<void>('touch/flick', {\n\t\t\t\txspeed: element,\n\t\t\t\tyspeed: xOffset\n\t\t\t});\n\t\t}\n\n\t\t// if (element) {\n\t\t// \telement = element.elementId;\n\t\t// }\n\n\t\treturn this.serverPost<void>('touch/flick', {\n\t\t\telement: element.elementId,\n\t\t\txoffset: xOffset,\n\t\t\tyoffset: yOffset,\n\t\t\tspeed: speed\n\t\t});\n\t}\n\n\t/**\n\t * Gets the current geographical location of the remote environment.\n\t *\n\t * @returns Latitude and longitude are specified using standard WGS84\n\t * decimal latitude/longitude. Altitude is specified as meters above the\n\t * WGS84 ellipsoid. Not all environments support altitude.\n\t */\n\tgetGeolocation() {\n\t\treturn this.serverGet<Geolocation>('location').then(location => {\n\t\t\t// ChromeDriver 2.9 ignores altitude being set and then returns 0;\n\t\t\t// to match the Geolocation API specification, we will just pretend\n\t\t\t// that altitude is not supported by the browser at all by changing\n\t\t\t// the value to `null` if it is zero but the last set value was not\n\t\t\t// zero\n\t\t\tif (\n\t\t\t\tlocation.altitude === 0 &&\n\t\t\t\tthis._lastAltitude !== location.altitude\n\t\t\t) {\n\t\t\t\tlocation.altitude = undefined;\n\t\t\t}\n\n\t\t\treturn location;\n\t\t});\n\t}\n\n\t/**\n\t * Sets the geographical location of the remote environment.\n\t *\n\t * @param location Latitude and longitude are specified using standard\n\t * WGS84 decimal latitude/longitude. Altitude is specified as meters above\n\t * the WGS84 ellipsoid. Not all environments support altitude.\n\t */\n\tsetGeolocation(location: Geolocation) {\n\t\t// TODO: Is it weird that this accepts an object argument? `setCookie`\n\t\t// does too, but nothing else does.\n\t\tif (location.altitude !== undefined) {\n\t\t\tthis._lastAltitude = location.altitude;\n\t\t}\n\n\t\treturn this.serverPost<void>('location', { location });\n\t}\n\n\t/**\n\t * Gets all logs from the remote environment of the given type. The logs in\n\t * the remote environment are cleared once they have been retrieved.\n\t *\n\t * @param type The type of log entries to retrieve. Available log types\n\t * differ between remote environments. Use\n\t * [[Session.Session.getAvailableLogTypes]] to learn what log types are\n\t * currently available. Not all environments support all possible log\n\t * types.\n\t *\n\t * @returns An array of log entry objects. Timestamps in log entries are\n\t * Unix timestamps, in seconds.\n\t */\n\tgetLogsFor(type: string) {\n\t\treturn this.serverPost<string[] | LogEntry[]>('log', {\n\t\t\ttype: type\n\t\t}).then(function(logs) {\n\t\t\t// At least Selendroid 0.9.0 returns logs as an array of strings\n\t\t\t// instead of an array of log objects, which is a spec violation;\n\t\t\t// see https://github.com/selendroid/selendroid/issues/366\n\t\t\tif (!logs) {\n\t\t\t\treturn logs;\n\t\t\t}\n\n\t\t\tif (isStringArray(logs)) {\n\t\t\t\treturn logs.map(log => {\n\t\t\t\t\tconst logData = /\\[([^\\]]+)\\]\\s*\\[([^\\]]+)\\]\\s*(.*)/.exec(\n\t\t\t\t\t\tlog\n\t\t\t\t\t);\n\t\t\t\t\tlet entry: LogEntry;\n\n\t\t\t\t\tif (logData) {\n\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\ttimestamp: Date.parse(logData[1]) / 1000,\n\t\t\t\t\t\t\tlevel: logData[2],\n\t\t\t\t\t\t\tmessage: logData[3]\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\tentry = {\n\t\t\t\t\t\t\ttimestamp: NaN,\n\t\t\t\t\t\t\tlevel: 'INFO',\n\t\t\t\t\t\t\tmessage: log\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\n\t\t\t\t\treturn entry;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn logs;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Gets the types of logs that are currently available for retrieval from\n\t * the remote environment.\n\t */\n\tgetAvailableLogTypes() {\n\t\tif (this.capabilities.fixedLogTypes) {\n\t\t\treturn Task.resolve<string[]>(this.capabilities.fixedLogTypes);\n\t\t}\n\n\t\treturn this.serverGet<string[]>('log/types');\n\t}\n\n\t/**\n\t * Gets the current state of the HTML5 application cache for the current\n\t * page.\n\t *\n\t * @returns The cache status. One of 0 (uncached), 1 (cached/idle), 2\n\t * (checking), 3 (downloading), 4 (update ready), 5 (obsolete).\n\t */\n\tgetApplicationCacheStatus() {\n\t\treturn this.serverGet<number>('application_cache/status');\n\t}\n\n\t/**\n\t * Terminates the session. No more commands will be accepted by the remote\n\t * after this point.\n\t */\n\tquit() {\n\t\treturn this._server.deleteSession(this._sessionId);\n\t}\n\n\t/**\n\t * Searches a document or element subtree for links with the given\n\t * normalized text. This method works for 'link text' and 'partial link\n\t * text' search strategies.\n\t *\n\t * Note that this method should be passed to an `execute` call, not called\n\t * directly.\n\t *\n\t * @param using The strategy in use ('link text' or 'partial link text')\n\t * @param value The link text to search for\n\t * @param multiple If true, return all matching links\n\t * @param element A context element\n\t * @returns The found element or elements\n\t */\n\tprivate _manualFindByLinkText(\n\t\tusing: string,\n\t\tvalue: string,\n\t\tmultiple: boolean,\n\t\telement?: HTMLElement\n\t) {\n\t\tconst check =\n\t\t\tusing === 'link text'\n\t\t\t\t? function(linkText: string, text: string) {\n\t\t\t\t\t\treturn linkText === text;\n\t\t\t\t\t}\n\t\t\t\t: function(linkText: string, text: string) {\n\t\t\t\t\t\treturn linkText.indexOf(text) !== -1;\n\t\t\t\t\t};\n\n\t\tconst links = (element || document).getElementsByTagName('a');\n\t\tlet linkText: string;\n\t\tconst found: HTMLElement[] = [];\n\n\t\t// if (multiple) {\n\t\t// \tvar found = [];\n\t\t// }\n\n\t\tfor (let i = 0; i < links.length; i++) {\n\t\t\t// Normalize the link text whitespace\n\t\t\tlinkText = links[i].innerText\n\t\t\t\t.replace(/^\\s+/, '')\n\t\t\t\t.replace(/\\s+$/, '')\n\t\t\t\t.replace(/\\s*\\r\\n\\s*/g, '\\n')\n\t\t\t\t.replace(/ +/g, ' ');\n\t\t\tif (check(linkText, value)) {\n\t\t\t\tif (!multiple) {\n\t\t\t\t\treturn links[i];\n\t\t\t\t}\n\t\t\t\tfound.push(links[i]);\n\t\t\t}\n\t\t}\n\n\t\tif (multiple) {\n\t\t\treturn found;\n\t\t}\n\t}\n\n\t/**\n\t * Gets the list of keys set in local storage for the focused window/frame.\n\t */\n\tgetLocalStorageKeys() {\n\t\treturn this.serverGet<string[]>('local_storage');\n\t}\n\n\t/**\n\t * Sets a value in local storage for the focused window/frame.\n\t *\n\t * @param key The key to set.\n\t * @param value The value to set.\n\t */\n\tsetLocalStorageItem(key: string, value: string) {\n\t\treturn this.serverPost<void>('local_storage', { key, value });\n\t}\n\n\t/**\n\t * Clears all data in local storage for the focused window/frame.\n\t */\n\tclearLocalStorage() {\n\t\treturn this.serverDelete<void>('local_storage');\n\t}\n\n\t/**\n\t * Gets a value from local storage for the focused window/frame.\n\t *\n\t * @param key The key of the data to get.\n\t */\n\tgetLocalStorageItem(key: string) {\n\t\treturn this.serverGet<string>('local_storage/key/$0', null, [key]);\n\t}\n\n\t/**\n\t * Deletes a value from local storage for the focused window/frame.\n\t *\n\t * @param key The key of the data to delete.\n\t */\n\tdeleteLocalStorageItem(key: string) {\n\t\treturn this.serverDelete<void>('local_storage/key/$0', null, [key]);\n\t}\n\n\t/**\n\t * Gets the number of keys set in local storage for the focused\n\t * window/frame.\n\t */\n\tgetLocalStorageLength() {\n\t\treturn this.serverGet<number>('local_storage/size');\n\t}\n\n\t/**\n\t * Gets the list of keys set in session storage for the focused\n\t * window/frame.\n\t */\n\tgetSessionStorageKeys() {\n\t\treturn this.serverGet<string[]>('session_storage');\n\t}\n\n\t/**\n\t * Sets a value in session storage for the focused window/frame.\n\t *\n\t * @param key The key to set.\n\t * @param value The value to set.\n\t */\n\tsetSessionStorageItem(key: string, value: string) {\n\t\treturn this.serverPost<void>('session_storage', { key, value });\n\t}\n\n\t/**\n\t * Clears all data in session storage for the focused window/frame.\n\t */\n\tclearSessionStorage() {\n\t\treturn this.serverDelete<void>('session_storage');\n\t}\n\n\t/**\n\t * Gets a value from session storage for the focused window/frame.\n\t *\n\t * @param key The key of the data to get.\n\t */\n\tgetSessionStorageItem(key: string) {\n\t\treturn this.serverGet<string>('session_storage/key/$0', null, [key]);\n\t}\n\n\t/**\n\t * Deletes a value from session storage for the focused window/frame.\n\t *\n\t * @param key The key of the data to delete.\n\t */\n\tdeleteSessionStorageItem(key: string) {\n\t\treturn this.serverDelete<void>('session_storage/key/$0', null, [key]);\n\t}\n\n\t/**\n\t * Gets the number of keys set in session storage for the focused\n\t * window/frame.\n\t */\n\tgetSessionStorageLength() {\n\t\treturn this.serverGet<number>('session_storage/size');\n\t}\n\n\t/**\n\t * Gets the first [[Element.Element.isDisplayed|displayed]] element in the\n\t * currently active window/frame matching the given query. This is\n\t * inherently slower than [[Session.Session.find]], so should only be used\n\t * in cases where the visibility of an element cannot be ensured in\n\t * advance.\n\t *\n\t * @since 1.6\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\tfindDisplayed(using: Strategy, value: string) {\n\t\treturn findDisplayed(this, this, using, value);\n\t}\n\n\t/**\n\t * Waits for all elements in the currently active window/frame to be\n\t * destroyed.\n\t *\n\t * @param using The element retrieval strategy to use. See\n\t * [[Session.Session.find]] for options.\n\t *\n\t * @param value The strategy-specific value to search for. See\n\t * [[Session.Session.find]] for details.\n\t */\n\twaitForDeleted(using: Strategy, value: string) {\n\t\treturn waitForDeleted(this, this, using, value);\n\t}\n\n\t/**\n\t * Gets the timeout for [[Session.Session.executeAsync]] calls.\n\t */\n\tgetExecuteAsyncTimeout() {\n\t\treturn this.getTimeout('script');\n\t}\n\n\t/**\n\t * Sets the timeout for [[Session.Session.executeAsync]] calls.\n\t *\n\t * @param ms The length of the timeout, in milliseconds.\n\t */\n\tsetExecuteAsyncTimeout(ms: number) {\n\t\treturn this.setTimeout('script', ms);\n\t}\n\n\t/**\n\t * Gets the timeout for [[Session.Session.find]] calls.\n\t */\n\tgetFindTimeout() {\n\t\treturn this.getTimeout('implicit');\n\t}\n\n\t/**\n\t * Sets the timeout for [[Session.Session.find]] calls.\n\t *\n\t * @param ms The length of the timeout, in milliseconds.\n\t */\n\tsetFindTimeout(ms: number) {\n\t\treturn this.setTimeout('implicit', ms);\n\t}\n\n\t/**\n\t * Gets the timeout for [[Session.Session.get]] calls.\n\t */\n\tgetPageLoadTimeout() {\n\t\treturn this.getTimeout('page load');\n\t}\n\n\t/**\n\t * Sets the timeout for [[Session.Session.get]] calls.\n\t *\n\t * @param ms The length of the timeout, in milliseconds.\n\t */\n\tsetPageLoadTimeout(ms: number) {\n\t\treturn this.setTimeout('page load', ms);\n\t}\n}\n\nexport interface SessionError extends Error {\n\tstatus?: keyof typeof statusCodes;\n}\n\nexport type Timeout = 'script' | 'implicit' | 'page load';\n\n/**\n * Decorator for the [[util.forCommand]] method\n */\nfunction forCommand(properties: {\n\tusesElement?: boolean;\n\tcreatesContext?: boolean;\n}) {\n\treturn function(\n\t\ttarget: any,\n\t\tproperty: string,\n\t\tdescriptor: PropertyDescriptor\n\t) {\n\t\tconst fn = <Function>target[property];\n\t\tdescriptor.value = utilForCommand(fn, properties);\n\t};\n}\n\n/**\n * Finds and converts serialised DOM element objects into fully-featured typed\n * Elements.\n *\n * @param session The session from which the Element was retrieved.\n * @param value An object or array that may be, or may contain, serialised DOM\n * element objects.\n * @returns The input value, with all serialised DOM element objects converted\n * to typed Elements.\n */\nfunction convertToElements(session: Session, value: any) {\n\t// TODO: Unit test elements attached to objects\n\tfunction convert(value: any) {\n\t\tif (Array.isArray(value)) {\n\t\t\tvalue = value.map(convert);\n\t\t} else if (typeof value === 'object' && value !== null) {\n\t\t\tif (value.ELEMENT) {\n\t\t\t\tvalue = new Element(value, session);\n\t\t\t} else {\n\t\t\t\tfor (let k in value) {\n\t\t\t\t\tvalue[k] = convert(value[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn value;\n\t}\n\n\treturn convert(value);\n}\n\n/**\n * As of Selenium 2.40.0 (March 2014), all drivers incorrectly transmit an\n * UnknownError instead of a JavaScriptError when user code fails to execute\n * correctly. This method corrects this status code, under the assumption that\n * drivers will follow the spec in future.\n */\nfunction fixExecuteError(error: SessionError) {\n\tif (error.name === 'UnknownError') {\n\t\terror.status = '17';\n\t\terror.name = statusCodes[error.status][0];\n\t}\n\n\tthrow error;\n}\n\n/**\n * HTTP cookies are transmitted as semicolon-delimited strings, with a\n * `key=value` pair giving the cookie’s name and value, then additional\n * information about the cookie (expiry, path, domain, etc.) as additional k-v\n * pairs. This method takes an Array describing the parts of a cookie\n * (`target`), and a hash map containing the additional information (`source`),\n * and pushes the properties from the source object onto the target array as\n * properly escaped key-value strings.\n */\nfunction pushCookieProperties(target: any[], source: any) {\n\tObject.keys(source).forEach(function(key) {\n\t\tlet value = source[key];\n\n\t\tif (\n\t\t\tkey === 'name' ||\n\t\t\tkey === 'value' ||\n\t\t\t(key === 'domain' && value === 'http')\n\t\t) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof value === 'boolean') {\n\t\t\tvalue && target.push(key);\n\t\t} else if (key === 'expiry') {\n\t\t\t// JsonWireProtocol uses the key 'expiry' but JavaScript cookies\n\t\t\t// use the key 'expires'\n\t\t\tif (typeof value === 'number') {\n\t\t\t\tvalue = new Date(value * 1000);\n\t\t\t}\n\n\t\t\tif (value instanceof Date) {\n\t\t\t\tvalue = value.toUTCString();\n\t\t\t}\n\n\t\t\ttarget.push('expires=' + encodeURIComponent(value));\n\t\t} else {\n\t\t\ttarget.push(key + '=' + encodeURIComponent(value));\n\t\t}\n\t});\n}\n\n/* istanbul ignore next */\n/**\n * Simulates a keyboard event as it would occur on Safari 7.\n *\n * @param keys Keys to type.\n */\nfunction simulateKeys(keys: string[]) {\n\tconst target = <any>document.activeElement;\n\n\tfunction dispatch(kwArgs: any) {\n\t\tlet event: KeyboardEvent;\n\n\t\tif (typeof KeyboardEvent === 'function') {\n\t\t\tevent = new KeyboardEvent(kwArgs.type, {\n\t\t\t\tbubbles: true,\n\t\t\t\tcancelable: kwArgs.cancelable || false,\n\t\t\t\tview: window,\n\t\t\t\tkey: kwArgs.key || '',\n\t\t\t\tlocation: 3\n\t\t\t});\n\t\t} else {\n\t\t\tevent = document.createEvent('KeyboardEvent');\n\t\t\tevent.initKeyboardEvent(\n\t\t\t\tkwArgs.type,\n\t\t\t\ttrue,\n\t\t\t\tkwArgs.cancelable || false,\n\t\t\t\twindow,\n\t\t\t\tkwArgs.key || '',\n\t\t\t\t3,\n\t\t\t\t'',\n\t\t\t\t<any>0,\n\t\t\t\t''\n\t\t\t);\n\t\t}\n\n\t\treturn target.dispatchEvent(event);\n\t}\n\n\tfunction dispatchInput() {\n\t\tlet event: Event;\n\t\tif (typeof Event === 'function') {\n\t\t\tevent = new Event('input', { bubbles: true, cancelable: false });\n\t\t} else {\n\t\t\tevent = document.createEvent('Event');\n\t\t\tevent.initEvent('input', true, false);\n\t\t}\n\t\treturn target.dispatchEvent(event);\n\t}\n\n\tkeys = (<string[]>[]).concat(...keys.map(keys => keys.split('')));\n\n\tfor (let i = 0, j = keys.length; i < j; ++i) {\n\t\tconst key = keys[i];\n\t\tlet performDefault = true;\n\n\t\tperformDefault = dispatch({\n\t\t\ttype: 'keydown',\n\t\t\tcancelable: true,\n\t\t\tkey: key\n\t\t});\n\t\tperformDefault =\n\t\t\tperformDefault &&\n\t\t\tdispatch({ type: 'keypress', cancelable: true, key: key });\n\n\t\tif (performDefault) {\n\t\t\tif ('value' in target) {\n\t\t\t\ttarget.value =\n\t\t\t\t\ttarget.value.slice(0, target.selectionStart) +\n\t\t\t\t\tkey +\n\t\t\t\t\ttarget.value.slice(target.selectionEnd);\n\t\t\t\tdispatchInput();\n\t\t\t} else if (target.isContentEditable) {\n\t\t\t\tlet node = document.createTextNode(key);\n\t\t\t\tlet selection = window.getSelection();\n\t\t\t\tlet range = selection.getRangeAt(0);\n\t\t\t\trange.deleteContents();\n\t\t\t\trange.insertNode(node);\n\t\t\t\trange.setStartAfter(node);\n\t\t\t\trange.setEndAfter(node);\n\t\t\t\tselection.removeAllRanges();\n\t\t\t\tselection.addRange(range);\n\t\t\t}\n\t\t}\n\n\t\tdispatch({ type: 'keyup', cancelable: true, key: key });\n\t}\n}\n\n/* istanbul ignore next */\n/**\n * Simulates a mouse event as it would occur on Safari 7.\n *\n * @param kwArgs Parameters for the mouse event.\n */\nfunction simulateMouse(kwArgs: any) {\n\tlet position = kwArgs.position;\n\n\tfunction dispatch(kwArgs: any) {\n\t\tlet event: MouseEvent;\n\t\tif (typeof MouseEvent === 'function') {\n\t\t\tevent = new MouseEvent(kwArgs.type, {\n\t\t\t\tbubbles: 'bubbles' in kwArgs ? kwArgs.bubbles : true,\n\t\t\t\tcancelable: kwArgs.cancelable || false,\n\t\t\t\tview: window,\n\t\t\t\tdetail: kwArgs.detail || 0,\n\t\t\t\tscreenX: window.screenX + position.x,\n\t\t\t\tscreenY: window.screenY + position.y,\n\t\t\t\tclientX: position.x,\n\t\t\t\tclientY: position.y,\n\t\t\t\tctrlKey: kwArgs.ctrlKey || false,\n\t\t\t\tshiftKey: kwArgs.shiftKey || false,\n\t\t\t\taltKey: kwArgs.altKey || false,\n\t\t\t\tmetaKey: kwArgs.metaKey || false,\n\t\t\t\tbutton: kwArgs.button || 0,\n\t\t\t\trelatedTarget: kwArgs.relatedTarget\n\t\t\t});\n\t\t} else {\n\t\t\tevent = document.createEvent('MouseEvents');\n\t\t\tevent.initMouseEvent(\n\t\t\t\tkwArgs.type,\n\t\t\t\tkwArgs.bubbles || true,\n\t\t\t\tkwArgs.cancelable || false,\n\t\t\t\twindow,\n\t\t\t\tkwArgs.detail || 0,\n\t\t\t\twindow.screenX + position.x,\n\t\t\t\twindow.screenY + position.y,\n\t\t\t\tposition.x,\n\t\t\t\tposition.y,\n\t\t\t\tkwArgs.ctrlKey || false,\n\t\t\t\tkwArgs.altKey || false,\n\t\t\t\tkwArgs.shiftKey || false,\n\t\t\t\tkwArgs.metaKey || false,\n\t\t\t\tkwArgs.button || 0,\n\t\t\t\tkwArgs.relatedTarget || null\n\t\t\t);\n\t\t}\n\n\t\treturn kwArgs.target.dispatchEvent(event);\n\t}\n\n\tfunction click(target: any, button: any, detail: any) {\n\t\tif (!down(target, button)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!up(target, button)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn dispatch({\n\t\t\tbutton: button,\n\t\t\tcancelable: true,\n\t\t\tdetail: detail,\n\t\t\ttarget: target,\n\t\t\ttype: 'click'\n\t\t});\n\t}\n\n\tfunction down(target: any, button: any) {\n\t\treturn dispatch({\n\t\t\tbutton: button,\n\t\t\tcancelable: true,\n\t\t\ttarget: target,\n\t\t\ttype: 'mousedown'\n\t\t});\n\t}\n\n\tfunction up(target: any, button: any) {\n\t\treturn dispatch({\n\t\t\tbutton: button,\n\t\t\tcancelable: true,\n\t\t\ttarget: target,\n\t\t\ttype: 'mouseup'\n\t\t});\n\t}\n\n\tfunction move(\n\t\tcurrentElement: HTMLElement,\n\t\tnewElement: HTMLElement,\n\t\txOffset: number,\n\t\tyOffset: number\n\t) {\n\t\tif (newElement) {\n\t\t\tconst bbox = newElement.getBoundingClientRect();\n\n\t\t\tif (xOffset == null) {\n\t\t\t\txOffset = (bbox.right - bbox.left) * 0.5;\n\t\t\t}\n\n\t\t\tif (yOffset == null) {\n\t\t\t\tyOffset = (bbox.bottom - bbox.top) * 0.5;\n\t\t\t}\n\n\t\t\tposition = { x: bbox.left + xOffset, y: bbox.top + yOffset };\n\t\t} else {\n\t\t\tposition.x += xOffset || 0;\n\t\t\tposition.y += yOffset || 0;\n\n\t\t\tnewElement = <HTMLElement>document.elementFromPoint(\n\t\t\t\tposition.x,\n\t\t\t\tposition.y\n\t\t\t);\n\t\t}\n\n\t\tif (currentElement !== newElement) {\n\t\t\tdispatch({\n\t\t\t\ttype: 'mouseout',\n\t\t\t\ttarget: currentElement,\n\t\t\t\trelatedTarget: newElement\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: 'mouseleave',\n\t\t\t\ttarget: currentElement,\n\t\t\t\trelatedTarget: newElement,\n\t\t\t\tbubbles: false\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: 'mouseenter',\n\t\t\t\ttarget: newElement,\n\t\t\t\trelatedTarget: currentElement,\n\t\t\t\tbubbles: false\n\t\t\t});\n\t\t\tdispatch({\n\t\t\t\ttype: 'mouseover',\n\t\t\t\ttarget: newElement,\n\t\t\t\trelatedTarget: currentElement\n\t\t\t});\n\t\t}\n\n\t\tdispatch({ type: 'mousemove', target: newElement, bubbles: true });\n\n\t\treturn position;\n\t}\n\n\tconst target = <HTMLElement>document.elementFromPoint(\n\t\tposition.x,\n\t\tposition.y\n\t);\n\n\tif (kwArgs.action === 'mousemove') {\n\t\treturn move(target, kwArgs.element, kwArgs.xOffset, kwArgs.yOffset);\n\t} else if (kwArgs.action === 'mousedown') {\n\t\treturn down(target, kwArgs.button);\n\t} else if (kwArgs.action === 'mouseup') {\n\t\treturn up(target, kwArgs.button);\n\t} else if (kwArgs.action === 'click') {\n\t\treturn click(target, kwArgs.button, 0);\n\t} else if (kwArgs.action === 'dblclick') {\n\t\tif (!click(target, kwArgs.button, 0)) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif (!click(target, kwArgs.button, 1)) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn dispatch({\n\t\t\ttype: 'dblclick',\n\t\t\ttarget: target,\n\t\t\tbutton: kwArgs.button,\n\t\t\tdetail: 2,\n\t\t\tcancelable: true\n\t\t});\n\t}\n}\n\nfunction isStringArray(value: any): value is string[] {\n\treturn Array.isArray(value) && typeof value[0] === 'string';\n}\n"]}