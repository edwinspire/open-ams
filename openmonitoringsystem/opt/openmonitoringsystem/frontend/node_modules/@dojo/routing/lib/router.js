(function (factory) {
    if (typeof module === "object" && typeof module.exports === "object") {
        var v = factory(require, exports);
        if (v !== undefined) module.exports = v;
    }
    else if (typeof define === "function" && define.amd) {
        define(["require", "exports", "@dojo/shim/WeakMap"], factory);
    }
})(function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var WeakMap_1 = require("@dojo/shim/WeakMap");
    exports.parentMap = new WeakMap_1.default();
    /**
     * Whether the route has been appended to another route or router.
     */
    function hasBeenAppended(route) {
        return exports.parentMap.has(route) || route.parent !== undefined;
    }
    exports.hasBeenAppended = hasBeenAppended;
    /**
     * Finds the router whose route hierarchy the route has been appended to.
     *
     * Throws if the route was not appended to any router.
     */
    function findRouter(route) {
        while (route.parent) {
            route = route.parent;
        }
        var router = exports.parentMap.get(route);
        if (!router) {
            throw new Error('Cannot generate link for route that is not in the hierarchy');
        }
        else {
            return router;
        }
    }
    exports.findRouter = findRouter;
});
//# sourceMappingURL=router.js.map