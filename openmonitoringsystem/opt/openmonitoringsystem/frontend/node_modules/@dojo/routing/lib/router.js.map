{"version":3,"file":"router.js","sourceRoot":"","sources":["router.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA,8CAAyC;IAG5B,QAAA,SAAS,GAAG,IAAI,iBAAO,EAAiE,CAAC;IAEtG;;OAEG;IACH,yBAAgC,KAA0C;QACzE,MAAM,CAAC,iBAAS,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC;IAC3D,CAAC;IAFD,0CAEC;IAED;;;;OAIG;IACH,oBAA2B,KAA0C;QACpE,OAAO,KAAK,CAAC,MAAM,EAAE,CAAC;YACrB,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;QACtB,CAAC;QAED,IAAM,MAAM,GAAG,iBAAS,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACpC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACb,MAAM,IAAI,KAAK,CAAC,6DAA6D,CAAC,CAAC;QAChF,CAAC;QACD,IAAI,CAAC,CAAC;YACL,MAAM,CAAC,MAAM,CAAC;QACf,CAAC;IACF,CAAC;IAZD,gCAYC","sourcesContent":["import WeakMap from '@dojo/shim/WeakMap';\nimport { Context, Parameters, RouteInterface, RouterInterface } from '../interfaces';\n\nexport const parentMap = new WeakMap<RouteInterface<Context, Parameters>, RouterInterface<Context>>();\n\n/**\n * Whether the route has been appended to another route or router.\n */\nexport function hasBeenAppended(route: RouteInterface<Context, Parameters>): boolean {\n\treturn parentMap.has(route) || route.parent !== undefined;\n}\n\n/**\n * Finds the router whose route hierarchy the route has been appended to.\n *\n * Throws if the route was not appended to any router.\n */\nexport function findRouter(route: RouteInterface<Context, Parameters>): RouterInterface<Context> {\n\twhile (route.parent) {\n\t\troute = route.parent;\n\t}\n\n\tconst router = parentMap.get(route);\n\tif (!router) {\n\t\tthrow new Error('Cannot generate link for route that is not in the hierarchy');\n\t}\n\telse {\n\t\treturn router;\n\t}\n}\n"]}