{"version":3,"file":"IgnoreUnmodifiedPlugin.js","sourceRoot":"","sources":["IgnoreUnmodifiedPlugin.ts"],"names":[],"mappings":";;AAEA,2DAA2D;AAC3D,2FAA2F;AAC3F,8FAA8F;AAC9F,+FAA+F;AAC/F,yFAAyF;AACzF,gBAAgB;AAChB,MAAM,WAAW,GAAG,KAAK,CAAC;AAE1B;IACC,KAAK,CAAC,QAAkB;QACvB,QAAQ,CAAC,MAAM,CAAC,mBAAmB,EAAE;YACpC,MAAM,GAAG,GAAG,QAAQ,CAAC,eAAe,CAAC,GAAG,IAAI,QAAQ,CAAC,eAAe,CAAC;YACrE,MAAM,MAAM,GAAmC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACnE,IAAI,OAAY,CAAC;YAEjB,MAAM,CAAC,cAAc,CAAC,GAAG,EAAE,SAAS,EAAE;gBACrC,GAAG;oBACF,MAAM,CAAC,OAAO,CAAC;gBAChB,CAAC;gBACD,GAAG,CAAC,QAAQ;oBACX,OAAO,GAAG,QAAQ,CAAC;oBACnB,MAAM,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC;oBACnC,OAAO,CAAC,SAAS,GAAG,UAAU,IAAY,EAAE,KAAa;wBACxD,EAAE,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;4BACjD,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,GAAG,WAAW,CAAC;4BACnC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;wBAC3C,CAAC;wBAED,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC;wBACpB,OAAO,CAAC,SAAS,GAAG,QAAQ,CAAC;oBAC9B,CAAC,CAAC;gBACH,CAAC;aACD,CAAC,CAAC;QACJ,CAAC,CAAC,CAAC;IACJ,CAAC;CACD;AA3BD,wDA2BC;AAED,kBAAe,sBAAsB,CAAC","sourcesContent":["import Compiler = require('webpack/lib/Compiler');\n\n// TODO: See https://github.com/webpack/watchpack/issues/51\n// The first time webpack's file watcher comes across a new file, it adds 10s to its mtime,\n// and then emits change events until the compilation start time passes that mtime. The result\n// of this behavior is that when initially running `$ dojo build -w`, the app compiles multiple\n// times. This plugin works by removing the 10s buffer added to the file's mtime with the\n// initial pass.\nconst FS_ACCURACY = 10000;\n\nexport class IgnoreUnmodifiedPlugin {\n\tapply(compiler: Compiler) {\n\t\tcompiler.plugin('after-environment', () => {\n\t\t\tconst wfs = compiler.watchFileSystem.wfs || compiler.watchFileSystem;\n\t\t\tconst mtimes: { [filePath: string]: number } = Object.create(null);\n\t\t\tlet watcher: any;\n\n\t\t\tObject.defineProperty(wfs, 'watcher', {\n\t\t\t\tget() {\n\t\t\t\t\treturn watcher;\n\t\t\t\t},\n\t\t\t\tset(_watcher) {\n\t\t\t\t\twatcher = _watcher;\n\t\t\t\t\tconst onChange = watcher._onChange;\n\t\t\t\t\twatcher._onChange = function (item: string, mtime: number) {\n\t\t\t\t\t\tif (!(item in mtimes) || mtimes[item] !== mtime) {\n\t\t\t\t\t\t\tmtimes[item] = mtime - FS_ACCURACY;\n\t\t\t\t\t\t\treturn onChange.apply(watcher, arguments);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdelete mtimes[item];\n\t\t\t\t\t\twatcher._onChange = onChange;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n}\n\nexport default IgnoreUnmodifiedPlugin;\n"]}