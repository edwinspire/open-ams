import { Program } from 'estree';
/**
 * Return an array of URLs that are passed as arguments to `@dojo/i18n/cldr/load.default` in the specified AST program
 * and with the specified import variable names.
 *
 * @param ast
 * An AST program to parse
 *
 * @param importNames
 * The variables name(s) in the AST program that represent the `@dojo/i18n/cldr/load.default` function.
 * In the overwhelming majority of use cases, there will only be one.
 *
 * @return
 * An array of containing all the string URLs that were passed to the cldr/load function.
 */
export declare const getLoadCallUrls: (program: Program, importNames: string[]) => string[];
/**
 * Return an array of variable names for `@dojo/i18n/cldr/load` imports.
 *
 * @param ast
 * An AST program to parse.
 *
 * @return
 * A list of variable names.
 */
export declare function getLoadImports(ast: Program): string[];
/**
 * Parse an AST program for all URLs passed to `@dojo/i18n/cldr/load`.
 *
 * Note that `@dojo/i18n/cldr/load` must be loaded with `require` for it to be recognized.
 * URLs can be injected as an array either directly to cldr/load function, or via a variable that is defined within
 * the same program. If a variable is used, then its definition MUST be a straightforward array expression:
 * `const cldrUrls = [ ... ]`. More complex operatiions will not be registered (for example:
 * `const supplemental = [ 'likelySubtags' ].map(name => `cldr-data/supplemental/${name}.json`).
 *
 * @param ast
 * An AST program
 *
 * @return
 * An array of any URLs parsed from calls to `@dojo/i18n/cldr/load.default`.
 */
export default function getCldrUrls(context: string, ast: Program): string[];
