{"version":3,"file":"CoreLoadPlugin.js","sourceRoot":"","sources":["CoreLoadPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport { createFilePathRegExp, getBasePath, resolveMid } from './util/main';\nimport { CallExpression, Node, Program } from 'estree';\nimport { getNextItem } from './util/parser';\nimport Set from '@dojo/shim/Set';\nimport ConcatSource = require('webpack-sources/lib/ConcatSource');\nimport NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\nimport Compiler = require('webpack/lib/Compiler');\nimport NormalModule = require('webpack/lib/NormalModule');\nimport Parser = require('webpack/lib/Parser');\n\nconst RequireEnsureDependenciesBlock = require('webpack/lib/dependencies/RequireEnsureDependenciesBlock');\nconst RequireEnsureItemDependency = require('webpack/lib/dependencies/RequireEnsureItemDependency');\nconst ConstDependency = require('webpack/lib/dependencies/ConstDependency');\n\ninterface ModuleIdMap {\n\t[id: string]: any;\n}\n\n/**\n * @private\n * Regular expression that matches JS module IDs.\n */\nconst jsMidPattern = /\\.(t|j)sx?$/;\n\n/**\n * @private\n * Regular expression that matches a relative path, regardless of the file separator.\n */\nconst relativePathPattern = createFilePathRegExp('^\\\\.(\\\\.*)\\/');\n\n/**\n * @private\n * Test whether a module was required with a relative mid and is relative to a module with a contextual require.\n *\n * @param module\n * The module to test.\n *\n * @param issuers\n * The userRequest paths for all modules with a contextual require.\n *\n * @return\n * True if the module should be included in the load map; false otherwise.3u\n */\nfunction isContextual(module: NormalModule, issuers: string[]): boolean {\n\tconst { rawRequest, userRequest } = module;\n\tconst request = userRequest.replace(/\\.[a-z0-9]+$/i, '');\n\treturn relativePathPattern.test(rawRequest) && issuers.some((issuer: string) => path.resolve(issuer, rawRequest) === path.resolve(request));\n}\n\n/**\n * @private\n * Strips the drive prefix from a file path and normalizes the path separator to '/'.\n *\n * @param path The path on which to operate.\n *\n * @return The normalized file path.\n */\nfunction normalizeFilePath(path: string): string {\n\treturn path.replace(/\\\\/g, '/').replace(/^[a-z]:/i, '');\n}\n\n/**\n * @private\n * Remove the specified base path from the specified path. If the path begins with the base path, then also remove\n * the node_modules path segment. Note that the file separator of the returned path is converted to '/'.\n *\n * @param basePath\n * The base path.\n *\n * @param path\n * The path to modify.\n *\n * @return\n * The updated path.\n */\nfunction stripPath(basePath: string, path: string): string {\n\tbasePath = normalizeFilePath(basePath);\n\tpath = normalizeFilePath(path);\n\tlet resolved = (basePath ? path.replace(basePath + '/', '') : path).replace(/\\..*$/, '');\n\n\tif (path.indexOf(basePath) === 0) {\n\t\tresolved = resolved.replace('node_modules/', '');\n\t}\n\n\treturn resolved;\n}\n\ninterface CallExpressionWithParent {\n\tcallExpression: CallExpression;\n\tpath: any[];\n}\n\n/**\n * Iterate through a Statement and find all the CallExpressions. The call expression and the\n * AST path to the expressio is saved.\n *\n * @param statement The program/statement to get the call expressions for\n * @return The array of call expressions including the parent\n */\nfunction findCallExpressions(statement: Program): CallExpressionWithParent[] {\n\tconst callExpressions: CallExpressionWithParent[] = [];\n\n\tfunction walker(path: Node[], item: Node) {\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (item instanceof Array) {\n\t\t\titem.forEach(arrayItem => walker([ ...path, item ], arrayItem));\n\t\t\treturn;\n\t\t}\n\t\telse if (item.type === 'CallExpression') {\n\t\t\tcallExpressions.push({\n\t\t\t\tcallExpression: item,\n\t\t\t\tpath: path\n\t\t\t});\n\t\t}\n\n\t\tconst next = getNextItem(item);\n\t\tnext && walker([ ...path, item ], next);\n\t}\n\n\twalker([], statement);\n\n\treturn callExpressions;\n}\n\n/**\n * An object of chunk names and regular expressions. If the requested resource matches the RegExp, the chunk name\n * will be used.\n */\nexport interface DojoLoadChunkNames {\n\t[key: string]: RegExp;\n}\n\n/**\n * Options for the DojoLoadPlugin\n */\nexport interface DojoLoadPluginOptions {\n\tbasePath?: string;\n\tchunkNames?: DojoLoadChunkNames;\n\tdetectLazyLoads?: boolean;\n\tignoredModules?: string[];\n\tmapAppModules?: boolean;\n}\n\n/**\n * A webpack plugin that forces webpack to ignore `require` passed as a value, and replaces `@dojo/core/load` with a\n * custom function that maps string module IDs to webpack's numerical module IDs.\n */\nexport default class DojoLoadPlugin {\n\tprivate _basePath: string;\n\tprivate _detectLazyLoads: boolean;\n\tprivate _ignoredModules = new Set<string>();\n\tprivate _lazyChunkNames: DojoLoadChunkNames;\n\tprivate _mapAppModules: boolean;\n\n\tconstructor(options: DojoLoadPluginOptions = {}) {\n\t\tconst { basePath = './', chunkNames = {}, detectLazyLoads = false, ignoredModules, mapAppModules = false } = options;\n\n\t\tthis._basePath = normalizeFilePath(basePath);\n\t\tthis._detectLazyLoads = detectLazyLoads;\n\t\tthis._lazyChunkNames = chunkNames;\n\t\tthis._mapAppModules = mapAppModules;\n\n\t\tif (ignoredModules) {\n\t\t\tignoredModules.forEach(moduleName => {\n\t\t\t\tconst absolutePath = path.resolve(basePath, moduleName);\n\n\t\t\t\tthis._ignoredModules.add(absolutePath);\n\t\t\t});\n\t\t}\n\t}\n\n\t/**\n\t * Set up event listeners on the compiler and compilation. Register any module that uses a contextual require,\n\t * replace use of `@dojo/core/load` with a custom load module, passing it a map of all dynamically-required\n\t * module IDs.\n\t *\n\t * @param compiler\n\t * The compiler instance.\n\t */\n\tapply(compiler: Compiler) {\n\t\tconst idMap = Object.create(null) as ModuleIdMap;\n\t\tconst basePath = this._basePath;\n\t\tconst bundleLoader = /bundle.*\\!/;\n\t\tconst issuers: string[] = [];\n\t\tconst detectLazyLoads = this._detectLazyLoads;\n\t\tconst chunkNames = this._lazyChunkNames;\n\t\tconst ignoredModules = this._ignoredModules;\n\t\tconst coreLoadPattern = createFilePathRegExp('@dojo/core/load\\\\.js');\n\n\t\tcompiler.apply(new NormalModuleReplacementPlugin(coreLoadPattern, resolveMid('@dojo/core/load/webpack')));\n\n\t\tcompiler.plugin('compilation', (compilation, params) => {\n\t\t\tparams.normalModuleFactory.plugin('parser', function (parser) {\n\t\t\t\tparser.plugin('expression require', function (): boolean {\n\t\t\t\t\tconst state = <Parser.NormalModuleState> this.state;\n\t\t\t\t\tif (state && state.current && state.current.meta) {\n\t\t\t\t\t\tissuers.push(getBasePath(state.current.userRequest));\n\t\t\t\t\t\tstate.current.meta.isPotentialLoad = true;\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\n\t\t\t\tif (detectLazyLoads) {\n\t\t\t\t\t/*\n\t\t\t\t\t Detect lazy loads by iterating through a module and looking for a pattern,\n\t\t\t\t\t call_expression(require, 'some string')\n\t\t\t\t\t */\n\t\t\t\t\tparser.plugin('program', function (program: Program) {\n\t\t\t\t\t\tif (parser.state && parser.state.current) {\n\t\t\t\t\t\t\tconst { userRequest } = parser.state.current as any;\n\n\t\t\t\t\t\t\tif (userRequest) {\n\t\t\t\t\t\t\t\tconst source = (<any> parser.state.module)._source;\n\n\t\t\t\t\t\t\t\tif (!source || source.source().indexOf('@dojo/core/load') === -1) {\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tfindCallExpressions(program).filter(expression => expression.callExpression.arguments.length === 2).forEach(callExpressionAndParent => {\n\t\t\t\t\t\t\t\t\tconst [ first, second ] = callExpressionAndParent.callExpression.arguments;\n\n\t\t\t\t\t\t\t\t\tif (first.type === 'Identifier' && first.name === 'require') {\n\t\t\t\t\t\t\t\t\t\tif (second.type === 'Literal' && typeof(second.value) === 'string') {\n\t\t\t\t\t\t\t\t\t\t\tconst callPath = [ ...callExpressionAndParent.path ];\n\n\t\t\t\t\t\t\t\t\t\t\tconst absolutePath = path.resolve(path.dirname(userRequest), second.value);\n\n\t\t\t\t\t\t\t\t\t\t\tif (ignoredModules.has(absolutePath)) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\tlet foundDefineCall = false;\n\n\t\t\t\t\t\t\t\t\t\t\tlet index = callPath.length - 1;\n\t\t\t\t\t\t\t\t\t\t\twhile (index > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tconst entry = callPath[ index-- ];\n\n\t\t\t\t\t\t\t\t\t\t\t\tif (entry.type === 'CallExpression') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tif (entry.callee.type === 'MemberExpression' && entry.callee.property.type === 'Identifier' && entry.callee.property.name === 'define') {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tfoundDefineCall = true;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\tWe only want to process calls that were made inside of a `registry.define` call.\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\tif (!foundDefineCall) {\n\t\t\t\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\t Find the containing function of the expression. We'll want this whole\n\t\t\t\t\t\t\t\t\t\t\t function to be wrapped in the require.ensure\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\tlet fnExpression = callPath.pop();\n\t\t\t\t\t\t\t\t\t\t\twhile (fnExpression && fnExpression.type !== 'FunctionExpression') {\n\t\t\t\t\t\t\t\t\t\t\t\tfnExpression = callPath.pop();\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\t The require.ensure plugin expects you to actually be calling require.ensure,\n\t\t\t\t\t\t\t\t\t\t\t which has a signature like require.ensure([], function() { }). We need to mock\n\t\t\t\t\t\t\t\t\t\t\t the plugin has a hard coded check on 'expression.arguments[1]' to get a handle\n\t\t\t\t\t\t\t\t\t\t\t to the actual function we want to ensure, so we need to make a pretend expression\n\t\t\t\t\t\t\t\t\t\t\t that looks like a require.ensure call.\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\tconst temp = {\n\t\t\t\t\t\t\t\t\t\t\t\ttype: 'CallExpression',\n\t\t\t\t\t\t\t\t\t\t\t\targuments: [\n\t\t\t\t\t\t\t\t\t\t\t\t\t{},\n\t\t\t\t\t\t\t\t\t\t\t\t\tfnExpression\n\t\t\t\t\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\t\t\t\t\trange: fnExpression.range\n\t\t\t\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\t Find an appropriate chunk name (null is an appropriate chunk name).\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\tlet chunkName = path.basename(absolutePath);\n\n\t\t\t\t\t\t\t\t\t\t\tconst applicableNames = Object.keys(chunkNames).filter(name => {\n\t\t\t\t\t\t\t\t\t\t\t\treturn chunkNames[ name ].test(<string> second.value);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\tif (applicableNames.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\tchunkName = applicableNames[ 0 ];\n\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\t Create the require.ensure block\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\tconst dep = new RequireEnsureDependenciesBlock(temp, fnExpression, null, chunkName, null, parser.state.module, fnExpression.loc);\n\n\t\t\t\t\t\t\t\t\t\t\tconst old: any = parser.state.current;\n\t\t\t\t\t\t\t\t\t\t\tparser.state.current = dep;\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\t We add our one dependency to the [] in the ensure\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\t(<any> parser).inScope([], () => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst edep = new RequireEnsureItemDependency(second.value, second.range);\n\t\t\t\t\t\t\t\t\t\t\t\tedep.loc = dep.loc;\n\t\t\t\t\t\t\t\t\t\t\t\tdep.addDependency(edep);\n\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t/*\n\t\t\t\t\t\t\t\t\t\t\t By default, the require.ensure is not going to execute when we want. We wrap it in a function block\n\t\t\t\t\t\t\t\t\t\t\t to control the execution.\n\t\t\t\t\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\t\t\t\t\told.addDependency(new ConstDependency('function() { return (', fnExpression.range[0]));\n\t\t\t\t\t\t\t\t\t\t\told.addDependency(new ConstDependency('})', fnExpression.range[1] + 1));\n\n\t\t\t\t\t\t\t\t\t\t\told.addBlock(dep);\n\n\t\t\t\t\t\t\t\t\t\t\tparser.state.current = old;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tcompilation.moduleTemplate.plugin('module', (source, module: NormalModule) => {\n\t\t\t\tif (module.meta && module.meta.isPotentialLoad) {\n\t\t\t\t\tconst path = stripPath(basePath, module.userRequest);\n\t\t\t\t\tconst require = `var require = function () { return '${path}'; };`;\n\t\t\t\t\treturn new ConcatSource(require, '\\n', source);\n\t\t\t\t}\n\t\t\t\tconst load = idMap['@dojo/core/load'] || { id: null };\n\t\t\t\tif (module.id === load.id) {\n\t\t\t\t\tconst moduleMap = `var __modules__ = ${JSON.stringify(idMap)};`;\n\t\t\t\t\treturn new ConcatSource(moduleMap, '\\n', source);\n\t\t\t\t}\n\n\t\t\t\treturn source;\n\t\t\t});\n\n\t\t\tcompilation.plugin('optimize-module-ids', (modules: NormalModule[]) => {\n\t\t\t\tconst appPath = this._basePath ? path.join(this._basePath, 'src') : 'src';\n\t\t\t\tfunction mapModuleId(modulePath: string, module: NormalModule) {\n\t\t\t\t\tconst { rawRequest, userRequest } = module;\n\t\t\t\t\tlet lazy = false;\n\t\t\t\t\tif (bundleLoader.test(rawRequest)) {\n\t\t\t\t\t\tconst afterLoader = userRequest.split('!')[1];\n\t\t\t\t\t\tmodulePath = stripPath(basePath, afterLoader);\n\t\t\t\t\t\tlazy = true;\n\t\t\t\t\t}\n\t\t\t\t\tidMap[modulePath] = { id: module.id, lazy };\n\t\t\t\t}\n\n\t\t\t\tmodules.forEach(module => {\n\t\t\t\t\tlet { rawRequest, userRequest } = module;\n\n\t\t\t\t\tif (rawRequest) {\n\t\t\t\t\t\trawRequest = normalizeFilePath(rawRequest);\n\t\t\t\t\t\tuserRequest = normalizeFilePath(userRequest);\n\n\t\t\t\t\t\tif (this._mapAppModules && path.resolve(userRequest).indexOf(path.resolve(appPath)) === 0) {\n\t\t\t\t\t\t\tif (jsMidPattern.test(userRequest)) {\n\t\t\t\t\t\t\t\tlet modulePath = userRequest.replace(`${this._basePath}/`, '').replace(jsMidPattern, '');\n\t\t\t\t\t\t\t\tmapModuleId(modulePath, module);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (rawRequest.indexOf('@dojo') === 0 || !/^\\W/.test(rawRequest)) {\n\t\t\t\t\t\t\tlet modulePath = rawRequest;\n\t\t\t\t\t\t\tmapModuleId(modulePath, module);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (isContextual(module, issuers)) {\n\t\t\t\t\t\t\tconst modulePath = stripPath(basePath, userRequest);\n\t\t\t\t\t\t\tidMap[modulePath] = { id: module.id, lazy: false };\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n};\n"]}