import Compiler = require('webpack/lib/Compiler');
export interface DojoI18nPluginOptions {
    /**
     * Indicates whether parsed CLDR URLs should be cached for application to subsequent builds. Since the parser relies on the
     * modules passed to it, and since the webpack dev server only rebuilds from changed modules, setting this to `true` prevents
     * CLDR data from being removed on subsequent builds. Defaults to false. This should only be set when building with the
     * `watch` flag.
     */
    cacheCldrUrls?: boolean;
    /**
     * The default locale to use as a fallback when the system locale is unsupported. Assumed to correspond to the
     * default messages in any message bundles.
     */
    defaultLocale: string;
    /**
     * A list of message bundle paths. Messages for all supported locales will be included in the build.
     * Unless the message bundle paths have an extension, a `ts` extension is assumed.
     */
    messageBundles?: string[];
    /**
     * The locales whose CLDR data and messages will be included in the main build.
     */
    supportedLocales?: string[];
}
/**
 * A webpack plugin that ensures CLDR data and locale-specific messages are available to webpack.
 */
export default class DojoI18nPlugin {
    private _cldrUrls;
    defaultLocale: string;
    messageBundles?: string[];
    supportedLocales?: string[];
    constructor(options: DojoI18nPluginOptions);
    /**
     * Add messages and CLDR data to the build, and replace `@dojo/i18n/cldr/load` with a webpack-specific
     * load module.
     *
     * @param compiler
     * The current compiler.
     */
    apply(compiler: Compiler): void;
    /**
     * @protected
     * Returns a merged array of supported locales.
     */
    protected _getLocales(this: DojoI18nPlugin): string[];
}
