{"version":3,"file":"I18nPlugin.js","sourceRoot":"","sources":["I18nPlugin.ts"],"names":[],"mappings":"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","sourcesContent":["import { deepAssign } from '@dojo/core/lang';\nimport { CldrData } from '@dojo/i18n/cldr/load';\nimport Map from '@dojo/shim/Map';\nimport Set from '@dojo/shim/Set';\nimport { Program } from 'estree';\nimport * as fs from 'fs';\nimport * as path from 'path';\nimport ConcatSource = require('webpack-sources/lib/ConcatSource');\nimport NormalModule = require('webpack/lib/NormalModule');\nimport NormalModuleReplacementPlugin = require('webpack/lib/NormalModuleReplacementPlugin');\nimport Compiler = require('webpack/lib/Compiler');\nimport InjectModulesPlugin from './InjectModulesPlugin';\nimport getCldrUrls from './util/i18n';\nimport { createFilePathRegExp, hasExtension, mergeUnique, resolveMid } from './util/main';\n\nconst cldrLoadWebpackPattern = createFilePathRegExp('cldr/load(/webpack|\\\\.js)');\n\nexport interface DojoI18nPluginOptions {\n\t/**\n\t * Indicates whether parsed CLDR URLs should be cached for application to subsequent builds. Since the parser relies on the\n\t * modules passed to it, and since the webpack dev server only rebuilds from changed modules, setting this to `true` prevents\n\t * CLDR data from being removed on subsequent builds. Defaults to false. This should only be set when building with the\n\t * `watch` flag.\n\t */\n\tcacheCldrUrls?: boolean;\n\n\t/**\n\t * The default locale to use as a fallback when the system locale is unsupported. Assumed to correspond to the\n\t * default messages in any message bundles.\n\t */\n\tdefaultLocale: string;\n\n\t/**\n\t * A list of message bundle paths. Messages for all supported locales will be included in the build.\n\t * Unless the message bundle paths have an extension, a `ts` extension is assumed.\n\t */\n\tmessageBundles?: string[];\n\n\t/**\n\t * The locales whose CLDR data and messages will be included in the main build.\n\t */\n\tsupportedLocales?: string[];\n}\n\n/**\n * @private\n * Return a list of locale-specific message bundle paths for the provided bundle ID and supported locales.\n * Only paths for existing modules are included.\n *\n * @param bundle\n * The default bundle module ID or path.\n *\n * @param supportedLocales\n * The list of supported locales.\n *\n * @return\n * The list of paths for the locale-specific message bundles.\n */\nfunction getMessageLocalePaths(bundle: string, supportedLocales: string[]): string[] {\n\tconst idSegments = bundle.split('/');\n\tconst base = idSegments.slice(0, -1).join('/');\n\tconst name = idSegments.slice(-1).join();\n\tconst extension = hasExtension(name) ? '' : '.ts';\n\n\treturn supportedLocales\n\t\t.map((locale: string) => path.join(base, locale, name))\n\t\t.filter((path: string) => {\n\t\t\ttry {\n\t\t\t\tfs.accessSync(`${path}${extension}`);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tcatch (error) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t});\n}\n\n/**\n * @private\n * Determine whether the specified path is for the `@dojo/i18n/cldr/load` module.\n */\nfunction isCldrLoadModule(path: string): boolean {\n\treturn cldrLoadWebpackPattern.test(path);\n}\n\n/**\n * @private\n * Determine whether the specified module path is for a JavaScript/TypeScript module.\n */\nfunction isJsModule(mid: string): boolean {\n\treturn /\\.(j|t)sx?$/.test(mid);\n}\n\n/**\n * @private\n * Determine whether the specified module path is for a node module.\n */\nfunction isNodeModule(mid: string): boolean {\n\treturn mid.indexOf('node_modules') > -1;\n}\n\n/**\n * A webpack plugin that ensures CLDR data and locale-specific messages are available to webpack.\n */\nexport default class DojoI18nPlugin {\n\tprivate _cldrUrls: string[];\n\n\tdefaultLocale: string;\n\tmessageBundles?: string[];\n\tsupportedLocales?: string[];\n\n\tconstructor(options: DojoI18nPluginOptions) {\n\t\tconst { cacheCldrUrls, defaultLocale, messageBundles, supportedLocales } = options;\n\n\t\tthis.defaultLocale = defaultLocale;\n\t\tthis.messageBundles = messageBundles;\n\t\tthis.supportedLocales = supportedLocales;\n\n\t\tif (cacheCldrUrls) {\n\t\t\tthis._cldrUrls = [];\n\t\t}\n\t}\n\n\t/**\n\t * Add messages and CLDR data to the build, and replace `@dojo/i18n/cldr/load` with a webpack-specific\n\t * load module.\n\t *\n\t * @param compiler\n\t * The current compiler.\n\t */\n\tapply(compiler: Compiler) {\n\t\tconst { messageBundles, supportedLocales } = this;\n\t\tconst cldrLoadPattern = createFilePathRegExp('/cldr/load($|\\\\.js)');\n\n\t\tcompiler.apply(new NormalModuleReplacementPlugin(cldrLoadPattern, resolveMid('@dojo/i18n/cldr/load/webpack')));\n\n\t\tif (supportedLocales && messageBundles && messageBundles.length) {\n\t\t\tmessageBundles.forEach(bundle => {\n\t\t\t\tconst localePaths = getMessageLocalePaths(bundle, supportedLocales);\n\n\t\t\t\tif (localePaths.length) {\n\t\t\t\t\tcompiler.apply(new InjectModulesPlugin({\n\t\t\t\t\t\tresourcePattern: createFilePathRegExp(bundle),\n\t\t\t\t\t\tmoduleIds: localePaths\n\t\t\t\t\t}));\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tcompiler.plugin('compilation', (compilation, data) => {\n\t\t\tconst astMap = new Map<string, Program>();\n\t\t\tconst containsLoad: string[] = [];\n\t\t\tconst contextMap = new Map<string, { issuer: string; request: string; }[]>();\n\n\t\t\t// An internal set of all fully-resolved module paths, used to determine whether a module path\n\t\t\t// should be added to the issuer map (see below). This exists entirely for performance reasons,\n\t\t\t// specifically to reduce the number of AST objects held in memory. Since modules are parsed only\n\t\t\t// once, this is needed to ensure the issuer map decrementer works correctly.\n\t\t\tconst moduleSet = new Set<string>();\n\n\t\t\t// An internal map of issuer paths to an array of fully-resolved dependency paths.\n\t\t\t// This map exists entirely for performance reasons, specifically to reduce the number of AST\n\t\t\t// objects held in memory.\n\t\t\tconst issuerMap = new Map<string, string[]>();\n\n\t\t\tdata.normalModuleFactory.plugin('before-resolve', (result, callback) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tconst { context, contextInfo, request } = result;\n\t\t\t\tconst issuer = contextInfo && contextInfo.issuer;\n\n\t\t\t\tif (issuer && !isNodeModule(issuer)) {\n\t\t\t\t\tlet requestData = contextMap.get(context);\n\t\t\t\t\tif (!requestData) {\n\t\t\t\t\t\trequestData = [];\n\t\t\t\t\t\tcontextMap.set(context, requestData);\n\t\t\t\t\t}\n\t\t\t\t\trequestData.push({ issuer, request });\n\t\t\t\t}\n\n\t\t\t\treturn callback(null, result);\n\t\t\t});\n\n\t\t\tdata.normalModuleFactory.plugin('after-resolve', (result, callback) => {\n\t\t\t\tif (!result) {\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\n\t\t\t\tconst { context, rawRequest, userRequest } = result;\n\t\t\t\tconst requestData = contextMap.get(context);\n\t\t\t\tif (requestData) {\n\t\t\t\t\tconst issuer = requestData.filter((item: { issuer: string; request: string; }) => item.request === rawRequest)\n\t\t\t\t\t\t.map(item => item.issuer)[0];\n\n\t\t\t\t\tlet issuerData = issuerMap.get(issuer);\n\t\t\t\t\tif (!issuerData) {\n\t\t\t\t\t\tissuerData = [];\n\t\t\t\t\t\tissuerMap.set(issuer, issuerData);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (isJsModule(userRequest)) {\n\t\t\t\t\t\tif (!moduleSet.has(userRequest)) {\n\t\t\t\t\t\t\tissuerData.push(userRequest);\n\t\t\t\t\t\t\tmoduleSet.add(userRequest);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (isCldrLoadModule(userRequest)) {\n\t\t\t\t\t\t\tcontainsLoad.push(issuer);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn callback(null, result);\n\t\t\t});\n\n\t\t\tdata.normalModuleFactory.plugin('parser', (parser) => {\n\t\t\t\tparser.plugin('program', (ast: Program) => {\n\t\t\t\t\tconst { issuer, userRequest } = parser.state.current as any;\n\n\t\t\t\t\tif (userRequest) {\n\t\t\t\t\t\tif (!isNodeModule(userRequest) && isJsModule(userRequest)) {\n\t\t\t\t\t\t\tastMap.set(userRequest, ast);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t/* istanbul ignore next: internal performance enhancement that has no effect on output */\n\t\t\t\t\t\tif (issuer && issuer.userRequest) {\n\t\t\t\t\t\t\tconst issuerData = issuerMap.get(issuer.userRequest) as string[];\n\n\t\t\t\t\t\t\tif (issuerData) {\n\t\t\t\t\t\t\t\tconst index = issuerData.indexOf(userRequest);\n\n\t\t\t\t\t\t\t\tif (index > -1) {\n\t\t\t\t\t\t\t\t\tissuerData.splice(index, 1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (issuerData.length === 0) {\n\t\t\t\t\t\t\t\t\tissuerMap.delete(issuer.userRequest);\n\t\t\t\t\t\t\t\t\tif (containsLoad.indexOf(issuer.userRequest) < 0) {\n\t\t\t\t\t\t\t\t\t\tastMap.delete(issuer.userRequest);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tcompilation.moduleTemplate.plugin('module', (source, module: NormalModule) => {\n\t\t\t\tif (isCldrLoadModule(module.userRequest)) {\n\t\t\t\t\tconst locales = this._getLocales();\n\t\t\t\t\tlet cldrUrls = containsLoad.map((path: string) => getCldrUrls(path, astMap.get(path) as Program))\n\t\t\t\t\t\t.reduce(mergeUnique, [])\n\t\t\t\t\t\t.map((url: string) => {\n\t\t\t\t\t\t\treturn locales.map((locale: string) => url.replace('{locale}', locale));\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.reduce(mergeUnique, []);\n\n\t\t\t\t\tif (this._cldrUrls) {\n\t\t\t\t\t\tcldrUrls = this._cldrUrls = mergeUnique(this._cldrUrls, cldrUrls);\n\t\t\t\t\t}\n\n\t\t\t\t\tconst cldrData = cldrUrls.map((mid: string) => require(mid) as CldrData)\n\t\t\t\t\t\t.reduce((cldrData: CldrData, source: CldrData) => {\n\t\t\t\t\t\t\treturn deepAssign(cldrData, source);\n\t\t\t\t\t\t}, Object.create(null));\n\n\t\t\t\t\treturn new ConcatSource(`var __cldrData__ = ${JSON.stringify(cldrData)}`, '\\n', source);\n\t\t\t\t}\n\n\t\t\t\treturn source;\n\t\t\t});\n\t\t});\n\t}\n\n\t/**\n\t * @protected\n\t * Returns a merged array of supported locales.\n\t */\n\tprotected _getLocales(this: DojoI18nPlugin) {\n\t\tconst { defaultLocale, supportedLocales } = this;\n\t\tconst locales = [ defaultLocale ];\n\t\treturn Array.isArray(supportedLocales) ? locales.concat(supportedLocales) : locales;\n\t}\n}\n"]}