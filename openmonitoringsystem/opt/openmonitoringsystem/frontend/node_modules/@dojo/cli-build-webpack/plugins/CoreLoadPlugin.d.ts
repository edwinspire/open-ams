import Compiler = require('webpack/lib/Compiler');
/**
 * An object of chunk names and regular expressions. If the requested resource matches the RegExp, the chunk name
 * will be used.
 */
export interface DojoLoadChunkNames {
    [key: string]: RegExp;
}
/**
 * Options for the DojoLoadPlugin
 */
export interface DojoLoadPluginOptions {
    basePath?: string;
    chunkNames?: DojoLoadChunkNames;
    detectLazyLoads?: boolean;
    ignoredModules?: string[];
    mapAppModules?: boolean;
}
/**
 * A webpack plugin that forces webpack to ignore `require` passed as a value, and replaces `@dojo/core/load` with a
 * custom function that maps string module IDs to webpack's numerical module IDs.
 */
export default class DojoLoadPlugin {
    private _basePath;
    private _detectLazyLoads;
    private _ignoredModules;
    private _lazyChunkNames;
    private _mapAppModules;
    constructor(options?: DojoLoadPluginOptions);
    /**
     * Set up event listeners on the compiler and compilation. Register any module that uses a contextual require,
     * replace use of `@dojo/core/load` with a custom load module, passing it a map of all dynamically-required
     * module IDs.
     *
     * @param compiler
     * The compiler instance.
     */
    apply(compiler: Compiler): void;
}
