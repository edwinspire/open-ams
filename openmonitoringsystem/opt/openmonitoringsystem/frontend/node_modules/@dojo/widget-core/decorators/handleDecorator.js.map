{"version":3,"file":"handleDecorator.js","sourceRoot":"","sources":["handleDecorator.ts"],"names":[],"mappings":";;;;;;;;;;;IAAA;;;;;OAKG;IACH,yBAAgC,OAAoD;QACnF,MAAM,CAAC,UAAU,MAAW,EAAE,WAAoB,EAAE,UAA+B;YAClF,EAAE,CAAC,CAAC,OAAO,MAAM,KAAK,UAAU,CAAC,CAAC,CAAC;gBAClC,OAAO,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;YACtC,CAAC;YACD,IAAI,CAAC,CAAC;gBACL,OAAO,CAAC,MAAM,EAAE,WAAW,CAAC,CAAC;YAC9B,CAAC;QACF,CAAC,CAAC;IACH,CAAC;IATD,0CASC;IAED,kBAAe,eAAe,CAAC","sourcesContent":["/**\n * Generic decorator handler to take care of whether or not the decorator was called at the class level\n * or the method level.\n *\n * @param handler\n */\nexport function handleDecorator(handler: (target: any, propertyKey?: string) => void) {\n\treturn function (target: any, propertyKey?: string, descriptor?: PropertyDescriptor) {\n\t\tif (typeof target === 'function') {\n\t\t\thandler(target.prototype, undefined);\n\t\t}\n\t\telse {\n\t\t\thandler(target, propertyKey);\n\t\t}\n\t};\n}\n\nexport default handleDecorator;\n"]}