{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":"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","sourcesContent":["import { Command, Helper, OptionsHelper } from '@dojo/interfaces/cli';\nimport { underline } from 'chalk';\nimport * as path from 'path';\nimport runTests, { TestOptions } from './runTests';\nimport javaCheck from './javaCheck';\n\nconst pkgDir = require('pkg-dir');\n\nconst CLI_BUILD_PACKAGE = '@dojo/cli-build-webpack';\n\nexport interface TestArgs {\n\tall: boolean;\n\tbrowser: boolean;\n\tconfig?: string;\n\tcoverage?: boolean;\n\tfunctional: boolean;\n\treporters?: string;\n\ttestingKey?: string;\n\tsecret?: string;\n\tuserName?: string;\n\tunit: boolean;\n\tverbose: boolean;\n\tinternConfig: string;\n\tnode: boolean;\n\tfilter: string;\n}\n\nfunction buildNpmDependencies(): any {\n\ttry {\n\t\tconst packagePath = pkgDir.sync(__dirname);\n\t\tconst packageJsonFilePath = path.join(packagePath, 'package.json');\n\t\tconst packageJson = <any> require(packageJsonFilePath);\n\n\t\treturn packageJson.dependencies;\n\t}\n\tcatch (e) {\n\t\tthrow new Error('Failed reading dependencies from package.json - ' + e.message);\n\t}\n}\n\nfunction transformTestArgs(args: TestArgs): TestOptions {\n\tlet nodeUnit = true;\n\tlet remoteUnit = false;\n\tlet remoteFunctional = false;\n\n\tif (args.all) {\n\t\tnodeUnit = remoteUnit = remoteFunctional = true;\n\t}\n\n\tif (args.unit) {\n\t\tremoteUnit = true;\n\t}\n\n\tif (args.functional) {\n\t\tnodeUnit = remoteUnit = false;\n\t\tremoteFunctional = true;\n\t}\n\n\treturn {\n\t\tchildConfig: args.config,\n\t\tinternConfig: args.internConfig,\n\t\treporters: args.reporters,\n\t\tuserName: args.userName,\n\t\tsecret: args.secret,\n\t\ttestingKey: args.testingKey,\n\t\tverbose: args.verbose,\n\t\tcoverage: args.coverage,\n\t\tfilter: args.filter,\n\t\tnodeUnit,\n\t\tremoteUnit,\n\t\tremoteFunctional\n\t};\n}\n\nfunction printBrowserLink(args: TestArgs) {\n\tconst browserArgs = [];\n\n\tif (args.filter) {\n\t\tbrowserArgs.push('grep=' + encodeURIComponent(args.filter));\n\t}\n\n\tconsole.log('\\n If the project directory is hosted on a local server, unit tests can also be run in browser by navigating to ' + underline(`http://localhost:<port>/node_modules/intern/?config=node_modules/@dojo/cli-test-intern/intern/intern.json${browserArgs.length ? `&${browserArgs.join('&')}` : ''}`));\n}\n\nconst command: Command<TestArgs> = {\n\tdescription: 'this command will implicitly build your application and then run tests against that build',\n\tregister(options: OptionsHelper) {\n\t\toptions('a', {\n\t\t\talias: 'all',\n\t\t\tdescribe: 'Runs unit tests and functional tests. Unit tests are run via node and the local tunnel. Functional tests are run via the local tunnel',\n\t\t\tdefault: false\n\t\t});\n\n\t\toptions('c', {\n\t\t\talias: 'config',\n\t\t\tdescribe: `Specifies what configuration to test with: 'local'(default), 'browserstack', 'testingbot', or 'saucelabs'.`,\n\t\t\ttype: 'string'\n\t\t});\n\n\t\toptions('cov', {\n\t\t\talias: 'coverage',\n\t\t\tdescribe: `If specified, additional coverage reports will be written.  The will be output to the path specified in argument '-o'/'--output'.`\n\t\t});\n\n\t\toptions('f', {\n\t\t\talias: 'functional',\n\t\t\tdescribe: 'Runs only functional tests. Tests are run via the local tunnel',\n\t\t\tdefault: false\n\t\t});\n\n\t\toptions('k', {\n\t\t\talias: 'testingKey',\n\t\t\tdescribe: 'API key for testingbot or accesskey for saucelabs or browserstack',\n\t\t\ttype: 'string'\n\t\t});\n\n\t\toptions('usr', {\n\t\t\talias: 'userName',\n\t\t\tdescribe: 'User name for testing platform',\n\t\t\ttype: 'string'\n\t\t});\n\n\t\toptions('o', {\n\t\t\talias: 'output',\n\t\t\tdescribe: `The path to output any test output to (e.g. coverage information). Defaults to './output/tests'`,\n\t\t\ttype: 'string',\n\t\t\tdefault: './output/tests'\n\t\t});\n\n\t\toptions('r', {\n\t\t\talias: 'reporters',\n\t\t\tdescribe: 'Comma separated list of reporters to use, defaults to Console',\n\t\t\ttype: 'string'\n\t\t});\n\n\t\toptions('s', {\n\t\t\talias: 'secret',\n\t\t\tdescribe: 'API secret for testingbot',\n\t\t\ttype: 'string'\n\t\t});\n\n\t\toptions('u', {\n\t\t\talias: 'unit',\n\t\t\tdescribe: 'Runs unit tests via node and the local tunnel',\n\t\t\tdefault: false\n\t\t});\n\n\t\toptions('v', {\n\t\t\talias: 'verbose',\n\t\t\tdescribe: 'Produce diagnostic messages to the console.',\n\t\t\tdefault: false\n\t\t});\n\n\t\toptions('n', {\n\t\t\talias: 'node',\n\t\t\tdescribe: 'Run unit tests via node',\n\t\t\ttype: 'boolean',\n\t\t\tdefault: true\n\t\t});\n\n\t\toptions('filter', {\n\t\t\tdescribe: 'Run only tests whose IDs match a regular expression',\n\t\t\ttype: 'string'\n\t\t});\n\t},\n\trun(helper: Helper, args: TestArgs) {\n\t\tfunction unhandledRejection(reason: any) {\n\t\t\tconsole.log('Unhandled Promise Rejection: ');\n\t\t\tconsole.log(reason);\n\t\t}\n\n\t\tprocess.on('unhandledRejection', unhandledRejection);\n\n\t\treturn javaCheck(args).then((javaCheckPassed) => {\n\t\t\tif (javaCheckPassed) {\n\t\t\t\treturn new Promise<void>((resolve, reject) => {\n\t\t\t\t\tif (!helper.command.exists('build')) {\n\t\t\t\t\t\treject(Error(`Required command: 'build', does not exist. Have you run 'npm install ${CLI_BUILD_PACKAGE}'?`));\n\t\t\t\t\t}\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst projectName = require(path.join(process.cwd(), './package.json')).name;\n\t\t\t\t\t\tconsole.log('\\n' + underline(`building \"${projectName}\"...`));\n\t\t\t\t\t}\n\t\t\t\t\tcatch (e) {\n\t\t\t\t\t\tconsole.log('\\n' + underline(`building project...`));\n\t\t\t\t\t}\n\t\t\t\t\tconst result = helper.command.run('build', '',\n\t\t\t\t\t\t<any> { withTests: true, disableLazyWidgetDetection: true });\n\t\t\t\t\tresult.then(\n\t\t\t\t\t\t() => {\n\t\t\t\t\t\t\trunTests(transformTestArgs(args))\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tprocess.removeListener('unhandledRejection', unhandledRejection);\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then(() => {\n\t\t\t\t\t\t\t\t\tprintBrowserLink(args);\n\t\t\t\t\t\t\t\t}, (err) => {\n\t\t\t\t\t\t\t\t\tprintBrowserLink(args);\n\t\t\t\t\t\t\t\t\tthrow err;\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t.then(resolve, reject);\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\treturn Promise.reject(Error(underline('Error! Java VM could not be found.') +\n\t\t\t\t\t'\\nA Java VM needs to be installed and available from the command line to allow the ' +\n\t\t\t\t\tunderline('dojo test') + ' command to run tests in a browser locally or remotely.'));\n\t\t\t}\n\t\t});\n\t},\n\teject() {\n\t\treturn {\n\t\t\tnpm: {\n\t\t\t\tdevDependencies: {\n\t\t\t\t\t...buildNpmDependencies()\n\t\t\t\t}\n\t\t\t},\n\t\t\tcopy: {\n\t\t\t\tpath: __dirname + '/intern',\n\t\t\t\tfiles: [\n\t\t\t\t\t'./intern.json'\n\t\t\t\t]\n\t\t\t}\n\t\t};\n\t}\n};\nexport default command;\n"]}