{"version":3,"file":"runTests.js","sourceRoot":"","sources":["runTests.ts"],"names":[],"mappings":"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","sourcesContent":["import chalk from 'chalk';\nimport * as path from 'path';\nimport { ensureDirSync } from 'fs-extra';\nimport dirname, { projectName } from './dirname';\n\nconst cs: any = require('cross-spawn');\nconst pkgDir: any = require('pkg-dir');\nconst packagePath = pkgDir.sync(dirname);\n\nlet logger = console.log;\n\nconst reporterDir = 'output/coverage';\nconst reporterConfigurations: { [index: string]: any } = {\n\tbenchmark: {\n\t\tdirectory: `${reporterDir}/benchmark`,\n\t\tfilename: 'coverage.xml'\n\t},\n\tcobertura: {\n\t\tdirectory: `${reporterDir}/cobertura`,\n\t\tfilename: 'coverage.xml'\n\t},\n\thtmlcoverage: {\n\t\tdirectory: `${reporterDir}/html`\n\t},\n\tjsoncoverage: {\n\t\tdirectory: `${reporterDir}/json`\n\t},\n\tjunit: {\n\t\tfilename: `${reporterDir}/junit/coverage.xml`\n\t},\n\tlcov: {\n\t\tdirectory: `${reporterDir}/lcov`,\n\t\tfilename: 'coverage.lcov'\n\t},\n\tpretty: 'pretty',\n\trunner: 'runner',\n\tsimple: 'simple',\n\tteamcity: 'teamcity'\n};\n\nexport interface TestOptions {\n\tnodeUnit?: boolean;\n\tremoteUnit?: boolean;\n\tremoteFunctional?: boolean;\n\tchildConfig?: string;\n\tinternConfig?: string;\n\treporters?: string;\n\texternals?: {\n\t\toutputPath?: string;\n\t\tdependencies?: Array<\n\t\t\t| string\n\t\t\t| {\n\t\t\t\t\ttype?: string;\n\t\t\t\t\tfrom: string;\n\t\t\t\t\tto?: string;\n\t\t\t\t\tname?: string;\n\t\t\t\t\tinject?: boolean | string | string[];\n\t\t\t  }\n\t\t>;\n\t};\n\tloaderPlugins?: string[];\n\tuserName?: string;\n\tsecret?: string;\n\ttestingKey?: string;\n\tverbose?: boolean;\n\tfilter?: string;\n}\n\nexport function parseArguments(testArgs: TestOptions) {\n\tconst {\n\t\tnodeUnit,\n\t\tremoteUnit,\n\t\tremoteFunctional,\n\t\tchildConfig,\n\t\tinternConfig,\n\t\texternals,\n\t\treporters,\n\t\ttestingKey,\n\t\tuserName,\n\t\tfilter\n\t} = testArgs;\n\n\tconst configArg = childConfig ? `@${childConfig}` : '';\n\tconst configPath = path.relative(process.cwd(), path.join(packagePath, 'intern', internConfig + configArg));\n\tconst args = [`config=${configPath}`];\n\n\t// by default, in the intern config, all tests are run. we need to\n\t// disable tests that we dont want to run\n\tif (!remoteUnit && !nodeUnit) {\n\t\targs.push('suites=');\n\t}\n\n\tif (externals) {\n\t\tif (!childConfig) {\n\t\t\tthrow new Error(\n\t\t\t\t'Dojo JIT does not currently support externals, ' +\n\t\t\t\t\t'please specify a config option to run tests against the built code'\n\t\t\t);\n\t\t}\n\t\targs.push(\n\t\t\t`loader=${JSON.stringify({\n\t\t\t\tscript: 'node_modules/@dojo/cli-test-intern/loaders/externals.js',\n\t\t\t\toptions: externals\n\t\t\t})}`\n\t\t);\n\t}\n\n\tif (!remoteUnit && !remoteFunctional) {\n\t\targs.push('environments=');\n\t} else if (!remoteFunctional) {\n\t\targs.push('functionalSuites=');\n\t}\n\n\tif (filter) {\n\t\targs.push('grep=' + filter);\n\t}\n\n\tif (reporters) {\n\t\tlet includeRunner = true;\n\t\tconst formattedReporters = reporters\n\t\t\t.split(',')\n\t\t\t.filter((reporter) => reporterConfigurations[reporter.toLowerCase()] !== undefined)\n\t\t\t.map((reporter) => {\n\t\t\t\tconst config = reporterConfigurations[reporter.toLowerCase()];\n\t\t\t\tif (typeof config === 'string') {\n\t\t\t\t\tincludeRunner = false;\n\t\t\t\t\treturn `reporters=${config}`;\n\t\t\t\t}\n\t\t\t\tlet reporterConfig = `reporters={ \"name\": \"${reporter}\", \"options\": `;\n\t\t\t\tlet options = '{}';\n\t\t\t\tif (config.filename && config.directory) {\n\t\t\t\t\tensureDirSync(config.directory);\n\t\t\t\t\toptions = `{ \"directory\": \"${config.directory}\", \"filename\": \"${config.filename}\" }`;\n\t\t\t\t} else if (config.directory) {\n\t\t\t\t\tensureDirSync(config.directory);\n\t\t\t\t\toptions = `{ \"directory\": \"${config.directory}\" }`;\n\t\t\t\t} else {\n\t\t\t\t\tconst directory = path.parse(config.filename).dir;\n\t\t\t\t\tensureDirSync(directory);\n\t\t\t\t\toptions = `{ \"filename\": \"${config.filename}\" }`;\n\t\t\t\t}\n\t\t\t\treturn `${reporterConfig}${options} }`;\n\t\t\t});\n\t\tif (formattedReporters.length) {\n\t\t\tif (includeRunner) {\n\t\t\t\targs.push('reporters=runner');\n\t\t\t}\n\t\t\targs.push(...formattedReporters);\n\t\t}\n\t}\n\n\tif (userName && testingKey) {\n\t\targs.push(`tunnelOptions={ \"username\": \"${userName}\", \"accessKey\": \"${testingKey}\" }`);\n\t}\n\n\tconst capabilitiesBase = `capabilities={ \"name\": \"${projectName()}\", \"project\": \"${projectName()}\"`;\n\tif (childConfig === 'browserstack') {\n\t\targs.push(capabilitiesBase + ', \"fixSessionCapabilities\": \"false\", \"browserstack.debug\": \"false\" }');\n\t} else if (childConfig === 'saucelabs') {\n\t\targs.push(capabilitiesBase + ', \"fixSessionCapabilities\": \"false\" }');\n\t} else {\n\t\targs.push(capabilitiesBase + ' }');\n\t}\n\n\treturn [...args];\n}\n\nexport function setLogger(value: (message: any, ...optionalParams: any[]) => void) {\n\tlogger = value;\n}\n\nexport default async function(testArgs: TestOptions) {\n\tconst testRunPromise = new Promise((resolve, reject) => {\n\t\tconst internPath = path.resolve('node_modules/.bin/intern');\n\t\tconst internArgs = parseArguments(testArgs);\n\n\t\tfunction succeed() {\n\t\t\tlogger('\\n  ' + chalk.green('testing') + ' completed successfully');\n\t\t\tresolve();\n\t\t}\n\n\t\tfunction fail(err: string) {\n\t\t\tlogger('\\n  ' + chalk.red('testing') + ' failed');\n\t\t\treject({\n\t\t\t\tmessage: err,\n\t\t\t\texitCode: 1\n\t\t\t});\n\t\t}\n\n\t\tlogger('\\n' + chalk.underline(`testing \"${projectName()}\"...`) + `\\n`);\n\n\t\tif (testArgs.verbose) {\n\t\t\tlogger(`${chalk.blue.bold('  Intern config:')}`);\n\t\t\tlogger('    ' + chalk.blue(String(cs.sync(internPath, ['showConfig', ...internArgs]).stdout)));\n\t\t\tlogger(`${chalk.blue.bold('  Parsed arguments for intern:')}`);\n\t\t\tlogger('    ' + chalk.blue(String(internArgs.join('\\n    '))));\n\t\t}\n\n\t\tcs.spawn(internPath, internArgs, { stdio: 'inherit' })\n\t\t\t.on('close', (exitCode: number) => {\n\t\t\t\tif (exitCode) {\n\t\t\t\t\tfail('Tests did not complete successfully');\n\t\t\t\t} else {\n\t\t\t\t\tsucceed();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.on('error', (err: Error) => {\n\t\t\t\tfail(err.message);\n\t\t\t});\n\t});\n\n\treturn testRunPromise;\n}\n"]}