"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const { exec } = require('child_process');
function requiresTunnel(args) {
    const { all, functional, config } = args;
    return all || functional || (config != null && config !== 'local');
}
function containsVersionString(str) {
    return str != null && str.indexOf('java version') >= 0;
}
function default_1(args) {
    return new Promise((resolve) => {
        if (!requiresTunnel(args)) {
            resolve(true);
        }
        else {
            exec('java -version', (err, stdout, stderr) => {
                if (!err && (containsVersionString(stderr) || containsVersionString(stdout))) {
                    resolve(true);
                }
                else {
                    // Dereference the environment variables here so the exec script does not have to use
                    // an operating system specific way to dereference an environment variable.
                    const javaHome = process.env.JAVA_HOME || process.env.JDK_HOME || process.env.JRE_HOME;
                    if (javaHome) {
                        exec(`"${javaHome}/bin/java" -version`, (err, stdout, stderr) => {
                            resolve(!err && (containsVersionString(stderr) || containsVersionString(stdout)));
                        });
                    }
                    else {
                        resolve(false);
                    }
                }
            });
        }
    });
}
exports.default = default_1;
//# sourceMappingURL=javaCheck.js.map