{"version":3,"file":"dojo2.js","sourceRoot":"","sources":["../../../src/loaders/dojo2.ts"],"names":[],"mappings":";AAOA,MAAM,CAAC,cAAc,CAAC,UAAA,OAAO;IAC5B,IAAM,SAAS,GAAQ,OAAO,MAAM,KAAK,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;IACvE,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,qCAAqC,CAAC,CAAC,IAAI,CAAC;QACpE,IAAM,OAAO,GAA2B,SAAS,CAAC,OAAO,CAAC;QAC1D,MAAM,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAElC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC;QAC5D,MAAM,CAAC,GAAG,CAAC,0BAA0B,EAAE,OAAO,CAAC,CAAC;QAChD,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAExB,MAAM,CAAC,UAAC,OAAiB;YACxB,IAAI,MAA0B,CAAC;YAE/B,MAAM,CAAC,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBAClC,MAAM,GAAG,OAAO,CAAC,EAAE,CAAC,OAAO,EAAE,UAAC,KAAY;oBACzC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC;oBAC5B,MAAM,CAAC,KAAK,CAAC,CAAC;gBACf,CAAC,CAAC,CAAC;gBAEH,MAAM,CAAC,GAAG,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;gBACxC,OAAO,CAAC,OAAO,EAAE;oBAChB,OAAO,EAAE,CAAC;gBACX,CAAC,CAAC,CAAC;YACJ,CAAC,CAAC,CAAC,IAAI,CACN;gBACC,MAAM,CAAC,MAAM,EAAE,CAAC;YACjB,CAAC,EACD,UAAA,KAAK;gBACJ,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;gBAC1B,MAAM,KAAK,CAAC;YACb,CAAC,CACD,CAAC;QACH,CAAC,CAAC;IACH,CAAC,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC","sourcesContent":["/// <reference types=\"@dojo/loader\"/>\n\n/**\n * A loader script for setting up the Dojo loader.\n *\n * Note that loader scripts must be simple scripts, not modules.\n */\nintern.registerLoader(options => {\n\tconst globalObj: any = typeof window !== 'undefined' ? window : global;\n\treturn intern.loadScript('node_modules/@dojo/loader/loader.js').then(() => {\n\t\tconst require: DojoLoader.RootRequire = globalObj.require;\n\t\tintern.log('Using Dojo 2 loader');\n\n\t\toptions.baseUrl = options.baseUrl || intern.config.basePath;\n\t\tintern.log('Configuring loader with:', options);\n\t\trequire.config(options);\n\n\t\treturn (modules: string[]) => {\n\t\t\tlet handle: { remove(): void };\n\n\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\thandle = require.on('error', (error: Error) => {\n\t\t\t\t\tintern.emit('error', error);\n\t\t\t\t\treject(error);\n\t\t\t\t});\n\n\t\t\t\tintern.log('Loading modules:', modules);\n\t\t\t\trequire(modules, () => {\n\t\t\t\t\tresolve();\n\t\t\t\t});\n\t\t\t}).then<void>(\n\t\t\t\t() => {\n\t\t\t\t\thandle.remove();\n\t\t\t\t},\n\t\t\t\terror => {\n\t\t\t\t\thandle && handle.remove();\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t);\n\t\t};\n\t});\n});\n"]}