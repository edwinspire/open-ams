{"version":3,"file":"WebSocket.js","sourceRoot":"","sources":["../../../../src/lib/channels/WebSocket.ts"],"names":[],"mappings":"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","sourcesContent":["import Task from '@dojo/core/async/Task';\nimport global from '@dojo/shim/global';\n\nimport BaseChannel, { ChannelOptions, Message } from './Base';\nimport { parseUrl } from '../browser/util';\n\nexport default class WebSocketChannel extends BaseChannel {\n\t/** Time to wait for response before rejecting a send */\n\ttimeout: number;\n\n\tprotected _socket: WebSocket;\n\tprotected _sendQueue: {\n\t\t[key: string]:\n\t\t\t| { resolve: (value: any) => void; reject: (error: Error) => void }\n\t\t\t| undefined;\n\t};\n\tprotected _ready: Task<any>;\n\tprotected _sequence: number;\n\n\tconstructor(options: ChannelOptions) {\n\t\tsuper(options);\n\n\t\tif (this.timeout == null) {\n\t\t\tthis.timeout = 10000;\n\t\t}\n\n\t\tif (!options.port) {\n\t\t\tthrow new Error('A port is required for a WebSocket channel');\n\t\t}\n\n\t\tconst url = parseUrl(options.url);\n\t\tconst host = url!.hostname;\n\t\tconst protocol = url!.protocol === 'https' ? 'wss' : 'ws';\n\t\tthis._socket = new global.WebSocket(\n\t\t\t`${protocol}://${host}:${options.port}`\n\t\t);\n\n\t\tthis._ready = new Task((resolve, reject) => {\n\t\t\tthis._socket.addEventListener('open', resolve);\n\t\t\tthis._socket.addEventListener('error', reject);\n\t\t});\n\n\t\tthis._socket.addEventListener('message', event => {\n\t\t\tthis._handleMessage(JSON.parse(event.data));\n\t\t});\n\n\t\tthis._socket.addEventListener('error', _event => {\n\t\t\tthis._handleError(new Error('WebSocket error'));\n\t\t});\n\n\t\tthis._sendQueue = Object.create(null);\n\t\tthis._sequence = 1;\n\t}\n\n\tprotected _sendData(name: string, data: any) {\n\t\treturn this._ready.then(\n\t\t\t() =>\n\t\t\t\tnew Task<void>((resolve, reject) => {\n\t\t\t\t\tconst id = String(this._sequence++);\n\t\t\t\t\tconst sessionId = this.sessionId;\n\t\t\t\t\tconst message: Message = { id, sessionId, name, data };\n\n\t\t\t\t\tthis._socket.send(JSON.stringify(message));\n\n\t\t\t\t\tconst timer = setTimeout(() => {\n\t\t\t\t\t\treject(new Error('Send timed out'));\n\t\t\t\t\t}, this.timeout);\n\n\t\t\t\t\tthis._sendQueue[id] = {\n\t\t\t\t\t\tresolve(data: any) {\n\t\t\t\t\t\t\tclearTimeout(timer);\n\t\t\t\t\t\t\tresolve(data);\n\t\t\t\t\t\t},\n\t\t\t\t\t\treject(error: Error) {\n\t\t\t\t\t\t\treject(error);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t);\n\t}\n\n\tprotected _handleMessage(message: any) {\n\t\tconst id = message.id;\n\t\tthis._sendQueue[id]!.resolve(message);\n\t\tthis._sendQueue[id] = undefined;\n\t}\n\n\tprotected _handleError(error: Error) {\n\t\t// Make the _ready task a reject to reject future _sendData calls\n\t\tthis._ready = Task.reject(error);\n\n\t\t// Reject any open sends\n\t\tObject.keys(this._sendQueue)\n\t\t\t.filter(id => this._sendQueue[id] != null)\n\t\t\t.forEach(id => {\n\t\t\t\tthis._sendQueue[id]!.reject(error);\n\t\t\t\tthis._sendQueue[id] = undefined;\n\t\t\t});\n\t}\n}\n"]}