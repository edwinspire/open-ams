{"version":3,"file":"ProxiedSession.js","sourceRoot":"","sources":["../../../src/lib/ProxiedSession.ts"],"names":[],"mappings":"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","sourcesContent":["import Session from '@theintern/leadfoot/Session';\nimport Task from '@dojo/core/async/Task';\n\nimport Node from './executors/Node';\n\n/* istanbul ignore next: client-side code */\nfunction getCoverageData(coverageVariable: string) {\n\tlet coverageData = (function(this: any) {\n\t\treturn this;\n\t})()[coverageVariable];\n\treturn coverageData && JSON.stringify(coverageData);\n}\n\n/**\n * A ProxiedSession object represents a WebDriver session that interacts with\n * the Intern instrumenting server. It collects code instrumentation data from\n * pages and converts local filesystem paths into URLs for use with\n * `leadfoot/Session#get`.\n */\nexport default class ProxiedSession extends Session {\n\t/**\n\t * The base URL for relative URLs.\n\t */\n\tbaseUrl = '';\n\n\t/**\n\t * The name of the global variable used to store coverage data.\n\t */\n\tcoverageVariable = '';\n\n\t/**\n\t * The Executor hosting this session.\n\t */\n\texecutor: Node;\n\n\tprivate _heartbeatIntervalHandle: { remove: Function };\n\n\tget coverageEnabled() {\n\t\treturn this.executor.config.coverage !== false;\n\t}\n\n\t/**\n\t * Navigates the browser to a new URL like `leadfoot/Session#get`, but\n\t * retrieves any code coverage data recorded by the browser prior to\n\t * navigation.\n\t */\n\tget(url: string) {\n\t\t// At least two letters are required in the scheme to avoid Windows\n\t\t// paths being misinterpreted as URLs\n\t\tif (!/^[A-Za-z][A-Za-z0-9+.-]+:/.test(url)) {\n\t\t\tif (url.indexOf(this.executor.config.basePath) === 0) {\n\t\t\t\turl = url.slice(this.executor.config.basePath.length);\n\t\t\t}\n\n\t\t\turl = this.baseUrl + url;\n\t\t}\n\n\t\tif (!this.coverageEnabled) {\n\t\t\treturn super.get(url);\n\t\t}\n\n\t\treturn this._getCoverage().finally(() => {\n\t\t\treturn super.get(url);\n\t\t});\n\t}\n\n\t/**\n\t * Quits the browser like `leadfoot/Session#quit`, but retrieves any code\n\t * coverage data recorded by the browser prior to quitting.\n\t */\n\tquit() {\n\t\tthis.executor.log('Quitting', this.sessionId);\n\t\treturn this.setHeartbeatInterval(0)\n\t\t\t.then(() => {\n\t\t\t\tif (this.coverageEnabled) {\n\t\t\t\t\treturn this._getCoverage();\n\t\t\t\t}\n\t\t\t})\n\t\t\t.finally(() => super.quit());\n\t}\n\n\t/**\n\t * Sets up a timer to send no-op commands to the remote server on an\n\t * interval to prevent long-running unit tests from causing the session to\n\t * time out.\n\t *\n\t * @param delay Amount of time to wait between heartbeats. Setting the delay\n\t * to 0 will disable heartbeats.\n\t */\n\tsetHeartbeatInterval(delay: number) {\n\t\tthis._heartbeatIntervalHandle && this._heartbeatIntervalHandle.remove();\n\n\t\tif (delay) {\n\t\t\t// A heartbeat command is sent immediately when the interval is set\n\t\t\t// because it is unknown how long ago the last command was sent and\n\t\t\t// it simplifies the implementation by requiring only one call to\n\t\t\t// `setTimeout`\n\t\t\tconst sendHeartbeat = () => {\n\t\t\t\tlet timeoutId: NodeJS.Timer;\n\t\t\t\tlet cancelled = false;\n\t\t\t\tlet startTime = Date.now();\n\n\t\t\t\tthis._heartbeatIntervalHandle = {\n\t\t\t\t\tremove: function() {\n\t\t\t\t\t\tcancelled = true;\n\t\t\t\t\t\tclearTimeout(timeoutId);\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.getCurrentUrl()\n\t\t\t\t\t.then(() => {\n\t\t\t\t\t\tif (!cancelled) {\n\t\t\t\t\t\t\ttimeoutId = global.setTimeout(\n\t\t\t\t\t\t\t\tsendHeartbeat,\n\t\t\t\t\t\t\t\tdelay - (Date.now() - startTime)\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.catch(error => this.executor.emit('error', error));\n\t\t\t};\n\n\t\t\tsendHeartbeat();\n\t\t}\n\n\t\treturn Task.resolve();\n\t}\n\n\tprotected _getCoverage() {\n\t\tlet shouldGetPromise: Task<boolean>;\n\n\t\t// At least Safari 9 will not inject user scripts for non http/https\n\t\t// URLs, so we can't get coverage data.\n\t\tif (this.capabilities.brokenExecuteForNonHttpUrl) {\n\t\t\tshouldGetPromise = Task.resolve(\n\t\t\t\tthis.getCurrentUrl().then(url => /^https?:/i.test(url))\n\t\t\t);\n\t\t} else {\n\t\t\tshouldGetPromise = Task.resolve(true);\n\t\t}\n\n\t\treturn shouldGetPromise.then(shouldGetCoverage => {\n\t\t\tif (shouldGetCoverage) {\n\t\t\t\treturn this.execute<string>(getCoverageData, [\n\t\t\t\t\tthis.coverageVariable\n\t\t\t\t]).then(coverageData => {\n\t\t\t\t\t// Emit coverage retrieved from a remote session\n\t\t\t\t\tthis.executor.log('Got coverage data for', this.sessionId);\n\t\t\t\t\tif (coverageData) {\n\t\t\t\t\t\treturn this.executor.emit('coverage', {\n\t\t\t\t\t\t\tsessionId: this.sessionId,\n\t\t\t\t\t\t\tsource: 'remote session',\n\t\t\t\t\t\t\tcoverage: JSON.parse(coverageData)\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t}\n}\n"]}