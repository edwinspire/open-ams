{"version":3,"file":"ErrorFormatter.js","sourceRoot":"","sources":["../../../../src/lib/common/ErrorFormatter.ts"],"names":[],"mappings":"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","sourcesContent":["import { diffJson, IDiffResult } from 'diff';\n\nimport { InternError } from '../types';\nimport { Executor } from '../executors/Executor';\n\nexport default class ErrorFormatter implements ErrorFormatterProperties {\n\treadonly executor: Executor;\n\n\tconstructor(executor: Executor) {\n\t\tthis.executor = executor;\n\t}\n\n\t/**\n\t * Generates a full error message from a plain Error object, avoiding\n\t * duplicate error messages that might be caused by different opinions on\n\t * what a stack trace should look like.\n\t *\n\t * @param error An object describing the error.\n\t * @returns A string message describing the error.\n\t */\n\tformat(\n\t\terror: string | Error | InternError,\n\t\toptions?: ErrorFormatOptions\n\t): string {\n\t\toptions = options || {};\n\t\tlet message: string;\n\n\t\tif (typeof error !== 'string' && (error.message || error.stack)) {\n\t\t\tmessage =\n\t\t\t\t(error.name || 'Error') +\n\t\t\t\t': ' +\n\t\t\t\t(error.message || 'Unknown error');\n\t\t\tlet stack = error.stack;\n\n\t\t\tif (stack) {\n\t\t\t\t// V8 puts the original error at the top of the stack too; avoid\n\t\t\t\t// redundant output that may cause confusion about how many\n\t\t\t\t// times an assertion was actually called\n\t\t\t\tif (stack.indexOf(message) === 0) {\n\t\t\t\t\tstack = stack.slice(message.length);\n\t\t\t\t} else if (stack.indexOf(error.message) === 0) {\n\t\t\t\t\tstack = stack.slice(String(error.message).length);\n\t\t\t\t} else if (stack.indexOf('Error\\n') === 0) {\n\t\t\t\t\t// The stack for errors in Internet Explorer may start with\n\t\t\t\t\t// 'Error'\n\t\t\t\t\tstack = stack.slice('Error'.length);\n\t\t\t\t}\n\n\t\t\t\tstack = this._normalizeStackTrace(stack);\n\t\t\t}\n\n\t\t\tconst anyError: any = error;\n\n\t\t\t// Assertion errors may have showDiff, actual, and expected properties\n\t\t\tif (\n\t\t\t\tanyError.showDiff &&\n\t\t\t\ttypeof anyError.actual === 'object' &&\n\t\t\t\ttypeof anyError.expected === 'object'\n\t\t\t) {\n\t\t\t\tconst diff = this._createDiff(\n\t\t\t\t\tanyError.actual,\n\t\t\t\t\tanyError.expected\n\t\t\t\t);\n\t\t\t\tif (diff) {\n\t\t\t\t\tmessage += '\\n\\n' + diff + '\\n';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (stack && /\\S/.test(stack)) {\n\t\t\t\tmessage += stack;\n\t\t\t} else if (anyError.fileName) {\n\t\t\t\t// FireFox errors may have fileName, lineNumber, and\n\t\t\t\t// columnNumber properties\n\t\t\t\tmessage += '\\n  at ' + anyError.fileName;\n\t\t\t\tif (anyError.lineNumber != null) {\n\t\t\t\t\tmessage += ':' + anyError.lineNumber;\n\n\t\t\t\t\tif (anyError.columnNumber != null) {\n\t\t\t\t\t\tmessage += ':' + anyError.columnNumber;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tmessage += '\\nNo stack';\n\t\t\t} else {\n\t\t\t\tmessage += '\\nNo stack or location';\n\t\t\t}\n\t\t} else {\n\t\t\tmessage = String(error);\n\t\t}\n\n\t\tconst space = options.space;\n\t\tif (space != null) {\n\t\t\tconst lines = message.split('\\n');\n\t\t\tmessage = [lines[0]]\n\t\t\t\t.concat(\n\t\t\t\t\tlines.slice(1).map(line => {\n\t\t\t\t\t\treturn space + line;\n\t\t\t\t\t})\n\t\t\t\t)\n\t\t\t\t.join('\\n');\n\t\t}\n\n\t\treturn message;\n\t}\n\n\tprotected _getSource(tracepath: string): string {\n\t\tif (tracepath === '<anonymous>') {\n\t\t\treturn 'anonymous';\n\t\t}\n\t\treturn tracepath;\n\t}\n\n\t/**\n\t * Creates a unified diff to explain the difference between two objects.\n\t *\n\t * @param actual The actual result.\n\t * @param expected The expected result.\n\t * @returns A unified diff formatted string representing the difference\n\t * between the two objects.\n\t */\n\tprotected _createDiff(actual: Object, expected: Object): string {\n\t\t// TODO: Remove the casts when the diffJson typings are updated (the\n\t\t// current typings are missing the options argument).\n\t\tlet diff = <IDiffResult[]>(<any>diffJson)(actual, expected, {\n\t\t\tundefinedReplacement: null\n\t\t});\n\t\tif (diff.length === 1 && !diff[0].added && !diff[0].removed) {\n\t\t\treturn '';\n\t\t}\n\n\t\treturn diff.reduce((d, { value, added, removed }) => {\n\t\t\tconst lastChar = value[value.length - 1] === '\\n' ? '\\n' : '';\n\t\t\tconst lines = value.split('\\n');\n\t\t\tif (lastChar === '\\n') {\n\t\t\t\tlines.pop();\n\t\t\t}\n\t\t\tlet prefix = '';\n\t\t\tif (d.length > 0 && d[d.length - 1] !== '\\n') {\n\t\t\t\tprefix = '\\n';\n\t\t\t}\n\t\t\tconst char = added ? 'E' : removed ? 'A' : ' ';\n\t\t\treturn (\n\t\t\t\td + `${prefix}${char} ` + lines.join(`\\n${char} `) + lastChar\n\t\t\t);\n\t\t}, '');\n\t}\n\n\t/**\n\t * Return a trace line in a standardized format.\n\t */\n\tprotected _formatLine(data: { func?: string; source: string }) {\n\t\tif (!data.func) {\n\t\t\treturn '  at <' + this._getSource(data.source) + '>';\n\t\t}\n\t\treturn '  at ' + data.func + '  <' + this._getSource(data.source) + '>';\n\t}\n\n\t/**\n\t * Parse a stack trace, apply any source mappings, and normalize its format.\n\t */\n\tprotected _normalizeStackTrace(stack: string) {\n\t\tlet lines = stack.replace(/\\s+$/, '').split('\\n');\n\t\tlet firstLine = '';\n\n\t\t// strip leading blank lines\n\t\twhile (/^\\s*$/.test(lines[0])) {\n\t\t\tlines = lines.slice(1);\n\t\t}\n\n\t\tlet stackLines = /^\\s*at /.test(lines[0])\n\t\t\t? this._processChromeTrace(lines)\n\t\t\t: this._processSafariTrace(lines);\n\n\t\tif (this.executor.config.filterErrorStack) {\n\t\t\tstackLines = stackLines.filter(line => {\n\t\t\t\treturn !(\n\t\t\t\t\t/\\binternal\\/process\\//.test(line) ||\n\t\t\t\t\t/\\bnode_modules\\/(?!digdug|leadfoot)/.test(line) ||\n\t\t\t\t\t/\\/__intern\\//.test(line) ||\n\t\t\t\t\t/\\bModule\\.(?:runMain|load)/.test(line) ||\n\t\t\t\t\t/\\bModule\\._\\w+/.test(line) ||\n\t\t\t\t\t/\\bbootstrap_node\\.js/.test(line) ||\n\t\t\t\t\t/<module.js[:>]/.test(line) ||\n\t\t\t\t\t/<anonymous>$/.test(line) ||\n\t\t\t\t\t/<native>$/.test(line)\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\treturn '\\n' + firstLine + stackLines.join('\\n');\n\t}\n\n\t/**\n\t * Process Chrome, Opera, and IE traces.\n\t *\n\t * Ex)\n\t *   at Object._updateExpressionOptions (AxiomEditor.js:511)\n\t *   at Object.<anonymous> (AxiomEditor.js:291)\n\t *   at Function.m.emit (dojo.js.uncompressed.js:8875)\n\t */\n\tprotected _processChromeTrace(lines: string[]) {\n\t\treturn lines.map(line => {\n\t\t\tlet match: RegExpMatchArray | null;\n\t\t\tif ((match = /^\\s*at (.+?) \\(([^)]+)\\)$/.exec(line))) {\n\t\t\t\treturn this._formatLine({ func: match[1], source: match[2] });\n\t\t\t} else if ((match = /^\\s*at (.*)/.exec(line))) {\n\t\t\t\treturn this._formatLine({ source: match[1] });\n\t\t\t} else {\n\t\t\t\treturn line;\n\t\t\t}\n\t\t});\n\t}\n\n\t/**\n\t * Process Safari and Firefox traces.\n\t *\n\t * Ex)\n\t *   _updateExpressionOptions@http://localhost:8080/AxiomEditor.js:511:49\n\t *   http://localhost:8080/AxiomEditor.js:291:34\n\t *   dispatchEvent@[native code]\n\t *   emit@http://ajax.googleapis.com/ajax/libs/dojo/1.12.2/dojo/dojo.js:118:282\n\t */\n\tprotected _processSafariTrace(lines: string[]) {\n\t\treturn lines.map(line => {\n\t\t\tlet match: RegExpMatchArray | null;\n\t\t\tif ((match = /^([^@]+)@(.*)/.exec(line))) {\n\t\t\t\treturn this._formatLine({ func: match[1], source: match[2] });\n\t\t\t} else if ((match = /^(\\w+:\\/\\/.*)/.exec(line))) {\n\t\t\t\treturn this._formatLine({ source: match[1] });\n\t\t\t} else {\n\t\t\t\treturn line;\n\t\t\t}\n\t\t});\n\t}\n}\n\nexport interface ErrorFormatterProperties {\n\texecutor: Executor;\n}\n\nexport interface ErrorFormatOptions {\n\tspace?: string;\n}\n"]}