{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../src/lib/common/util.ts"],"names":[],"mappings":"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","sourcesContent":["import Task from '@dojo/core/async/Task';\nimport { deepMixin, mixin } from '@dojo/core/lang';\n\nimport { Config, ResourceConfig } from './config';\nimport { Events, Executor, PluginDescriptor } from '../executors/Executor';\nimport { TextLoader } from './util';\nimport { getPathSep, join, normalize } from './path';\n\nexport interface EvaluatedProperty {\n\tname: keyof Config;\n\taddToExisting: boolean;\n}\n\nexport interface TextLoader {\n\t(path: string): Task<string>;\n}\n\nexport type TypeName =\n\t| 'string'\n\t| 'boolean'\n\t| 'number'\n\t| 'regexp'\n\t| 'object'\n\t| 'string[]'\n\t| 'object[]';\n\nexport type Parser<T = any> = (value: any) => T;\n\n/**\n * Evaluate a config property key\n */\nexport function evalProperty(key: string): EvaluatedProperty {\n\tconst addToExisting = key[key.length - 1] === '+';\n\tconst name = <keyof Config>(addToExisting\n\t\t? key.slice(0, key.length - 1)\n\t\t: key);\n\treturn { name, addToExisting };\n}\n\n/**\n * Get the base path based on a config file path and a user-supplied base path.\n *\n * The path separator will be normalized based on the separator used in\n * configFile or basePath and the optional pathSep arg.\n */\nexport function getBasePath(\n\tconfigFile: string,\n\tbasePath: string,\n\tisAbsolute: (path: string) => boolean,\n\tpathSep?: string\n) {\n\tpathSep = pathSep || getPathSep(configFile, basePath);\n\n\t// initialBasePath is the path containing the config file\n\tconst configPathParts = configFile.replace(/\\\\/g, '/').split('/');\n\tlet initialBasePath: string;\n\n\tif (configFile[0] === '/' && configPathParts.length === 2) {\n\t\tinitialBasePath = '/';\n\t} else {\n\t\tinitialBasePath = configPathParts.slice(0, -1).join('/');\n\t}\n\n\tlet finalBasePath: string;\n\n\tif (basePath) {\n\t\tbasePath = normalize(basePath);\n\n\t\tif (isAbsolute(basePath)) {\n\t\t\t// basePath is absolute, so use it directly\n\t\t\tfinalBasePath = basePath;\n\t\t} else {\n\t\t\t// basePath is relative, so resolve it against initialBasePath\n\t\t\tfinalBasePath = join(initialBasePath, basePath);\n\t\t}\n\t} else {\n\t\t// No basePath was provided, so use initialBasePath\n\t\tfinalBasePath = initialBasePath;\n\t}\n\n\treturn finalBasePath.split('/').join(pathSep);\n}\n\n/**\n * Return a string describing a config file, including any child configs.\n */\nexport function getConfigDescription(config: any, prefix = '') {\n\tlet description = '';\n\n\tif (config.description) {\n\t\tdescription += `${prefix}${config.description}\\n\\n`;\n\t}\n\n\tif (config.configs) {\n\t\tdescription += `${prefix}Configs:\\n`;\n\t\tconst width = Object.keys(config.configs).reduce((width, name) => {\n\t\t\treturn Math.max(width, name.length);\n\t\t}, 0);\n\t\tconst lines = Object.keys(config.configs).map(name => {\n\t\t\tconst child = config.configs[name];\n\t\t\twhile (name.length < width) {\n\t\t\t\tname += ' ';\n\t\t\t}\n\t\t\tlet line = `  ${name}`;\n\t\t\tif (child.description) {\n\t\t\t\tline += ` (${child.description})`;\n\t\t\t}\n\t\t\treturn `${prefix}${line}`;\n\t\t});\n\n\t\tdescription += lines.join('\\n');\n\t}\n\n\treturn description;\n}\n\n/**\n * Check if a value is a Task without directly accessing any non-existent\n * properties.\n *\n * Checking in this way is necessary when using libraries that validate property\n * accesses such as ChaiAsPromised.\n */\nexport function isTask<T = any>(value: any): value is Task<T> {\n\tif (!value || typeof value !== 'object') {\n\t\treturn false;\n\t}\n\tfor (const name of ['then', 'catch', 'finally', 'cancel']) {\n\t\tif (!(name in value) || typeof value[name] !== 'function') {\n\t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\n/**\n * Load config data from a given path, using a given text loader, and mixing\n * args and/or a childConfig into the final config value if provided.\n */\nexport function loadConfig(\n\tconfigPath: string,\n\tloadText: TextLoader,\n\targs?: { [key: string]: any },\n\tchildConfig?: string | string[]\n): Task<any> {\n\treturn _loadConfig(configPath, loadText, args, childConfig).then(config => {\n\t\t// 'config' and 'extends' are only applicable to the config loader, not\n\t\t// the Executors\n\t\tdelete config.config;\n\t\tdelete config.extends;\n\n\t\tif (!(args && (args.showConfigs || args.help))) {\n\t\t\t// 'configs' is only relevant if we're showing configs\n\t\t\tdelete config.configs;\n\t\t}\n\n\t\treturn config;\n\t});\n}\n\n/**\n * Parse an array of name=value arguments into an object\n */\nexport function parseArgs(rawArgs: string[]) {\n\tconst parsedArgs: { [key: string]: any } = {};\n\n\tfor (const arg of rawArgs) {\n\t\tlet name = arg;\n\t\tlet value: string | undefined;\n\t\tlet args = parsedArgs;\n\n\t\tconst eq = arg.indexOf('=');\n\t\tif (eq !== -1) {\n\t\t\tname = arg.slice(0, eq);\n\t\t\tvalue = arg.slice(eq + 1);\n\t\t}\n\n\t\tif (name.indexOf('.') !== -1) {\n\t\t\tconst parts = name.split('.');\n\t\t\tconst head = parts.slice(0, parts.length - 1);\n\t\t\tname = parts[parts.length - 1];\n\n\t\t\tfor (const part of head) {\n\t\t\t\tif (!args[part]) {\n\t\t\t\t\targs[part] = {};\n\t\t\t\t}\n\t\t\t\targs = args[part];\n\t\t\t}\n\t\t}\n\n\t\tif (typeof value === 'undefined') {\n\t\t\targs[name] = true;\n\t\t} else {\n\t\t\tif (!(name in args)) {\n\t\t\t\targs[name] = value;\n\t\t\t} else if (!Array.isArray(args[name])) {\n\t\t\t\targs[name] = [args[name], value];\n\t\t\t} else {\n\t\t\t\targs[name].push(value);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn parsedArgs;\n}\n\n/**\n * Parse a JSON string that may contain comments\n */\nexport function parseJson(json: string) {\n\treturn JSON.parse(removeComments(json));\n}\n\n/**\n * Parse a particular type of value from a given value\n *\n * @param name The 'name' of the value being parsed (used for error messages)\n * @param value A value to parse something from\n * @param parser The type of thing to parse, or a parser function\n * @param requiredProperty Only used with 'object' and 'object[]' parsers\n */\nexport function parseValue(\n\tname: string,\n\tvalue: any,\n\tparser: TypeName | Parser,\n\trequiredProperty?: string\n) {\n\tswitch (parser) {\n\t\tcase 'boolean':\n\t\t\tif (typeof value === 'boolean') {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (value === 'true') {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tif (value === 'false') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tthrow new Error(`Non-boolean value \"${value}\" for ${name}`);\n\n\t\tcase 'number':\n\t\t\tconst numValue = Number(value);\n\t\t\tif (!isNaN(numValue)) {\n\t\t\t\treturn numValue;\n\t\t\t}\n\t\t\tthrow new Error(`Non-numeric value \"${value}\" for ${name}`);\n\n\t\tcase 'regexp':\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn new RegExp(value);\n\t\t\t}\n\t\t\tif (value instanceof RegExp) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tthrow new Error(`Non-regexp value \"${value}\" for ${name}`);\n\n\t\tcase 'object':\n\t\t\tif (typeof value === 'string') {\n\t\t\t\ttry {\n\t\t\t\t\tvalue = value ? JSON.parse(value) : {};\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (!requiredProperty) {\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Non-object value \"${value}\" for ${name}`\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tvalue = { [requiredProperty]: value };\n\t\t\t\t}\n\t\t\t}\n\t\t\t// A value of type 'object' should be a simple object, not a\n\t\t\t// built-in type like RegExp or Array\n\t\t\tif (Object.prototype.toString.call(value) === '[object Object]') {\n\t\t\t\tif (requiredProperty && !value[requiredProperty]) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t`Invalid value \"${JSON.stringify(value)}\" for ${\n\t\t\t\t\t\t\tname\n\t\t\t\t\t\t}: missing '${requiredProperty}' property`\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tthrow new Error(`Non-object value \"${value}\" for ${name}`);\n\n\t\tcase 'object[]':\n\t\t\tif (!value) {\n\t\t\t\tvalue = [];\n\t\t\t}\n\t\t\tif (!Array.isArray(value)) {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t\treturn value.map((item: any) => {\n\t\t\t\treturn parseValue(name, item, 'object', requiredProperty);\n\t\t\t});\n\n\t\tcase 'string':\n\t\t\tif (typeof value === 'string') {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tthrow new Error(`Non-string value \"${value}\" for ${name}`);\n\n\t\tcase 'string[]':\n\t\t\tif (!value) {\n\t\t\t\tvalue = [];\n\t\t\t}\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tvalue = [value];\n\t\t\t}\n\t\t\tif (\n\t\t\t\tArray.isArray(value) &&\n\t\t\t\tvalue.every(v => typeof v === 'string')\n\t\t\t) {\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tthrow new Error(`Non-string[] value \"${value}\" for ${name}`);\n\n\t\tdefault:\n\t\t\tif (typeof parser === 'function') {\n\t\t\t\treturn parser(value);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Parser must be a valid type name');\n\t\t\t}\n\t}\n}\n\n/**\n * Return a string with all lines prefixed with a given prefix.\n */\nexport function prefix(message: string, prefix: string) {\n\treturn message\n\t\t.split('\\n')\n\t\t.map(line => prefix + line)\n\t\t.join('\\n');\n}\n\n/**\n * Process a Config option, transforming it to a canonical form and storing it\n * on the given config object.\n *\n * If an executor is provided, it will be used to emit deprecation and log\n * events.\n */\nexport function processOption<C extends Config>(\n\tkey: keyof C,\n\tvalue: any,\n\tconfig: C,\n\texecutor?: Executor\n) {\n\tconst { name, addToExisting } = evalProperty(key);\n\tconst emit = executor\n\t\t? (eventName: keyof Events, data?: any) => {\n\t\t\t\texecutor.emit(eventName, data);\n\t\t\t}\n\t\t: (..._args: any[]) => {};\n\n\tif (name === 'loader') {\n\t\tsetOption(config, name, parseValue(name, value, 'object', 'script'));\n\t} else if (\n\t\tname === 'bail' ||\n\t\tname === 'baseline' ||\n\t\tname === 'benchmark' ||\n\t\tname === 'debug' ||\n\t\tname === 'filterErrorStack' ||\n\t\tname === 'showConfig'\n\t) {\n\t\tsetOption(config, name, parseValue(name, value, 'boolean'));\n\t} else if (\n\t\tname === 'basePath' ||\n\t\tname === 'coverageVariable' ||\n\t\tname === 'description' ||\n\t\tname === 'internPath' ||\n\t\tname === 'name' ||\n\t\tname === 'sessionId'\n\t) {\n\t\tsetOption(config, name, parseValue(name, value, 'string'));\n\t} else if (name === 'defaultTimeout') {\n\t\tsetOption(config, name, parseValue(name, value, 'number'));\n\t} else if (name === 'grep') {\n\t\tsetOption(config, name, parseValue(name, value, 'regexp'));\n\t} else if (name === 'reporters') {\n\t\tsetOption(\n\t\t\tconfig,\n\t\t\tname,\n\t\t\tparseValue(name, value, 'object[]', 'name'),\n\t\t\taddToExisting\n\t\t);\n\t} else if (\n\t\tname === 'plugins' ||\n\t\tname === 'requires' ||\n\t\tname === 'require' ||\n\t\tname === 'scripts'\n\t) {\n\t\tlet useLoader = false;\n\t\tlet _name = name;\n\t\tif (name === 'scripts') {\n\t\t\temit('deprecated', {\n\t\t\t\toriginal: 'scripts',\n\t\t\t\treplacement: 'plugins'\n\t\t\t});\n\t\t\t_name = 'plugins';\n\t\t} else if (name === 'require') {\n\t\t\temit('deprecated', {\n\t\t\t\toriginal: 'require',\n\t\t\t\treplacement: 'plugins'\n\t\t\t});\n\t\t\t_name = 'plugins';\n\t\t} else if (name === 'requires') {\n\t\t\temit('deprecated', {\n\t\t\t\toriginal: 'require',\n\t\t\t\treplacement: 'plugins',\n\t\t\t\tmessage: 'Set `useLoader: true`'\n\t\t\t});\n\t\t\t_name = 'plugins';\n\t\t\tuseLoader = true;\n\t\t}\n\t\tconst parsed = parseValue(_name, value, 'object[]', 'script');\n\t\tif (useLoader) {\n\t\t\tparsed.forEach((entry: PluginDescriptor) => {\n\t\t\t\tentry.useLoader = true;\n\t\t\t});\n\t\t}\n\t\tsetOption(config, _name, parsed, addToExisting);\n\t} else if (name === 'suites') {\n\t\tsetOption(\n\t\t\tconfig,\n\t\t\tname,\n\t\t\tparseValue(name, value, 'string[]'),\n\t\t\taddToExisting\n\t\t);\n\t} else if (name === 'node' || name === 'browser') {\n\t\tconst envConfig: ResourceConfig = config[name] || {};\n\t\tif (!config[name]) {\n\t\t\tconfig[name] = envConfig;\n\t\t}\n\t\tconst envName = name;\n\t\tconst _value = parseValue(name, value, 'object');\n\t\tif (_value) {\n\t\t\tObject.keys(_value).forEach(valueKey => {\n\t\t\t\tconst key = <keyof ResourceConfig>valueKey;\n\t\t\t\tlet resource = _value[key];\n\t\t\t\tlet { name, addToExisting } = evalProperty(key);\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'loader':\n\t\t\t\t\t\tresource = parseValue(\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t'object',\n\t\t\t\t\t\t\t'script'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetOption(<Config>envConfig, name, resource, false);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'reporters':\n\t\t\t\t\t\tresource = parseValue(\n\t\t\t\t\t\t\t'reporters',\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t'object[]',\n\t\t\t\t\t\t\t'name'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tsetOption(\n\t\t\t\t\t\t\t<Config>envConfig,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\taddToExisting\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'plugins':\n\t\t\t\t\tcase 'require':\n\t\t\t\t\tcase 'requires':\n\t\t\t\t\tcase 'scripts':\n\t\t\t\t\t\tlet useLoader = false;\n\t\t\t\t\t\tif (name === 'scripts') {\n\t\t\t\t\t\t\temit('deprecated', {\n\t\t\t\t\t\t\t\toriginal: 'scripts',\n\t\t\t\t\t\t\t\treplacement: 'plugins'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tname = 'plugins';\n\t\t\t\t\t\t} else if (name === 'require') {\n\t\t\t\t\t\t\temit('deprecated', {\n\t\t\t\t\t\t\t\toriginal: 'require',\n\t\t\t\t\t\t\t\treplacement: 'plugins'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tname = 'plugins';\n\t\t\t\t\t\t} else if (name === 'requires') {\n\t\t\t\t\t\t\temit('deprecated', {\n\t\t\t\t\t\t\t\toriginal: 'requires',\n\t\t\t\t\t\t\t\treplacement: 'plugins',\n\t\t\t\t\t\t\t\tmessage: 'Set `useLoader: true`'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tname = 'plugins';\n\t\t\t\t\t\t\tuseLoader = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tresource = parseValue(\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\t'object[]',\n\t\t\t\t\t\t\t'script'\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif (useLoader) {\n\t\t\t\t\t\t\tresource.forEach((entry: PluginDescriptor) => {\n\t\t\t\t\t\t\t\tentry.useLoader = true;\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tsetOption(\n\t\t\t\t\t\t\t<Config>envConfig,\n\t\t\t\t\t\t\t<keyof Config>name,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\taddToExisting\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'suites':\n\t\t\t\t\t\tresource = parseValue(name, resource, 'string[]');\n\t\t\t\t\t\tsetOption(\n\t\t\t\t\t\t\t<Config>envConfig,\n\t\t\t\t\t\t\tname,\n\t\t\t\t\t\t\tresource,\n\t\t\t\t\t\t\taddToExisting\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t`Invalid property ${key} in ${envName} config`\n\t\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} else if (name === 'functionalBaseUrl' || name === 'serverUrl') {\n\t\tsetOption(config, name, parseValue(name, value, 'string'));\n\t} else if (name === 'proxy') {\n\t\tif (value == null) {\n\t\t\tsetOption(config, name, undefined);\n\t\t} else {\n\t\t\tsetOption(config, name, parseValue(name, value, 'string'));\n\t\t}\n\t} else if (\n\t\tname === 'capabilities' ||\n\t\tname === 'instrumenterOptions' ||\n\t\tname === 'tunnelOptions'\n\t) {\n\t\tsetOption(\n\t\t\tconfig,\n\t\t\tname,\n\t\t\tparseValue(name, value, 'object'),\n\t\t\taddToExisting\n\t\t);\n\t} else if (name === 'environments') {\n\t\t// Must be a string, object, or array of (string | object)\n\t\tlet _value = value;\n\t\tif (!_value) {\n\t\t\t_value = [];\n\t\t} else if (!Array.isArray(_value)) {\n\t\t\t_value = [_value];\n\t\t}\n\t\t_value = _value.map((val: any) => {\n\t\t\tif (typeof val === 'object' && val.browserName == null) {\n\t\t\t\tval.browserName = val.browser;\n\t\t\t}\n\t\t\treturn val;\n\t\t});\n\t\tsetOption(\n\t\t\tconfig,\n\t\t\tname,\n\t\t\tparseValue(name, _value, 'object[]', 'browserName'),\n\t\t\taddToExisting\n\t\t);\n\t} else if (name === 'excludeInstrumentation') {\n\t\temit('deprecated', {\n\t\t\toriginal: 'excludeInstrumentation',\n\t\t\treplacement: 'coverage'\n\t\t});\n\t} else if (name === 'tunnel') {\n\t\tsetOption(config, name, parseValue(name, value, 'string'));\n\t} else if (\n\t\tname === 'functionalCoverage' ||\n\t\tname === 'leaveRemoteOpen' ||\n\t\tname === 'serveOnly' ||\n\t\tname === 'runInSync'\n\t) {\n\t\tsetOption(config, name, parseValue(name, value, 'boolean'));\n\t} else if (name === 'coverage') {\n\t\tlet parsed: boolean | string[];\n\t\ttry {\n\t\t\tparsed = parseValue(name, value, 'boolean');\n\t\t} catch (error) {\n\t\t\tparsed = parseValue(name, value, 'string[]');\n\t\t}\n\t\tif (typeof parsed === 'boolean' && parsed !== false) {\n\t\t\tthrow new Error(\"Non-false boolean for 'coverage'\");\n\t\t}\n\t\tsetOption(config, name, parsed);\n\t} else if (name === 'functionalSuites') {\n\t\tsetOption(\n\t\t\tconfig,\n\t\t\tname,\n\t\t\tparseValue(name, value, 'string[]'),\n\t\t\taddToExisting\n\t\t);\n\t} else if (name === 'functionalTimeouts') {\n\t\tif (!config.functionalTimeouts) {\n\t\t\tconfig.functionalTimeouts = {};\n\t\t}\n\t\tconst parsedTimeout = parseValue(name, value, 'object');\n\t\tif (parsedTimeout) {\n\t\t\t// If the given value was an object, mix it in to the\n\t\t\t// default functionalTimeouts\n\t\t\tObject.keys(parsedTimeout).forEach(timeoutKey => {\n\t\t\t\tconst key = <keyof Config['functionalTimeouts']>timeoutKey;\n\t\t\t\tif (key === 'connectTimeout') {\n\t\t\t\t\temit('deprecated', {\n\t\t\t\t\t\toriginal: 'functionalTimeouts.connectTimeout',\n\t\t\t\t\t\treplacement: 'connectTimeout'\n\t\t\t\t\t});\n\t\t\t\t\tsetOption(\n\t\t\t\t\t\tconfig,\n\t\t\t\t\t\tkey,\n\t\t\t\t\t\tparseValue(key, parsedTimeout[key], 'number')\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\tconfig.functionalTimeouts[key] = parseValue(\n\t\t\t\t\t\t`functionalTimeouts.${key}`,\n\t\t\t\t\t\tparsedTimeout[key],\n\t\t\t\t\t\t'number'\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t});\n\t\t} else {\n\t\t\t// If the given value was null/undefined, clear out\n\t\t\t// functionalTimeouts\n\t\t\tsetOption(config, name, {});\n\t\t}\n\t} else if (\n\t\tname === 'connectTimeout' ||\n\t\tname === 'heartbeatInterval' ||\n\t\tname === 'maxConcurrency' ||\n\t\tname === 'serverPort' ||\n\t\tname === 'socketPort'\n\t) {\n\t\tsetOption(config, name, parseValue(name, value, 'number'));\n\t} else {\n\t\temit('log', `Config has unknown option \"${name}\"`);\n\t\tsetOption(config, name, value);\n\t}\n}\n\n/**\n * Remove all instances of of an item from any array and return the removed\n * instances.\n */\nexport function pullFromArray<T>(haystack: T[], needle: T): T[] {\n\tlet removed: T[] = [];\n\tlet i = 0;\n\n\twhile ((i = haystack.indexOf(needle, i)) > -1) {\n\t\tremoved.push(haystack.splice(i, 1)[0]);\n\t}\n\n\treturn removed;\n}\n\n/**\n * Remove JS-style line and block comments from a string\n */\nfunction removeComments(text: string) {\n\tlet state: 'string' | 'block-comment' | 'line-comment' | 'default' =\n\t\t'default';\n\tlet i = 0;\n\n\t// Create an array of chars from the text, the blank out anything in a\n\t// comment\n\tconst chars = text.split('');\n\n\twhile (i < chars.length) {\n\t\tswitch (state) {\n\t\t\tcase 'block-comment':\n\t\t\t\tif (chars[i] === '*' && chars[i + 1] === '/') {\n\t\t\t\t\tchars[i] = ' ';\n\t\t\t\t\tchars[i + 1] = ' ';\n\t\t\t\t\tstate = 'default';\n\t\t\t\t\ti += 2;\n\t\t\t\t} else if (chars[i] !== '\\n') {\n\t\t\t\t\tchars[i] = ' ';\n\t\t\t\t\ti += 1;\n\t\t\t\t} else {\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tcase 'line-comment':\n\t\t\t\tif (chars[i] === '\\n') {\n\t\t\t\t\tstate = 'default';\n\t\t\t\t} else {\n\t\t\t\t\tchars[i] = ' ';\n\t\t\t\t}\n\t\t\t\ti += 1;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\t\tif (chars[i] === '\"') {\n\t\t\t\t\tstate = 'default';\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (chars[i] === '\\\\' && chars[i + 1] === '\\\\') {\n\t\t\t\t\ti += 2;\n\t\t\t\t} else if (chars[i] === '\\\\' && chars[i + 1] === '\"') {\n\t\t\t\t\ti += 2;\n\t\t\t\t} else {\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tif (chars[i] === '\"') {\n\t\t\t\t\tstate = 'string';\n\t\t\t\t\ti += 1;\n\t\t\t\t} else if (chars[i] === '/' && chars[i + 1] === '*') {\n\t\t\t\t\tchars[i] = ' ';\n\t\t\t\t\tchars[i + 1] = ' ';\n\t\t\t\t\tstate = 'block-comment';\n\t\t\t\t\ti += 2;\n\t\t\t\t} else if (chars[i] === '/' && chars[i + 1] === '/') {\n\t\t\t\t\tchars[i] = ' ';\n\t\t\t\t\tchars[i + 1] = ' ';\n\t\t\t\t\tstate = 'line-comment';\n\t\t\t\t\ti += 2;\n\t\t\t\t} else {\n\t\t\t\t\ti += 1;\n\t\t\t\t}\n\t\t}\n\t}\n\n\treturn chars.join('');\n}\n\n/**\n * Set an option value.\n */\nexport function setOption(\n\tconfig: Config,\n\tname: keyof Config,\n\tvalue: any,\n\taddToExisting = false\n) {\n\tif (addToExisting) {\n\t\tconst currentValue: any = config[name];\n\t\tif (currentValue == null) {\n\t\t\tconfig[name] = value;\n\t\t} else if (Array.isArray(currentValue)) {\n\t\t\tcurrentValue.push(...value);\n\t\t} else if (typeof config[name] === 'object') {\n\t\t\tconfig[name] = deepMixin({}, config[name]!, value);\n\t\t} else {\n\t\t\tthrow new Error('Only array or object options may be added');\n\t\t}\n\t} else {\n\t\tconfig[name] = value;\n\t}\n}\n\n/**\n * Split a config path into a file name and a child config name.\n *\n * This allows for the case where a file name itself may include the config\n * separator (e.g., a scoped npm package).\n */\nexport function splitConfigPath(\n\tpath: string,\n\tseparator = '/'\n): { configFile: string; childConfig?: string } {\n\tconst lastSep = path.lastIndexOf(configPathSeparator);\n\tif (lastSep === 0) {\n\t\t// path is like '@foo' -- specifies a child config\n\t\treturn { configFile: '', childConfig: path.slice(1) };\n\t}\n\tif (lastSep === -1 || path[lastSep - 1] === separator) {\n\t\t// path is like 'foo' or 'node_modules/@foo' -- specifies a\n\t\t// path\n\t\treturn { configFile: path };\n\t}\n\n\t// path is like 'foo@bar' or 'node_modules/@foo@bar' -- specifies a path and\n\t// a child config\n\treturn {\n\t\tconfigFile: path.slice(0, lastSep),\n\t\tchildConfig: path.slice(lastSep + 1)\n\t};\n}\n\n/**\n * Convert an object to JSON, handling non-primitive properties\n *\n * @param object The object to serialise.\n * @returns A JSON string\n */\nexport function stringify(object: Object, indent?: string) {\n\treturn JSON.stringify(object, serializeReplacer, indent);\n}\n\n// ============================================================================\n// support functions\n\nfunction _loadConfig(\n\tconfigPath: string,\n\tloadText: TextLoader,\n\targs?: { [key: string]: any },\n\tchildConfig?: string | string[]\n): Task<any> {\n\treturn loadText(configPath)\n\t\t.then(text => {\n\t\t\tlet preConfig: { [key: string]: any };\n\n\t\t\ttry {\n\t\t\t\tpreConfig = parseJson(text);\n\t\t\t} catch (error) {\n\t\t\t\tthrow new Error(`Invalid JSON in ${configPath}`);\n\t\t\t}\n\n\t\t\t// extends paths are assumed to be relative and use '/'\n\t\t\tif (preConfig.extends) {\n\t\t\t\tconst parts = configPath.split('/');\n\t\t\t\tconst { configFile, childConfig } = splitConfigPath(\n\t\t\t\t\tpreConfig.extends\n\t\t\t\t);\n\t\t\t\tconst extensionPath = parts\n\t\t\t\t\t.slice(0, parts.length - 1)\n\t\t\t\t\t.concat(configFile)\n\t\t\t\t\t.join('/');\n\n\t\t\t\treturn _loadConfig(\n\t\t\t\t\textensionPath,\n\t\t\t\t\tloadText,\n\t\t\t\t\tundefined,\n\t\t\t\t\tchildConfig\n\t\t\t\t).then(extension => {\n\t\t\t\t\t// Process all keys except 'configs' from the config to the\n\t\t\t\t\t// thing it's extending\n\t\t\t\t\tObject.keys(preConfig)\n\t\t\t\t\t\t.filter(key => key !== 'configs')\n\t\t\t\t\t\t.forEach(key => {\n\t\t\t\t\t\t\tprocessOption(\n\t\t\t\t\t\t\t\t<keyof Config>key,\n\t\t\t\t\t\t\t\tpreConfig[key],\n\t\t\t\t\t\t\t\textension\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t// If config has a 'configs' property, mix its values into\n\t\t\t\t\t// extension.configs (slightly deeper mixin)\n\t\t\t\t\tif (preConfig.configs) {\n\t\t\t\t\t\tif (extension.configs == null) {\n\t\t\t\t\t\t\textension.configs = {};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tObject.keys(preConfig.configs).forEach(key => {\n\t\t\t\t\t\t\textension.configs[key] = preConfig.configs[key];\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\treturn extension;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tconst config: any = {};\n\t\t\t\tObject.keys(preConfig).forEach(key => {\n\t\t\t\t\tprocessOption(<keyof Config>key, preConfig[key], config);\n\t\t\t\t});\n\t\t\t\treturn config;\n\t\t\t}\n\t\t})\n\t\t.then(config => {\n\t\t\tif (args && (args.showConfigs || args.help)) {\n\t\t\t\t// If we're showing the configs, don't mix in children\n\t\t\t\treturn config;\n\t\t\t}\n\n\t\t\tif (childConfig) {\n\t\t\t\tconst mixinConfig = (childConfig: string | string[]) => {\n\t\t\t\t\tconst configs = Array.isArray(childConfig)\n\t\t\t\t\t\t? childConfig\n\t\t\t\t\t\t: [childConfig];\n\t\t\t\t\tconfigs.forEach(childConfig => {\n\t\t\t\t\t\tconst child = config.configs[childConfig];\n\t\t\t\t\t\tif (!child) {\n\t\t\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\t\t`Unknown child config \"${childConfig}\"`\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (child.extends) {\n\t\t\t\t\t\t\tmixinConfig(child.extends);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Mix the child into the current config. Properties\n\t\t\t\t\t\t// other than the environment resource keys ('node' and\n\t\t\t\t\t\t// 'browser') will replace values on the parent. The\n\t\t\t\t\t\t// environment resource objects will be mixed into the\n\t\t\t\t\t\t// corresponding objects on the parent.\n\t\t\t\t\t\tObject.keys(child)\n\t\t\t\t\t\t\t.filter(key => key !== 'node' && key !== 'browser')\n\t\t\t\t\t\t\t.forEach(key => {\n\t\t\t\t\t\t\t\tprocessOption(\n\t\t\t\t\t\t\t\t\t<keyof Config>key,\n\t\t\t\t\t\t\t\t\tchild[key],\n\t\t\t\t\t\t\t\t\tconfig\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t['node', 'browser'].forEach(key => {\n\t\t\t\t\t\t\tif (child[key]) {\n\t\t\t\t\t\t\t\tif (config[key]) {\n\t\t\t\t\t\t\t\t\t// Run the environment config through\n\t\t\t\t\t\t\t\t\t// setOption, then mix it into the main\n\t\t\t\t\t\t\t\t\t// config\n\t\t\t\t\t\t\t\t\tconst envConfig: any = {};\n\t\t\t\t\t\t\t\t\tprocessOption(\n\t\t\t\t\t\t\t\t\t\t<keyof Config>key,\n\t\t\t\t\t\t\t\t\t\tchild[key],\n\t\t\t\t\t\t\t\t\t\tenvConfig\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\tmixin(config[key], envConfig[key]);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tprocessOption(\n\t\t\t\t\t\t\t\t\t\t<keyof Config>key,\n\t\t\t\t\t\t\t\t\t\tchild[key],\n\t\t\t\t\t\t\t\t\t\tconfig\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t};\n\n\t\t\t\tmixinConfig(childConfig);\n\t\t\t}\n\t\t\treturn config;\n\t\t})\n\t\t.then(config => {\n\t\t\tif (args) {\n\t\t\t\t// If any non-additive resources are specified in args, they\n\t\t\t\t// will apply to all environments and will override any\n\t\t\t\t// environment specific resources.\n\t\t\t\tconst resources: (keyof ResourceConfig)[] = [\n\t\t\t\t\t'plugins',\n\t\t\t\t\t'reporters',\n\t\t\t\t\t'suites'\n\t\t\t\t];\n\t\t\t\tresources\n\t\t\t\t\t.filter(resource => resource in args)\n\t\t\t\t\t.forEach(resource => {\n\t\t\t\t\t\tconst environments: (keyof Config)[] = [\n\t\t\t\t\t\t\t'node',\n\t\t\t\t\t\t\t'browser'\n\t\t\t\t\t\t];\n\t\t\t\t\t\tenvironments\n\t\t\t\t\t\t\t.filter(environment => config[environment])\n\t\t\t\t\t\t\t.forEach(environment => {\n\t\t\t\t\t\t\t\tdelete config[environment][resource];\n\t\t\t\t\t\t\t});\n\t\t\t\t\t});\n\n\t\t\t\tObject.keys(args).forEach(key => {\n\t\t\t\t\tprocessOption(<keyof Config>key, args[key], config);\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn config;\n\t\t});\n}\n\nconst configPathSeparator = '@';\n\n/**\n * Replacer function used in stringify\n */\nfunction serializeReplacer(_key: string, value: any) {\n\tif (!value) {\n\t\treturn value;\n\t}\n\n\tif (value instanceof RegExp) {\n\t\treturn value.source;\n\t}\n\n\tif (typeof value === 'function') {\n\t\treturn value.toString();\n\t}\n\n\treturn value;\n}\n"]}