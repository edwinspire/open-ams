{"version":3,"file":"finalError.js","sourceRoot":"","sources":["../../../../src/lib/middleware/finalError.ts"],"names":[],"mappings":";;;;;;;;;;;IAEA,6BAAoC;IAEpC;QACC,MAAM,CAAC,UAAC,KAAgB,EAAE,OAAO,EAAE,QAAQ,EAAE,CAAC;YAC7C,IAAM,OAAO,GAAG,KAAK,CAAC,MAAM;gBAC3B,CAAC,CAAC,KAAK,CAAC,OAAO;gBACf,CAAC,CAAC,mBAAY,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;YAElC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,EAAE;gBACpC,cAAc,EAAE,yBAAyB;aACzC,CAAC,CAAC;YAEH,QAAQ,CAAC,GAAG,CAAC,2BAAyB,KAAK,CAAC,UAAU,SAAI,OAAO,oBAAe,KAAK,CAAC,UAAU,SAAI,OAAO,UAAK,OAAO,CAAC,GAAG,oBACtH,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,SAAM,CAAC,CAAC;QACtC,CAAC,CAAC;IACH,CAAC;IAbD,6BAaC","sourcesContent":["import { ErrorRequestHandler } from 'express';\nimport { HttpError } from 'http-errors';\nimport { STATUS_CODES } from 'http';\n\nexport default function finalError(): ErrorRequestHandler {\n\treturn (error: HttpError, request, response, _) => {\n\t\tconst message = error.expose\n\t\t\t? error.message\n\t\t\t: STATUS_CODES[error.statusCode];\n\n\t\tresponse.writeHead(error.statusCode, {\n\t\t\t'Content-Type': 'text/html;charset=utf-8'\n\t\t});\n\n\t\tresponse.end(`<!DOCTYPE html><title>${error.statusCode} ${message}</title><h1>${error.statusCode} ${message}: ${request.url}</h1>\n<!-- ${new Array(512).join('.')} -->`);\n\t};\n}\n"]}