{"version":3,"file":"post.js","sourceRoot":"","sources":["../../../../src/lib/middleware/post.ts"],"names":[],"mappings":";;;;;;;;;;;IAKA,cAA6B,OAAgB;QAC5C,MAAM,CAAC,UAAC,OAAO,EAAE,QAAQ,EAAE,IAAI;YAC9B,EAAE,CAAC,CAAC,OAAO,CAAC,MAAM,KAAK,MAAM,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,IAAI,EAAE,CAAC;YACf,CAAC;YAEO,IAAA,2BAAQ,EAAE,qCAAa,CAAa;YAE5C,IAAI,CAAC;gBACJ,IAAI,WAAW,GAAQ,OAAO,CAAC,IAAI,CAAC;gBAEpC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;oBACjC,WAAW,GAAG,CAAC,WAAW,CAAC,CAAC;gBAC7B,CAAC;gBAED,IAAM,QAAQ,GAAc,WAAW,CAAC,GAAG,CAAC,UAC3C,aAAqB;oBAErB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;gBAClC,CAAC,CAAC,CAAC;gBAEH,QAAQ,CAAC,GAAG,CAAC,wBAAwB,CAAC,CAAC;gBAEvC,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAA,OAAO,IAAI,OAAA,aAAa,CAAC,OAAO,CAAC,EAAtB,CAAsB,CAAC,CAAC;qBAC1D,IAAI,CAAC;oBACL,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;oBAC1B,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAChB,CAAC,CAAC;qBACD,KAAK,CAAC;oBACN,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;oBAC1B,QAAQ,CAAC,GAAG,EAAE,CAAC;gBAChB,CAAC,CAAC,CAAC;YACL,CAAC;YAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACZ,QAAQ,CAAC,UAAU,GAAG,GAAG,CAAC;gBAC1B,QAAQ,CAAC,GAAG,EAAE,CAAC;YAChB,CAAC;QACF,CAAC,CAAC;IACH,CAAC;IArCD,uBAqCC","sourcesContent":["import { RequestHandler } from 'express';\n\nimport { Context } from '../Server';\nimport { Message } from '../channels/Base';\n\nexport default function post(context: Context): RequestHandler {\n\treturn (request, response, next) => {\n\t\tif (request.method !== 'POST') {\n\t\t\treturn next();\n\t\t}\n\n\t\tconst { executor, handleMessage } = context;\n\n\t\ttry {\n\t\t\tlet rawMessages: any = request.body;\n\n\t\t\tif (!Array.isArray(rawMessages)) {\n\t\t\t\trawMessages = [rawMessages];\n\t\t\t}\n\n\t\t\tconst messages: Message[] = rawMessages.map(function(\n\t\t\t\tmessageString: string\n\t\t\t) {\n\t\t\t\treturn JSON.parse(messageString);\n\t\t\t});\n\n\t\t\texecutor.log('Received HTTP messages');\n\n\t\t\tPromise.all(messages.map(message => handleMessage(message)))\n\t\t\t\t.then(() => {\n\t\t\t\t\tresponse.statusCode = 204;\n\t\t\t\t\tresponse.end();\n\t\t\t\t})\n\t\t\t\t.catch(() => {\n\t\t\t\t\tresponse.statusCode = 500;\n\t\t\t\t\tresponse.end();\n\t\t\t\t});\n\t\t} catch (_) {\n\t\t\tresponse.statusCode = 500;\n\t\t\tresponse.end();\n\t\t}\n\t};\n}\n"]}