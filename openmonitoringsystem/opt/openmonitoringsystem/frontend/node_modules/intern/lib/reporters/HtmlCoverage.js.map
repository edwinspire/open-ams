{"version":3,"file":"HtmlCoverage.js","sourceRoot":"","sources":["../../../../src/lib/reporters/HtmlCoverage.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,uCAAsE;IAGtE;QAA0C,wCAAQ;QAMjD,sBAAY,QAAc,EAAE,OAAiC;YAAjC,wBAAA,EAAA,YAAiC;YAA7D,YACC,kBAAM,QAAQ,EAAE,OAAO,CAAC,SAKxB;YATQ,gBAAU,GAAe,MAAM,CAAC;YAMxC,EAAE,CAAC,CAAC,SAAS,IAAI,OAAO,CAAC,CAAC,CAAC;gBAC1B,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC,OAAQ,CAAC;YACjC,CAAC;;QACF,CAAC;QAED,yCAAkB,GAAlB;YACC,IAAM,OAAO,GAAG,iBAAM,kBAAkB,WAAE,CAAC;YAE3C,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YAE/B,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC;QACF,mBAAC;IAAD,CAAC,AArBD,CAA0C,kBAAQ,GAqBjD","sourcesContent":["import Coverage, { ReportType, CoverageProperties } from './Coverage';\nimport Node from '../executors/Node';\n\nexport default class HtmlCoverage extends Coverage\n\timplements HtmlCoverageProperties {\n\n\treadonly reportType: ReportType = 'html';\n\tverbose: boolean;\n\n\tconstructor(executor: Node, options: HtmlCoverageOptions = {}) {\n\t\tsuper(executor, options);\n\n\t\tif ('verbose' in options) {\n\t\t\tthis.verbose = options.verbose!;\n\t\t}\n\t}\n\n\tgetReporterOptions(): { [key: string]: any; } {\n\t\tconst options = super.getReporterOptions();\n\n\t\toptions.verbose = this.verbose;\n\n\t\treturn options;\n\t}\n}\n\nexport interface HtmlCoverageProperties extends CoverageProperties {\n\tverbose: boolean;\n}\n\nexport type HtmlCoverageOptions = Partial<HtmlCoverageProperties>;\n"]}