{"version":3,"file":"Pretty.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Pretty.ts"],"names":[],"mappings":"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","sourcesContent":["import * as charm from 'charm';\nimport { createCoverageMap, CoverageMap } from 'istanbul-lib-coverage';\nimport { format } from 'util';\nimport { mixin } from '@dojo/core/lang';\nimport global from '@dojo/shim/global';\n\nimport Environment from '../Environment';\nimport Suite from '../Suite';\nimport Test from '../Test';\nimport RemoteSuite from '../RemoteSuite';\nimport { createEventHandler } from './Reporter';\nimport TextCoverage, { TextCoverageProperties } from './TextCoverage';\nimport { CoverageMessage, DeprecationMessage } from '../executors/Executor';\nimport Node, { NodeEvents, TunnelMessage } from '../executors/Node';\n\nconst eventHandler = createEventHandler<NodeEvents>();\n\n/**\n * Handles presentation of runner results to the user\n */\nexport default class Pretty extends TextCoverage implements PrettyProperties {\n\tcolorReplacement: { [key: string]: string };\n\tdimensions: any;\n\ttitleWidth: number;\n\tmaxProgressBarWidth: number;\n\ttunnelState: string;\n\n\tprotected _header: string;\n\tprotected _log: string[];\n\tprotected _reports: any;\n\tprotected _spinnerOffset: number;\n\tprotected _total: Report;\n\tprotected _charm: charm.CharmInstance;\n\tprotected _renderTimeout: NodeJS.Timer;\n\n\tconstructor(executor: Node, options: PrettyOptions = {}) {\n\t\tsuper(executor, options);\n\n\t\tthis._spinnerOffset = 0;\n\t\tthis.dimensions = options.dimensions || {};\n\t\tthis.titleWidth = options.titleWidth || 12;\n\t\tthis.maxProgressBarWidth = options.maxProgressBarWidth || 40;\n\t\tthis.colorReplacement = mixin(\n\t\t\t{\n\t\t\t\t0: 'green',\n\t\t\t\t1: 'magenta',\n\t\t\t\t2: 'red',\n\t\t\t\t'✓': 'green',\n\t\t\t\t'!': 'red',\n\t\t\t\t'×': 'red',\n\t\t\t\t'~': 'magenta',\n\t\t\t\t'⚠': 'yelow'\n\t\t\t},\n\t\t\toptions.colorReplacement || {}\n\t\t);\n\t\tthis._header = '';\n\t\tthis._reports = {};\n\t\tthis._log = [];\n\t\tthis.tunnelState = '';\n\t\tthis._total = new Report();\n\t}\n\n\tclose() {\n\t\tif (this._renderTimeout) {\n\t\t\tclearTimeout(this._renderTimeout);\n\t\t}\n\t}\n\n\t@eventHandler()\n\trunStart() {\n\t\tthis._header = this.executor.config.name;\n\t\tthis._charm = this._charm || this._newCharm();\n\n\t\tconst resize = () => {\n\t\t\tthis.dimensions.width = (<any>global.process.stdout).columns || 80;\n\t\t\tthis.dimensions.height = (<any>global.process.stdout).rows || 24;\n\t\t};\n\n\t\tresize();\n\t\tglobal.process.stdout.on('resize', resize);\n\n\t\tconst rerender = () => {\n\t\t\tthis._charm.erase('screen').position(0, 0);\n\t\t\tthis._render();\n\t\t\tthis._renderTimeout = global.setTimeout(rerender, 200);\n\t\t};\n\t\trerender();\n\t}\n\n\t@eventHandler()\n\trunEnd() {\n\t\tconst charm = this._charm;\n\t\tclearTimeout(this._renderTimeout);\n\t\tcharm.erase('screen').position(0, 0);\n\n\t\t// write a full log of errors\n\t\t// Sort logs: pass < deprecated < skip < errors < fail\n\t\tconst ERROR_LOG_WEIGHT: { [key: string]: number } = {\n\t\t\t'✓': 0,\n\t\t\t'⚠': 1,\n\t\t\t'~': 2,\n\t\t\t'×': 3,\n\t\t\t'!': 4\n\t\t};\n\t\tthis._log\n\t\t\t.sort((a: any, b: any) => {\n\t\t\t\ta = ERROR_LOG_WEIGHT[a.charAt(0)] || 0;\n\t\t\t\tb = ERROR_LOG_WEIGHT[b.charAt(0)] || 0;\n\t\t\t\treturn a - b;\n\t\t\t})\n\t\t\t.forEach(line => {\n\t\t\t\tconst color = this._getColor(line);\n\t\t\t\tif (color == null) {\n\t\t\t\t\tcharm.display('reset');\n\t\t\t\t} else {\n\t\t\t\t\tcharm.foreground(color);\n\t\t\t\t}\n\t\t\t\tcharm.write(`${line}\\n`);\n\t\t\t});\n\t\tcharm.display('reset');\n\t\tcharm.write('\\n');\n\n\t\t// Display the pretty results\n\t\tthis._render(true);\n\n\t\t// Display coverage information\n\t\tif (this._total.coverageMap.files().length > 0) {\n\t\t\tcharm.write('\\n');\n\t\t\tthis.createCoverageReport('text', this._total.coverageMap);\n\t\t}\n\t}\n\n\t@eventHandler()\n\tcoverage(data: CoverageMessage) {\n\t\tconst report = this._reports[data.sessionId || ''];\n\t\treport && report.coverageMap.merge(data.coverage);\n\t\tthis._total.coverageMap.merge(data.coverage);\n\t}\n\n\t@eventHandler()\n\tsuiteStart(suite: Suite) {\n\t\tif (!suite.hasParent || suite instanceof RemoteSuite) {\n\t\t\tconst numTests = suite.numTests;\n\t\t\tthis._total.numTotal += numTests;\n\n\t\t\tif (suite.sessionId) {\n\t\t\t\tconst report = this._getReport(suite);\n\t\t\t\treport.numTotal += numTests;\n\t\t\t\treport.suiteInfo[suite.id] = {\n\t\t\t\t\tparentId: suite.parentId,\n\t\t\t\t\tnumToReport: suite.numTests\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\t@eventHandler()\n\tsuiteEnd(suite: Suite) {\n\t\tif (suite.error) {\n\t\t\t// Record all the tests that haven't been run as skipped\n\t\t\tconst info = this._getReport(suite).suiteInfo[suite.id];\n\t\t\tthis._record(suite, Result.SKIP, info.numToReport);\n\n\t\t\tconst message = '! ' + suite.id;\n\t\t\tthis._log.push(message + '\\n' + this.formatError(suite.error));\n\t\t}\n\t}\n\n\t@eventHandler()\n\ttestEnd(test: Test) {\n\t\tif (test.skipped) {\n\t\t\tthis._record(test, Result.SKIP);\n\t\t\tthis._log.push('~ ' + test.id + ': ' + (test.skipped || 'skipped'));\n\t\t} else if (test.error) {\n\t\t\tconst message = '× ' + test.id;\n\t\t\tthis._record(test, Result.FAIL);\n\t\t\tthis._log.push(message + '\\n' + this.formatError(test.error));\n\t\t} else {\n\t\t\tthis._record(test, Result.PASS);\n\t\t\tthis._log.push('✓ ' + test.id);\n\t\t}\n\t}\n\n\t@eventHandler()\n\ttunnelDownloadProgress(message: TunnelMessage) {\n\t\tconst progress = message.progress!;\n\t\tthis.tunnelState =\n\t\t\t'Downloading ' +\n\t\t\t(progress.received / progress.total * 100).toFixed(2) +\n\t\t\t'%';\n\t}\n\n\t@eventHandler()\n\ttunnelStatus(message: TunnelMessage) {\n\t\tthis.tunnelState = message.status!;\n\t}\n\n\t@eventHandler()\n\terror(error: Error) {\n\t\tconst message = '! ' + error.message;\n\t\tthis._log.push(message + '\\n' + this.formatError(error));\n\t\t// stop the render timeout on a fatal error so Intern can exit\n\t\tclearTimeout(this._renderTimeout);\n\t}\n\n\t@eventHandler()\n\tdeprecated(message: DeprecationMessage) {\n\t\tlet text = '⚠ ' + message.original + ' is deprecated.';\n\n\t\tif (message.replacement) {\n\t\t\ttext += ' Use ' + message.replacement + ' instead.';\n\t\t}\n\n\t\tif (message.message) {\n\t\t\ttext += ' ' + message.message;\n\t\t}\n\n\t\tthis._log.push(text);\n\t}\n\n\t/**\n\t * Return the report for a given session, creating it if necessary.\n\t */\n\tprivate _getReport(suiteOrTest: Suite | Test): Report {\n\t\tconst id = suiteOrTest.sessionId || '';\n\t\tif (!this._reports[id]) {\n\t\t\tthis._reports[id] = new Report(\n\t\t\t\tsuiteOrTest.remote && suiteOrTest.remote.environmentType\n\t\t\t);\n\t\t}\n\t\treturn this._reports[id];\n\t}\n\n\t/**\n\t * Create the charm instance used by this report.\n\t */\n\tprivate _newCharm() {\n\t\tconst c = charm();\n\t\tc.pipe(global.process.stdout);\n\t\treturn c;\n\t}\n\n\tprivate _record(suiteOrTest: Suite | Test, result: Result, count = 1) {\n\t\tconst report = this._reports[suiteOrTest.sessionId];\n\t\tthis._total.record(result, count);\n\t\tif (report) {\n\t\t\treport.record(result, count);\n\n\t\t\tconst suiteInfo = report.suiteInfo;\n\t\t\tlet info: SuiteInfo | undefined = suiteInfo[suiteOrTest.id];\n\t\t\t// A test ID won't be in this._suiteInfo, but it's parentId should be\n\t\t\tif (!info && suiteOrTest.parentId) {\n\t\t\t\tinfo = suiteInfo[suiteOrTest.parentId];\n\t\t\t}\n\t\t\twhile (info) {\n\t\t\t\tinfo.numToReport -= count;\n\t\t\t\tif (info.parentId) {\n\t\t\t\t\tinfo = suiteInfo[info.parentId];\n\t\t\t\t} else {\n\t\t\t\t\tinfo = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Render the progress bar\n\t * [✔︎~✔︎×✔︎✔︎✔︎✔︎✔︎✔︎] 99/100\n\t * @param report the report data to render\n\t * @param width the maximum width for the entire progress bar\n\t */\n\tprivate _drawProgressBar(report: Report, width: number) {\n\t\tconst spinnerCharacter = SPINNER_STATES[this._spinnerOffset];\n\t\tconst charm = this._charm;\n\t\tif (!report.numTotal) {\n\t\t\tcharm.write('Pending');\n\t\t\treturn;\n\t\t}\n\n\t\tconst totalTextSize = String(report.numTotal).length;\n\t\tconst remainingWidth = Math.max(width - 4 - totalTextSize * 2, 1);\n\t\tconst barSize = Math.min(\n\t\t\tremainingWidth,\n\t\t\treport.numTotal,\n\t\t\tthis.maxProgressBarWidth\n\t\t);\n\t\tconst results = report.getCompressedResults(barSize);\n\n\t\tcharm.write('[');\n\t\tresults.forEach(value => {\n\t\t\tconst color = this._getColor(value);\n\t\t\tif (color == null) {\n\t\t\t\tcharm.display('reset');\n\t\t\t} else {\n\t\t\t\tcharm.foreground(color);\n\t\t\t}\n\t\t\tcharm.write(symbols[value]);\n\t\t});\n\t\tcharm.display('reset');\n\t\tcharm.write(\n\t\t\tfit(spinnerCharacter, barSize - results.length) +\n\t\t\t\t'] ' +\n\t\t\t\tfit(report.finished, totalTextSize, true) +\n\t\t\t\t'/' +\n\t\t\t\treport.numTotal\n\t\t);\n\t}\n\n\t/**\n\t * Render a single line\n\t * TITLE:        [✔︎~✔︎×✔︎✔︎✔︎✔︎✔︎✔︎] 100/100, 2 fail, 1 skip\n\t * TODO split this into two lines. The first line will display the\n\t * title, OS and code coverage and the progress bar on the second\n\t */\n\tprivate _drawSessionReport(report: Report) {\n\t\tconst charm = this._charm;\n\t\tconst titleWidth = this.titleWidth;\n\t\tconst leftOfBar = fit(\n\t\t\tthis._abbreviateEnvironment(report.environment).slice(\n\t\t\t\t0,\n\t\t\t\ttitleWidth - 2\n\t\t\t) + ': ',\n\t\t\ttitleWidth\n\t\t);\n\t\tconst rightOfBar =\n\t\t\t'' +\n\t\t\t(report.numFailed ? ', ' + report.numFailed + ' fail' : '') +\n\t\t\t(report.numSkipped ? ', ' + report.numSkipped + ' skip' : '');\n\t\tconst barWidth = this.dimensions.width - rightOfBar.length - titleWidth;\n\n\t\tcharm.write(leftOfBar);\n\t\tthis._drawProgressBar(report, barWidth);\n\t\tcharm.write(rightOfBar + '\\n');\n\t}\n\n\t/**\n\t * Abbreviate the environment information for rendering\n\t * @param env the test environment\n\t * @returns {string} abbreviated environment information\n\t */\n\tprivate _abbreviateEnvironment(env: any): string {\n\t\tconst browser =\n\t\t\t(<{ [key: string]: any }>BROWSERS)[env.browserName.toLowerCase()] ||\n\t\t\tenv.browserName.slice(0, 4);\n\t\tconst result = [browser];\n\n\t\tif (env.version) {\n\t\t\tlet version = String(env.version);\n\t\t\tif (version.indexOf('.') > -1) {\n\t\t\t\tversion = version.slice(0, version.indexOf('.'));\n\t\t\t}\n\t\t\tresult.push(version);\n\t\t}\n\n\t\tif (env.platform) {\n\t\t\tresult.push(env.platform.slice(0, 3));\n\t\t}\n\n\t\treturn result.join(' ');\n\t}\n\n\tprivate _render(omitLogs: boolean = false) {\n\t\tconst charm = this._charm;\n\t\tconst numReports = Object.keys(this._reports).length;\n\t\tconst logLength =\n\t\t\tthis.dimensions.height -\n\t\t\tnumReports -\n\t\t\t4 /* last line & total */ -\n\t\t\t(this.tunnelState ? 2 : 0) -\n\t\t\t(numReports ? 1 : 0) -\n\t\t\t(this._header ? 1 : 0);\n\t\tthis._spinnerOffset = ++this._spinnerOffset % SPINNER_STATES.length;\n\n\t\tcharm.display('reset');\n\t\tif (this._header) {\n\t\t\tcharm.display('bright');\n\t\t\tcharm.write(this._header + '\\n');\n\t\t\tcharm.display('reset');\n\t\t}\n\t\tthis.tunnelState && charm.write('Tunnel: ' + this.tunnelState + '\\n\\n');\n\t\tthis._drawTotalReport(this._total);\n\n\t\t// TODO if there is not room to render all reports only render\n\t\t// active ones or only the total with less space\n\t\tif (numReports) {\n\t\t\tcharm.write('\\n');\n\t\t\tfor (let key in this._reports) {\n\t\t\t\tthis._drawSessionReport(this._reports[key]);\n\t\t\t}\n\t\t}\n\n\t\tif (!omitLogs && logLength > 0 && this._log.length) {\n\t\t\tconst allowed = { '×': true, '⚠': true, '!': true };\n\t\t\tcharm.write('\\n');\n\n\t\t\tthis._log\n\t\t\t\t.filter(line => {\n\t\t\t\t\treturn (<{ [key: string]: any }>allowed)[line.charAt(0)];\n\t\t\t\t})\n\t\t\t\t.slice(-logLength)\n\t\t\t\t.forEach(line => {\n\t\t\t\t\t// truncate long lines\n\t\t\t\t\tconst color = this._getColor(line);\n\t\t\t\t\tif (color) {\n\t\t\t\t\t\tcharm.foreground(color);\n\t\t\t\t\t}\n\t\t\t\t\tline = line.split('\\n', 1)[0];\n\t\t\t\t\tcharm.write(`${line.slice(0, this.dimensions.width)}\\n`);\n\t\t\t\t\tcharm.display('reset');\n\t\t\t\t});\n\t\t}\n\t}\n\n\tprivate _drawTotalReport(report: Report) {\n\t\tconst charm = this._charm;\n\t\tconst title = 'Total: ';\n\t\tconst totalTextSize = String(report.numTotal).length;\n\n\t\tcharm.write(title);\n\t\tthis._drawProgressBar(report, this.dimensions.width - title.length);\n\t\tcharm.write(\n\t\t\tformat(\n\t\t\t\t'\\nPassed: %s  Failed: %s  Skipped: %d\\n',\n\t\t\t\tfit(report.numPassed, totalTextSize),\n\t\t\t\tfit(report.numFailed, totalTextSize),\n\t\t\t\treport.numSkipped\n\t\t\t)\n\t\t);\n\t}\n\n\tprivate _getColor(value: string | number): charm.CharmColor | null {\n\t\tif (typeof value === 'string') {\n\t\t\tvalue = value[0];\n\t\t}\n\t\treturn <charm.CharmColor>this.colorReplacement[value] || null;\n\t}\n}\n\nexport interface PrettyProperties extends TextCoverageProperties {\n\tcolorReplacement: { [key: string]: string };\n\tdimensions: any;\n\tmaxProgressBarWidth: number;\n\ttitleWidth: number;\n}\n\nexport type PrettyOptions = Partial<PrettyProperties>;\n\n/**\n * Model tracking test results\n * @param environment the environment associated with the report\n * @param sessionId the sessionId associated with the report\n */\nexport class Report {\n\tenvironment: Environment | undefined;\n\tsessionId: string | undefined;\n\tnumTotal = 0;\n\tnumPassed = 0;\n\tnumFailed = 0;\n\tnumSkipped = 0;\n\tresults: number[] = [];\n\tsuiteInfo: { [id: string]: SuiteInfo };\n\tcoverageMap: CoverageMap;\n\n\tconstructor(environment?: Environment, sessionId?: string) {\n\t\tthis.environment = environment;\n\t\tthis.sessionId = sessionId;\n\t\tthis.coverageMap = createCoverageMap();\n\t\tthis.suiteInfo = {};\n\t}\n\n\tget finished() {\n\t\treturn this.results.length;\n\t}\n\n\trecord(result: Result, count = 1) {\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tthis.results.push(result);\n\t\t}\n\n\t\tswitch (result) {\n\t\t\tcase Result.PASS:\n\t\t\t\tthis.numPassed += count;\n\t\t\t\tbreak;\n\t\t\tcase Result.SKIP:\n\t\t\t\tthis.numSkipped += count;\n\t\t\t\tbreak;\n\t\t\tcase Result.FAIL:\n\t\t\t\tthis.numFailed += count;\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tgetCompressedResults(maxWidth: number): number[] {\n\t\tconst total = Math.max(this.numTotal, this.results.length);\n\t\tconst width = Math.min(maxWidth, total);\n\t\tconst resultList: Result[] = [];\n\n\t\tfor (let i = 0; i < this.results.length; ++i) {\n\t\t\tconst pos = Math.floor(i / total * width);\n\t\t\tresultList[pos] = Math.max(\n\t\t\t\tresultList[pos] || Result.PASS,\n\t\t\t\tthis.results[i]\n\t\t\t);\n\t\t}\n\n\t\treturn resultList;\n\t}\n}\n\nexport enum Result {\n\tPASS = 0,\n\tSKIP = 1,\n\tFAIL = 2\n}\n\nexport interface SuiteInfo {\n\tparentId: string | undefined;\n\tnumToReport: number;\n}\n\nconst symbols = ['✓', '~', '×'];\nconst PAD = new Array(100).join(' ');\nconst SPINNER_STATES = ['/', '-', '\\\\', '|'];\nconst BROWSERS = {\n\tchrome: 'Chr',\n\tfirefox: 'Fx',\n\topera: 'O',\n\tsafari: 'Saf',\n\t'internet explorer': 'IE',\n\tphantomjs: 'Phan'\n};\n\nfunction pad(width: number): string {\n\treturn PAD.slice(0, Math.max(width, 0));\n}\n\nfunction fit(\n\ttext: string | number,\n\twidth: number,\n\tpadLeft: boolean = false\n): string {\n\ttext = String(text);\n\tif (text.length < width) {\n\t\tif (padLeft) {\n\t\t\treturn pad(width - text.length) + text;\n\t\t}\n\t\treturn text + pad(width - text.length);\n\t}\n\treturn text.slice(0, width);\n}\n"]}