{"version":3,"file":"Runner.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Runner.ts"],"names":[],"mappings":"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","sourcesContent":["import * as charm from 'charm';\nimport { createCoverageMap, CoverageMap } from 'istanbul-lib-coverage';\nimport { Writable } from 'stream';\n\nimport Test from '../Test';\nimport Suite from '../Suite';\nimport { createEventHandler } from './Reporter';\nimport TextCoverage, { TextCoverageProperties } from './TextCoverage';\nimport Server from '../Server';\nimport { CoverageMessage, DeprecationMessage } from '../executors/Executor';\nimport Node, { NodeEvents, TunnelMessage } from '../executors/Node';\nimport { prefix } from '../common/util';\n\nexport type Charm = charm.CharmInstance;\n\nconst eventHandler = createEventHandler<NodeEvents>();\n\nexport default class Runner extends TextCoverage implements RunnerProperties {\n\tsessions: {\n\t\t[sessionId: string]: {\n\t\t\tcoverage?: CoverageMap;\n\t\t\tsuite: Suite;\n\t\t\t[key: string]: any;\n\t\t};\n\t};\n\n\thasRunErrors: boolean;\n\thasSuiteErrors: boolean;\n\thidePassed: boolean;\n\thideSkipped: boolean;\n\tserveOnly: boolean;\n\n\tprivate _deprecationMessages: { [message: string]: boolean };\n\n\tprotected charm: Charm;\n\n\tconstructor(executor: Node, options: Partial<RunnerProperties> = {}) {\n\t\tsuper(executor, options);\n\n\t\tthis.hidePassed = options.hidePassed || false;\n\t\tthis.hideSkipped = options.hideSkipped || false;\n\n\t\tthis.sessions = {};\n\t\tthis.hasRunErrors = false;\n\t\tthis.hasSuiteErrors = false;\n\t\tthis.serveOnly = executor.config.serveOnly;\n\n\t\tthis.charm = charm();\n\t\tthis.charm.pipe(<Writable>this.output);\n\t\tthis.charm.display('reset');\n\n\t\tthis._deprecationMessages = {};\n\t}\n\n\t@eventHandler()\n\tcoverage(message: CoverageMessage) {\n\t\tconst session = this.sessions[message.sessionId || ''];\n\t\tsession.coverage = session.coverage || createCoverageMap();\n\t\tsession.coverage.merge(message.coverage);\n\t}\n\n\t@eventHandler()\n\tdeprecated(message: DeprecationMessage) {\n\t\t// Keep track of deprecation messages we've seen before\n\t\tconst key = `${message.original}|${message.replacement}|${message.message}`;\n\t\tif (this._deprecationMessages[key]) {\n\t\t\treturn;\n\t\t}\n\t\tthis._deprecationMessages[key] = true;\n\n\t\tthis.charm\n\t\t\t.foreground('yellow')\n\t\t\t.write('⚠︎ ' + message.original + ' is deprecated. ');\n\n\t\tif (message.replacement) {\n\t\t\tthis.charm.write('Use ' + message.replacement + ' instead.');\n\t\t} else {\n\t\t\tthis.charm.write(\n\t\t\t\t'Please open a ticket at https://github.com/theintern/intern/issues if you still ' +\n\t\t\t\t\t'require access to this function.'\n\t\t\t);\n\t\t}\n\n\t\tif (message.message) {\n\t\t\tthis.charm.write(' ' + message.message);\n\t\t}\n\n\t\tthis.charm.write('\\n');\n\t\tthis.charm.display('reset');\n\t}\n\n\t@eventHandler()\n\terror(error: Error) {\n\t\tthis.charm.foreground('red');\n\t\tthis.charm.write('(ノಠ益ಠ)ノ彡┻━┻\\n');\n\t\tthis.charm.write(this.formatError(error));\n\t\tthis.charm.display('reset');\n\t\tthis.charm.write('\\n\\n');\n\t\tthis.hasRunErrors = true;\n\t}\n\n\t@eventHandler()\n\twarning(warning: string | Error) {\n\t\tthis.charm.foreground('yellow');\n\t\tconst message =\n\t\t\ttypeof warning === 'string' ? warning : this.formatError(warning);\n\t\tthis.charm.write(`WARNING: ${message.replace(/^Error:\\s+/, '')}`);\n\t\tthis.charm.display('reset');\n\t\tthis.charm.write('\\n\\n');\n\t}\n\n\t@eventHandler()\n\tlog(message: string) {\n\t\tmessage.split('\\n').forEach(line => {\n\t\t\tthis.console.log(`DEBUG: ${line}`);\n\t\t});\n\t}\n\n\t@eventHandler()\n\trunEnd() {\n\t\tconst map = this.executor.coverageMap;\n\t\tlet numTests = 0;\n\t\tlet numPassedTests = 0;\n\t\tlet numFailedTests = 0;\n\t\tlet numSkippedTests = 0;\n\n\t\tconst sessionIds = Object.keys(this.sessions);\n\t\tconst numEnvironments = sessionIds.length;\n\n\t\tsessionIds.forEach(sessionId => {\n\t\t\tconst session = this.sessions[sessionId];\n\t\t\tnumTests += session.suite.numTests;\n\t\t\tnumPassedTests += session.suite.numPassedTests;\n\t\t\tnumFailedTests += session.suite.numFailedTests;\n\t\t\tnumSkippedTests += session.suite.numSkippedTests;\n\t\t});\n\n\t\tconst charm = this.charm;\n\n\t\tif (map.files().length > 0) {\n\t\t\tcharm.write('\\n');\n\t\t\tcharm.display('bright');\n\t\t\tcharm.write('Total coverage\\n');\n\t\t\tcharm.display('reset');\n\t\t\tthis.createCoverageReport(this.reportType, map);\n\t\t}\n\n\t\tlet message = `TOTAL: tested ${numEnvironments} platforms, ${numPassedTests} passed, ${numFailedTests} failed`;\n\n\t\tif (numSkippedTests) {\n\t\t\tmessage += `, ${numSkippedTests} skipped`;\n\t\t}\n\n\t\tconst numUnrunTests =\n\t\t\tnumTests - (numPassedTests + numFailedTests + numSkippedTests);\n\t\tif (numUnrunTests) {\n\t\t\tmessage += `, ${numUnrunTests} not run`;\n\t\t}\n\n\t\tif (this.hasRunErrors) {\n\t\t\tmessage += '; fatal error occurred';\n\t\t} else if (this.hasSuiteErrors) {\n\t\t\tmessage += '; suite error occurred';\n\t\t}\n\n\t\tcharm.display('bright');\n\t\tcharm.foreground(\n\t\t\tnumFailedTests > 0 || this.hasRunErrors || this.hasSuiteErrors\n\t\t\t\t? 'red'\n\t\t\t\t: 'green'\n\t\t);\n\t\tcharm.write(message);\n\t\tcharm.display('reset');\n\t\tcharm.write('\\n');\n\t}\n\n\t@eventHandler()\n\tserverStart(server: Server) {\n\t\tif (this.executor.config.serveOnly) {\n\t\t\tthis.charm.write(\n\t\t\t\t`To use the browser client, browse to\\n\\n  ${this.executor\n\t\t\t\t\t.config.serverUrl}__intern/\\n\\n`\n\t\t\t);\n\t\t\tthis.charm.write('Press CTRL-C to stop serving\\n\\n');\n\t\t} else {\n\t\t\tlet message = `Listening on localhost:${server.port}`;\n\t\t\tif (server.socketPort) {\n\t\t\t\tmessage += ` (ws ${server.socketPort})`;\n\t\t\t}\n\t\t\tthis.charm.write(`${message}\\n`);\n\t\t}\n\t}\n\n\t@eventHandler()\n\tsuiteEnd(suite: Suite) {\n\t\tconst session = this.sessions[suite.sessionId || ''];\n\t\tif (!session) {\n\t\t\tif (!this.serveOnly) {\n\t\t\t\tconst charm = this.charm;\n\t\t\t\tcharm.display('bright');\n\t\t\t\tcharm.foreground('yellow');\n\t\t\t\tcharm.write(\n\t\t\t\t\t'BUG: suiteEnd was received for invalid session ' +\n\t\t\t\t\t\tsuite.sessionId\n\t\t\t\t);\n\t\t\t\tcharm.display('reset');\n\t\t\t\tcharm.write('\\n');\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (suite.error) {\n\t\t\tconst error = suite.error;\n\t\t\tconst charm = this.charm;\n\n\t\t\tcharm.foreground('red');\n\t\t\tcharm.write('Suite ' + suite.id + ' FAILED\\n');\n\t\t\tcharm.write(this.formatError(error));\n\t\t\tcharm.display('reset');\n\t\t\tcharm.write('\\n');\n\n\t\t\tthis.hasSuiteErrors = session.hasSuiteErrors = true;\n\t\t} else if (!suite.hasParent && this.executor.suites.length > 1) {\n\t\t\tif (session.coverage) {\n\t\t\t\tthis.charm.write('\\n');\n\t\t\t\tthis.createCoverageReport(this.reportType, session.coverage);\n\t\t\t} else {\n\t\t\t\tconst charm = this.charm;\n\t\t\t\tcharm.write('No unit test coverage for ' + suite.name);\n\t\t\t\tcharm.display('reset');\n\t\t\t\tcharm.write('\\n');\n\t\t\t}\n\n\t\t\tconst name = suite.name;\n\t\t\tconst hasError = suite.error || session.hasSuiteErrors;\n\t\t\tconst numTests = suite.numTests;\n\t\t\tconst numFailedTests = suite.numFailedTests;\n\t\t\tconst numSkippedTests = suite.numSkippedTests;\n\t\t\tconst numPassedTests = numTests - numFailedTests - numSkippedTests;\n\n\t\t\tlet summary = `${name}: ${numPassedTests} passed, ${numFailedTests} failed`;\n\t\t\tif (numSkippedTests) {\n\t\t\t\tsummary += `, ${numSkippedTests} skipped`;\n\t\t\t}\n\n\t\t\tif (hasError) {\n\t\t\t\tsummary += '; suite error occurred';\n\t\t\t}\n\n\t\t\tconst charm = this.charm;\n\t\t\tcharm.display('bright');\n\t\t\tcharm.foreground(numFailedTests || hasError > 0 ? 'red' : 'green');\n\t\t\tcharm.write(summary);\n\t\t\tcharm.display('reset');\n\t\t\tcharm.write('\\n');\n\t\t}\n\t}\n\n\t@eventHandler()\n\tsuiteStart(suite: Suite) {\n\t\tif (!suite.hasParent) {\n\t\t\tthis.sessions[suite.sessionId || ''] = { suite: suite };\n\t\t\tif (suite.sessionId) {\n\t\t\t\tthis.charm.write('\\n');\n\t\t\t\tthis.charm.write(\n\t\t\t\t\t'‣ Created remote session ' +\n\t\t\t\t\t\tsuite.name +\n\t\t\t\t\t\t' (' +\n\t\t\t\t\t\tsuite.sessionId +\n\t\t\t\t\t\t')\\n'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\t@eventHandler()\n\ttestEnd(test: Test) {\n\t\tconst charm = this.charm;\n\t\tif (test.error) {\n\t\t\tcharm.foreground('red');\n\t\t\tcharm.write('× ' + test.id);\n\t\t\tcharm.write(' (' + test.timeElapsed / 1000 + 's)');\n\t\t\tcharm.write('\\n');\n\t\t\tcharm.write(prefix(this.formatError(test.error), '    '));\n\t\t\tcharm.display('reset');\n\t\t\tcharm.write('\\n\\n');\n\t\t} else if (test.skipped) {\n\t\t\tif (!this.hideSkipped) {\n\t\t\t\tcharm.write('~ ' + test.id);\n\t\t\t\tcharm.display('reset');\n\t\t\t\tcharm.write(' (' + (test.skipped || 'skipped') + ')');\n\t\t\t\tcharm.display('reset');\n\t\t\t\tcharm.write('\\n');\n\t\t\t}\n\t\t} else {\n\t\t\tif (!this.hidePassed) {\n\t\t\t\tcharm.foreground('green');\n\t\t\t\tcharm.write('✓ ' + test.id);\n\t\t\t\tcharm.display('reset');\n\t\t\t\tcharm.write(' (' + test.timeElapsed / 1000 + 's)');\n\t\t\t\tcharm.display('reset');\n\t\t\t\tcharm.write('\\n');\n\t\t\t}\n\t\t}\n\t}\n\n\t@eventHandler()\n\ttunnelDownloadProgress(message: TunnelMessage) {\n\t\tconst progress = message.progress!;\n\t\tthis.charm.write(\n\t\t\t'Tunnel download: ' +\n\t\t\t\t(progress.received / progress.total * 100).toFixed(3) +\n\t\t\t\t'%\\r'\n\t\t);\n\t}\n\n\t@eventHandler()\n\ttunnelStart(_: TunnelMessage) {\n\t\tthis.charm.write('Tunnel started\\n');\n\t}\n\n\t@eventHandler()\n\ttunnelStatus(message: TunnelMessage) {\n\t\tthis.charm.write(message.status + '\\x1b[K\\r');\n\t}\n}\n\nexport interface RunnerProperties extends TextCoverageProperties {\n\thidePassed: boolean;\n\thideSkipped: boolean;\n}\n"]}