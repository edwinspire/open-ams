{"version":3,"file":"Reporter.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Reporter.ts"],"names":[],"mappings":"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","sourcesContent":["import global from '@dojo/shim/global';\n\nimport { Events, Executor, NoDataEvents, Handle } from '../executors/Executor';\nimport { ErrorFormatOptions } from '../common/ErrorFormatter';\n\n/**\n * This is a base class for reporters that provides convenienience features such\n * as event handler registration and a default console.\n */\nexport default class Reporter implements ReporterProperties {\n\treadonly executor: Executor;\n\n\tprotected _console: Console;\n\tprotected _executor: Executor;\n\tprotected _handles: Handle[];\n\tprotected _output: ReporterOutput;\n\n\t/**\n\t * A mapping from event names to the names of methods on this object. This\n\t * property should be defined on the class prototype. It is automatically\n\t * created by the @eventHandler decorator.\n\t */\n\tprotected _eventHandlers: { [eventName: string]: string };\n\n\tconstructor(executor: Executor, options: ReporterOptions = {}) {\n\t\tif (options.output) {\n\t\t\tthis.output = options.output;\n\t\t}\n\t\tif (options.console) {\n\t\t\tthis.console = options.console;\n\t\t}\n\t\tthis.executor = executor;\n\t\tthis._registerEventHandlers();\n\t}\n\n\tget console() {\n\t\tif (!this._console) {\n\t\t\tthis._console = getConsole();\n\t\t}\n\t\treturn this._console;\n\t}\n\n\tset console(value: Console) {\n\t\tthis._console = value;\n\t}\n\n\tget output() {\n\t\tif (!this._output) {\n\t\t\t// Use process.stdout in a Node.js environment, otherwise construct\n\t\t\t// a writable-like object that outputs to the console.\n\t\t\tif (global.process != null) {\n\t\t\t\treturn global.process.stdout;\n\t\t\t} else {\n\t\t\t\tconst _console = this.console;\n\t\t\t\tthis._output = {\n\t\t\t\t\twrite(\n\t\t\t\t\t\tchunk: string,\n\t\t\t\t\t\t_encoding: string,\n\t\t\t\t\t\tcallback: Function\n\t\t\t\t\t) {\n\t\t\t\t\t\t_console.log(chunk);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t},\n\t\t\t\t\tend(chunk: string, _encoding: string, callback: Function) {\n\t\t\t\t\t\t_console.log(chunk);\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t\treturn this._output;\n\t}\n\n\tset output(value: ReporterOutput) {\n\t\tthis._output = value;\n\t}\n\n\tformatError(error: Error, options?: ErrorFormatOptions) {\n\t\treturn this.executor.formatError(error, options);\n\t}\n\n\t/**\n\t * Register any handlers added to the class event handlers map\n\t */\n\tprotected _registerEventHandlers() {\n\t\tif (!this._eventHandlers) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Use a for..in loop because _eventHandlers may inherit from a parent\n\t\tfor (let name in this._eventHandlers) {\n\t\t\tthis.executor.on(<keyof Events>name, (...args: any[]) => {\n\t\t\t\tconst handler = this._eventHandlers[name];\n\t\t\t\treturn (<any>this)[handler](...args);\n\t\t\t});\n\t\t}\n\t}\n}\n\n/**\n * Create a decorator that will add a decorated method to a class's list of\n * event handlers.\n */\nexport function createEventHandler<\n\tE extends Events,\n\tN extends NoDataEvents = NoDataEvents\n>() {\n\treturn function() {\n\t\tfunction decorate(\n\t\t\ttarget: any,\n\t\t\tpropertyKey: N,\n\t\t\t_descriptor: TypedPropertyDescriptor<() => void>\n\t\t): void;\n\t\tfunction decorate<T extends keyof E>(\n\t\t\ttarget: any,\n\t\t\tpropertyKey: T,\n\t\t\t_descriptor: TypedPropertyDescriptor<(data: E[T]) => void>\n\t\t): void;\n\t\tfunction decorate<T extends keyof E>(\n\t\t\ttarget: any,\n\t\t\tpropertyKey: T,\n\t\t\t_descriptor: TypedPropertyDescriptor<(data?: E[T]) => void>\n\t\t) {\n\t\t\tif (!target.hasOwnProperty('_eventHandlers')) {\n\t\t\t\tif (target._eventHandlers != null) {\n\t\t\t\t\t// If there's an _eventHandlers property on a parent,\n\t\t\t\t\t// inherit from it\n\t\t\t\t\ttarget._eventHandlers = Object.create(\n\t\t\t\t\t\ttarget._eventHandlers\n\t\t\t\t\t);\n\t\t\t\t} else {\n\t\t\t\t\ttarget._eventHandlers = {};\n\t\t\t\t}\n\t\t\t}\n\t\t\ttarget._eventHandlers[propertyKey] = propertyKey;\n\t\t}\n\t\treturn decorate;\n\t};\n}\n\n/**\n * The default event handler decorator.\n */\nexport const eventHandler = createEventHandler();\n\nexport interface ReporterProperties {\n\toutput: ReporterOutput;\n\tconsole: Console;\n}\n\nexport type ReporterOptions = Partial<ReporterProperties>;\n\n/**\n * A stream that reporters can write to\n */\nexport interface ReporterOutput {\n\twrite(chunk: string | Buffer, encoding?: string, callback?: Function): void;\n\tend(chunk: string | Buffer, encoding?: string, callback?: Function): void;\n}\n\nfunction getConsole() {\n\tif (typeof console !== 'undefined') {\n\t\treturn console;\n\t}\n\n\treturn <Console>{\n\t\tassert: noop,\n\t\tcount: noop,\n\t\tdir: noop,\n\t\terror: noop,\n\t\texception: noop,\n\t\tinfo: noop,\n\t\tlog: noop,\n\t\ttable: noop,\n\t\ttime: noop,\n\t\ttimeEnd: noop,\n\t\ttrace: noop,\n\t\twarn: noop\n\t};\n}\n\nfunction noop() {\n\t// do nothing\n}\n"]}