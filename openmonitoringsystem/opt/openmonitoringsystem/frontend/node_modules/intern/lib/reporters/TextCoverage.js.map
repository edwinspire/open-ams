{"version":3,"file":"TextCoverage.js","sourceRoot":"","sources":["../../../../src/lib/reporters/TextCoverage.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,uCAAsE;IAGtE;QAA0C,wCAAQ;QAMjD,sBAAY,QAAc,EAAE,OAAiC;YAAjC,wBAAA,EAAA,YAAiC;YAA7D,YACC,kBAAM,QAAQ,EAAE,OAAO,CAAC,SAKxB;YATQ,gBAAU,GAAe,MAAM,CAAC;YAMxC,EAAE,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;gBACxB,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;YACtC,CAAC;;QACF,CAAC;QAED,yCAAkB,GAAlB;YACC,IAAM,OAAO,GAAG,iBAAM,kBAAkB,WAAE,CAAC;YAE3C,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;YAErC,MAAM,CAAC,OAAO,CAAC;QAChB,CAAC;QACF,mBAAC;IAAD,CAAC,AArBD,CAA0C,kBAAQ,GAqBjD","sourcesContent":["import Coverage, { ReportType, CoverageProperties } from './Coverage';\nimport Node from '../executors/Node';\n\nexport default class TextCoverage extends Coverage\n\timplements TextCoverageProperties {\n\n\treadonly reportType: ReportType = 'text';\n\tmaxColumns: number;\n\n\tconstructor(executor: Node, options: TextCoverageOptions = {}) {\n\t\tsuper(executor, options);\n\n\t\tif (options.maxColumns) {\n\t\t\tthis.maxColumns = options.maxColumns;\n\t\t}\n\t}\n\n\tgetReporterOptions(): { [key: string]: any; } {\n\t\tconst options = super.getReporterOptions();\n\n\t\toptions.maxColumns = this.maxColumns;\n\n\t\treturn options;\n\t}\n}\n\nexport interface TextCoverageProperties extends CoverageProperties {\n\t/** Maximum number of columns */\n\tmaxColumns: number;\n}\n\nexport type TextCoverageOptions = Partial<TextCoverageProperties>;\n"]}