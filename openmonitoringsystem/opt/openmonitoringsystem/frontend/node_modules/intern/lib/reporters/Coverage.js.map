{"version":3,"file":"Coverage.js","sourceRoot":"","sources":["../../../../src/lib/reporters/Coverage.ts"],"names":[],"mappings":";;;;;;;;;;;;IAAA,+DAI+B;IAC/B,2DAA6E;IAC7E,qDAAsD;IACtD,uCAA8E;IAK9E,IAAM,YAAY,GAAG,6BAAkB,EAAc,CAAC;IAEtD;QAA+C,oCAAQ;QAStD,kBAAY,QAAc,EAAE,OAA6B;YAA7B,wBAAA,EAAA,YAA6B;YAAzD,YACC,kBAAM,QAAQ,EAAE,OAAO,CAAC,SAWxB;YATA,IAAI,OAAO,CAAC,QAAQ,EAAE;gBACrB,KAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,QAAQ,CAAC;aACjC;YACD,IAAI,OAAO,CAAC,SAAS,EAAE;gBACtB,KAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;aACnC;YACD,IAAI,OAAO,CAAC,UAAU,EAAE;gBACvB,KAAI,CAAC,UAAU,GAAG,OAAO,CAAC,UAAU,CAAC;aACrC;;QACF,CAAC;QAED,qCAAkB,GAAlB;YACC,OAAO;gBACN,IAAI,EAAE,IAAI,CAAC,QAAQ;aACnB,CAAC;QACH,CAAC;QAED,uCAAoB,GAApB,UACC,IAAgB,EAChB,IAAmC;YAEnC,IAAI,GAAgB,CAAC;YAErB,IAAI,aAAa,CAAC,IAAI,CAAC,EAAE;gBACxB,GAAG,GAAG,IAAI,CAAC;aACX;iBAAM;gBACN,GAAG,GAAG,yCAAiB,CAAC,IAAI,CAAC,CAAC;aAC9B;YAED,IAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,iBAAiB,CAAC,GAAG,CAAC,CAAC;YAExE,IAAM,OAAO,GAAG,mCAAa,CAAC;gBAC7B,GAAG,EAAE,IAAI,CAAC,SAAS;gBACnB,YAAY,EAAE,WAAW,CAAC,YAAY;gBACtC,UAAU,EAAE,IAAI,CAAC,UAAU;aAC3B,CAAC,CAAC;YACH,IAAM,IAAI,GAAG,iCAAW,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC9C,IAAM,MAAM,GAAG,yBAAM,CAAC,IAAI,EAAE,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;YACvD,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC7B,CAAC;QAGD,yBAAM,GAAN;YACC,IAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;YACtC,IAAI,GAAG,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBAC3B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;aAChD;QACF,CAAC;QALD;YADC,YAAY,EAAE;8CAMd;QACF,eAAC;KAAA,AA5DD,CAA+C,kBAAQ,GA4DtD;sBA5D6B,QAAQ;IA2EtC,uBAAuB,KAAU;QAChC,OAAO,KAAK,IAAI,IAAI,IAAI,OAAO,KAAK,CAAC,KAAK,KAAK,UAAU,CAAC;IAC3D,CAAC","sourcesContent":["import {\n\tCoverageMap,\n\tCoverageMapData,\n\tcreateCoverageMap\n} from 'istanbul-lib-coverage';\nimport { createContext, summarizers, Watermarks } from 'istanbul-lib-report';\nimport { create, ReportType } from 'istanbul-reports';\nimport Reporter, { createEventHandler, ReporterProperties } from './Reporter';\nimport Node, { NodeEvents } from '../executors/Node';\n\nexport { ReportType };\n\nconst eventHandler = createEventHandler<NodeEvents>();\n\nexport default abstract class Coverage extends Reporter\n\timplements CoverageProperties {\n\tabstract readonly reportType: ReportType;\n\treadonly executor!: Node;\n\n\tfilename?: string;\n\tdirectory?: string;\n\twatermarks?: Watermarks;\n\n\tconstructor(executor: Node, options: CoverageOptions = {}) {\n\t\tsuper(executor, options);\n\n\t\tif (options.filename) {\n\t\t\tthis.filename = options.filename;\n\t\t}\n\t\tif (options.directory) {\n\t\t\tthis.directory = options.directory;\n\t\t}\n\t\tif (options.watermarks) {\n\t\t\tthis.watermarks = options.watermarks;\n\t\t}\n\t}\n\n\tgetReporterOptions(): { [key: string]: any } {\n\t\treturn {\n\t\t\tfile: this.filename\n\t\t};\n\t}\n\n\tcreateCoverageReport(\n\t\ttype: ReportType,\n\t\tdata: CoverageMapData | CoverageMap\n\t) {\n\t\tlet map: CoverageMap;\n\n\t\tif (isCoverageMap(data)) {\n\t\t\tmap = data;\n\t\t} else {\n\t\t\tmap = createCoverageMap(data);\n\t\t}\n\n\t\tconst transformed = this.executor.sourceMapStore.transformCoverage(map);\n\n\t\tconst context = createContext({\n\t\t\tdir: this.directory,\n\t\t\tsourceFinder: transformed.sourceFinder,\n\t\t\twatermarks: this.watermarks\n\t\t});\n\t\tconst tree = summarizers.pkg(transformed.map);\n\t\tconst report = create(type, this.getReporterOptions());\n\t\ttree.visit(report, context);\n\t}\n\n\t@eventHandler()\n\trunEnd(): void {\n\t\tconst map = this.executor.coverageMap;\n\t\tif (map.files().length > 0) {\n\t\t\tthis.createCoverageReport(this.reportType, map);\n\t\t}\n\t}\n}\n\nexport interface CoverageProperties extends ReporterProperties {\n\t/** A filename to write coverage data to */\n\tfilename?: string;\n\n\t/** A direcotry to write coverage data to */\n\tdirectory?: string;\n\n\t/** Watermarks used to check coverage */\n\twatermarks?: Watermarks;\n}\n\nexport type CoverageOptions = Partial<CoverageProperties>;\n\nfunction isCoverageMap(value: any): value is CoverageMap {\n\treturn value != null && typeof value.files === 'function';\n}\n"]}